{
    "conflicts": [
        {
            "id": "fea76a72-ab54-4e91-acb6-076bca39ad72",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse App\\Models\\Damaged;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\DamagedResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\DamagedResource\\RelationManagers;\n\nclass DamagedResource extends Resource\n{\n    protected static ?string $model = Damaged::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 6;\n\n    protected static ?string $navigationGroup = 'Stock Management';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.damageds.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.damageds.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.damageds.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            'in_where_house' => 'In where house',\n                            'asset' => 'Asset',\n                            'in_maintenance' => 'In maintenance',\n                            'damaged' => 'Damaged',\n                        ]),\n\n                    Select::make('warehouse_id')\n                        ->required()\n                        ->relationship('warehouse', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('user_id')\n                        ->nullable()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('barcode')\n                        ->nullable()\n                        ->string(),\n\n                    TextInput::make('barcode_image')\n                        ->nullable()\n                        ->string(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('warehouse.name'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('barcode'),\n\n                TextColumn::make('barcode_image'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListDamageds::route('/'),\n            'create' => Pages\\CreateDamaged::route('/create'),\n            'view' => Pages\\ViewDamaged::route('/{record}'),\n            'edit' => Pages\\EditDamaged::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse App\\Models\\Damaged;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\DamagedResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\DamagedResource\\RelationManagers;\n\nclass DamagedResource extends Resource\n{\n    protected static ?string $model = Damaged::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.damageds.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.damageds.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.damageds.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            'in_where_house' => 'In where house',\n                            'asset' => 'Asset',\n                            'in_maintenance' => 'In maintenance',\n                            'damaged' => 'Damaged',\n                        ]),\n\n                    Select::make('warehouse_id')\n                        ->required()\n                        ->relationship('warehouse', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('user_id')\n                        ->nullable()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('barcode')\n                        ->nullable()\n                        ->string(),\n\n                    TextInput::make('barcode_image')\n                        ->nullable()\n                        ->string(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('warehouse.name'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('barcode'),\n\n                TextColumn::make('barcode_image'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListDamageds::route('/'),\n            'create' => Pages\\CreateDamaged::route('/create'),\n            'view' => Pages\\ViewDamaged::route('/{record}'),\n            'edit' => Pages\\EditDamaged::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}