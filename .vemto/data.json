{
    "tables": {
        "projects": {
            "item_1": {
                "uuid": "df92816c-91ba-425d-b481-a71bb1a20579",
                "id": 1,
                "createdAt": "2025-01-29 16:24:53",
                "updatedAt": "2025-01-30 12:45:01",
                "settings": {
                    "cssFramework": "tailwind",
                    "uiStarterKit": "jetstream",
                    "usesLivewire": true,
                    "usesInertia": false,
                    "usesVue": false,
                    "usesReact": false,
                    "usesSvelte": false,
                    "isFreshLaravelProject": true,
                    "schemaReaderMode": "migration",
                    "schemaReaderDbDriver": "mysql",
                    "schemaReaderDbHost": "127.0.0.1",
                    "schemaReaderDbPort": "3306",
                    "schemaReaderDbUsername": "root",
                    "schemaReaderDbPassword": null,
                    "schemaReaderDbDatabase": "vemto_schema_reader",
                    "laravelVersion": "11.0"
                },
                "canShowSchemaSourceChangesAlert": true,
                "codeGenerationSettings": {
                    "models": true,
                    "factories": true,
                    "seeders": true,
                    "policies": true,
                    "requests": true,
                    "controllers": true,
                    "routes": true,
                    "views": true,
                    "uiComponents": true,
                    "livewireLayout": true,
                    "translationsOnViews": true,
                    "translationsFormat": "underscore"
                },
                "languages": [
                    "en"
                ],
                "defaultLanguage": "en",
                "translations": {
                    "en": {
                        "navigation.home": "Home",
                        "navigation.apps": "Apps",
                        "crud.suppliers.itemTitle": "Supplier",
                        "crud.suppliers.collectionTitle": "Suppliers",
                        "crud.suppliers.inputs.name.label": "Name",
                        "crud.suppliers.inputs.name.placeholder": "Name",
                        "crud.suppliers.filament.name.helper_text": "",
                        "crud.suppliers.filament.name.label": "",
                        "crud.suppliers.filament.name.description": "",
                        "crud.suppliers.inputs.phone.label": "Phone",
                        "crud.suppliers.inputs.phone.placeholder": "Phone",
                        "crud.suppliers.filament.phone.helper_text": "",
                        "crud.suppliers.filament.phone.label": "",
                        "crud.suppliers.filament.phone.description": "",
                        "crud.suppliers.inputs.location.label": "Location",
                        "crud.suppliers.inputs.location.placeholder": "Location",
                        "crud.suppliers.filament.location.helper_text": "",
                        "crud.suppliers.filament.location.label": "",
                        "crud.suppliers.filament.location.description": "",
                        "crud.orders.itemTitle": "Order",
                        "crud.orders.collectionTitle": "Orders",
                        "crud.orders.inputs.warehouse_id.label": "Warehouse id",
                        "crud.orders.inputs.warehouse_id.placeholder": "Warehouse id",
                        "crud.orders.filament.warehouse_id.helper_text": "",
                        "crud.orders.filament.warehouse_id.loading_message": "",
                        "crud.orders.filament.warehouse_id.no_result_message": "",
                        "crud.orders.filament.warehouse_id.search_message": "",
                        "crud.orders.filament.warehouse_id.label": "",
                        "crud.orders.inputs.name.label": "Name",
                        "crud.orders.inputs.name.placeholder": "Name",
                        "crud.orders.filament.name.helper_text": "",
                        "crud.orders.filament.name.label": "",
                        "crud.orders.filament.name.description": "",
                        "crud.orders.inputs.status.label": "Status",
                        "crud.orders.inputs.status.placeholder": "Status",
                        "crud.orders.filament.status.helper_text": "",
                        "crud.orders.filament.status.label": "",
                        "crud.orders.filament.status.description": "",
                        "crud.orders.inputs.supplier_id.label": "Supplier id",
                        "crud.orders.inputs.supplier_id.placeholder": "Supplier id",
                        "crud.orders.filament.supplier_id.helper_text": "",
                        "crud.orders.filament.supplier_id.loading_message": "",
                        "crud.orders.filament.supplier_id.no_result_message": "",
                        "crud.orders.filament.supplier_id.search_message": "",
                        "crud.orders.filament.supplier_id.label": "",
                        "crud.orderItems.itemTitle": "Order Item",
                        "crud.orderItems.collectionTitle": "Order Items",
                        "crud.orderItems.inputs.name.label": "Name",
                        "crud.orderItems.inputs.name.placeholder": "Name",
                        "crud.orderItems.filament.name.helper_text": "",
                        "crud.orderItems.filament.name.label": "",
                        "crud.orderItems.filament.name.description": "",
                        "crud.orderItems.inputs.status.label": "Status",
                        "crud.orderItems.inputs.status.placeholder": "Status",
                        "crud.orderItems.filament.status.helper_text": "",
                        "crud.orderItems.filament.status.loading_message": "",
                        "crud.orderItems.filament.status.no_result_message": "",
                        "crud.orderItems.filament.status.search_message": "",
                        "crud.orderItems.filament.status.label": "",
                        "crud.orderItems.inputs.price.label": "Price",
                        "crud.orderItems.inputs.price.placeholder": "Price",
                        "crud.orderItems.filament.price.helper_text": "",
                        "crud.orderItems.filament.price.label": "",
                        "crud.orderItems.filament.price.description": "",
                        "crud.warehouses.itemTitle": "Warehouse",
                        "crud.warehouses.collectionTitle": "Warehouses",
                        "crud.warehouses.inputs.name.label": "Name",
                        "crud.warehouses.inputs.name.placeholder": "Name",
                        "crud.warehouses.filament.name.helper_text": "",
                        "crud.warehouses.filament.name.label": "",
                        "crud.warehouses.filament.name.description": "",
                        "crud.warehouses.inputs.location.label": "Location",
                        "crud.warehouses.inputs.location.placeholder": "Location",
                        "crud.warehouses.filament.location.helper_text": "",
                        "crud.warehouses.filament.location.label": "",
                        "crud.warehouses.filament.location.description": "",
                        "crud.items.itemTitle": "Item",
                        "crud.items.collectionTitle": "Items",
                        "crud.items.inputs.name.label": "Name",
                        "crud.items.inputs.name.placeholder": "Name",
                        "crud.items.filament.name.helper_text": "",
                        "crud.items.filament.name.label": "",
                        "crud.items.filament.name.description": "",
                        "crud.items.inputs.status.label": "Status",
                        "crud.items.inputs.status.placeholder": "Status",
                        "crud.items.filament.status.helper_text": "",
                        "crud.items.filament.status.loading_message": "",
                        "crud.items.filament.status.no_result_message": "",
                        "crud.items.filament.status.search_message": "",
                        "crud.items.filament.status.label": "",
                        "crud.items.inputs.user_id.label": "User id",
                        "crud.items.inputs.user_id.placeholder": "User id",
                        "crud.items.filament.user_id.helper_text": "",
                        "crud.items.filament.user_id.loading_message": "",
                        "crud.items.filament.user_id.no_result_message": "",
                        "crud.items.filament.user_id.search_message": "",
                        "crud.items.filament.user_id.label": "",
                        "crud.userWarehouse.itemTitle": "User Warehouse",
                        "crud.userWarehouse.collectionTitle": "User Warehouse",
                        "crud.items.inputs.warehouse_id.label": "Warehouse id",
                        "crud.items.inputs.warehouse_id.placeholder": "Warehouse id",
                        "crud.items.filament.warehouse_id.helper_text": "",
                        "crud.items.filament.warehouse_id.loading_message": "",
                        "crud.items.filament.warehouse_id.no_result_message": "",
                        "crud.items.filament.warehouse_id.search_message": "",
                        "crud.items.filament.warehouse_id.label": "",
                        "crud.maintenanceItems.itemTitle": "Maintenance Item",
                        "crud.maintenanceItems.collectionTitle": "Maintenance Items",
                        "crud.maintenanceItems.inputs.status.label": "Status",
                        "crud.maintenanceItems.inputs.status.placeholder": "Status",
                        "crud.maintenanceItems.filament.status.helper_text": "",
                        "crud.maintenanceItems.filament.status.label": "",
                        "crud.maintenanceItems.filament.status.description": "",
                        "crud.maintenanceItems.inputs.note.label": "Note",
                        "crud.maintenanceItems.inputs.note.placeholder": "Note",
                        "crud.maintenanceItems.filament.note.helper_text": "",
                        "crud.maintenanceItems.filament.note.label": "",
                        "crud.maintenanceItems.inputs.maintenance_department_id.label": "Maintenance department id",
                        "crud.maintenanceItems.inputs.maintenance_department_id.placeholder": "Maintenance department id",
                        "crud.maintenanceItems.filament.maintenance_department_id.helper_text": "",
                        "crud.maintenanceItems.filament.maintenance_department_id.loading_message": "",
                        "crud.maintenanceItems.filament.maintenance_department_id.no_result_message": "",
                        "crud.maintenanceItems.filament.maintenance_department_id.search_message": "",
                        "crud.maintenanceItems.filament.maintenance_department_id.label": "",
                        "crud.assets.itemTitle": "Asset",
                        "crud.assets.collectionTitle": "Assets",
                        "crud.assets.inputs.name.label": "Name",
                        "crud.assets.inputs.name.placeholder": "Name",
                        "crud.assets.filament.name.helper_text": "",
                        "crud.assets.filament.name.label": "",
                        "crud.assets.filament.name.description": "",
                        "crud.assets.inputs.status.label": "Status",
                        "crud.assets.inputs.status.placeholder": "Status",
                        "crud.assets.filament.status.helper_text": "",
                        "crud.assets.filament.status.loading_message": "",
                        "crud.assets.filament.status.no_result_message": "",
                        "crud.assets.filament.status.search_message": "",
                        "crud.assets.filament.status.label": "",
                        "crud.assets.inputs.user_id.label": "User id",
                        "crud.assets.inputs.user_id.placeholder": "User id",
                        "crud.assets.filament.user_id.helper_text": "",
                        "crud.assets.filament.user_id.loading_message": "",
                        "crud.assets.filament.user_id.no_result_message": "",
                        "crud.assets.filament.user_id.search_message": "",
                        "crud.assets.filament.user_id.label": "",
                        "crud.assets.inputs.warehouse_id.label": "Warehouse id",
                        "crud.assets.inputs.warehouse_id.placeholder": "Warehouse id",
                        "crud.assets.filament.warehouse_id.helper_text": "",
                        "crud.assets.filament.warehouse_id.loading_message": "",
                        "crud.assets.filament.warehouse_id.no_result_message": "",
                        "crud.assets.filament.warehouse_id.search_message": "",
                        "crud.assets.filament.warehouse_id.label": "",
                        "crud.maintenanceItems.inputs.item_id.label": "Item id",
                        "crud.maintenanceItems.inputs.item_id.placeholder": "Item id",
                        "crud.maintenanceItems.filament.item_id.helper_text": "",
                        "crud.maintenanceItems.filament.item_id.loading_message": "",
                        "crud.maintenanceItems.filament.item_id.no_result_message": "",
                        "crud.maintenanceItems.filament.item_id.search_message": "",
                        "crud.maintenanceItems.filament.item_id.label": "",
                        "crud.maintenanceDepartments.itemTitle": "Maintenance Department",
                        "crud.maintenanceDepartments.collectionTitle": "Maintenance Departments",
                        "crud.maintenanceDepartments.inputs.name.label": "Name",
                        "crud.maintenanceDepartments.inputs.name.placeholder": "Name",
                        "crud.maintenanceDepartments.filament.name.helper_text": "",
                        "crud.maintenanceDepartments.filament.name.label": "",
                        "crud.maintenanceDepartments.filament.name.description": "",
                        "crud.maintenanceDepartments.inputs.location.label": "Location",
                        "crud.maintenanceDepartments.inputs.location.placeholder": "Location",
                        "crud.maintenanceDepartments.filament.location.helper_text": "",
                        "crud.maintenanceDepartments.filament.location.label": "",
                        "crud.maintenanceDepartments.filament.location.description": "",
                        "crud.maintenanceDepartments.inputs.type.label": "Type",
                        "crud.maintenanceDepartments.inputs.type.placeholder": "Type",
                        "crud.maintenanceDepartments.filament.type.helper_text": "",
                        "crud.maintenanceDepartments.filament.type.loading_message": "",
                        "crud.maintenanceDepartments.filament.type.no_result_message": "",
                        "crud.maintenanceDepartments.filament.type.search_message": "",
                        "crud.maintenanceDepartments.filament.type.label": "",
                        "crud.maintenanceItems.inputs.asset_id.label": "Asset id",
                        "crud.maintenanceItems.inputs.asset_id.placeholder": "Asset id",
                        "crud.maintenanceItems.filament.asset_id.helper_text": "",
                        "crud.maintenanceItems.filament.asset_id.loading_message": "",
                        "crud.maintenanceItems.filament.asset_id.no_result_message": "",
                        "crud.maintenanceItems.filament.asset_id.search_message": "",
                        "crud.maintenanceItems.filament.asset_id.label": "",
                        "crud.damageds.itemTitle": "Damaged",
                        "crud.damageds.collectionTitle": "Damageds",
                        "crud.damageds.inputs.name.label": "Name",
                        "crud.damageds.inputs.name.placeholder": "Name",
                        "crud.damageds.filament.name.helper_text": "",
                        "crud.damageds.filament.name.label": "",
                        "crud.damageds.filament.name.description": "",
                        "crud.damageds.inputs.status.label": "Status",
                        "crud.damageds.inputs.status.placeholder": "Status",
                        "crud.damageds.filament.status.helper_text": "",
                        "crud.damageds.filament.status.loading_message": "",
                        "crud.damageds.filament.status.no_result_message": "",
                        "crud.damageds.filament.status.search_message": "",
                        "crud.damageds.filament.status.label": "",
                        "crud.damageds.inputs.warehouse_id.label": "Warehouse id",
                        "crud.damageds.inputs.warehouse_id.placeholder": "Warehouse id",
                        "crud.damageds.filament.warehouse_id.helper_text": "",
                        "crud.damageds.filament.warehouse_id.loading_message": "",
                        "crud.damageds.filament.warehouse_id.no_result_message": "",
                        "crud.damageds.filament.warehouse_id.search_message": "",
                        "crud.damageds.filament.warehouse_id.label": "",
                        "crud.damageds.inputs.user_id.label": "User id",
                        "crud.damageds.inputs.user_id.placeholder": "User id",
                        "crud.damageds.filament.user_id.helper_text": "",
                        "crud.damageds.filament.user_id.loading_message": "",
                        "crud.damageds.filament.user_id.no_result_message": "",
                        "crud.damageds.filament.user_id.search_message": "",
                        "crud.damageds.filament.user_id.label": "",
                        "crud.damageds.inputs.barcode.label": "Barcode",
                        "crud.damageds.inputs.barcode.placeholder": "Barcode",
                        "crud.damageds.filament.barcode.helper_text": "",
                        "crud.damageds.filament.barcode.label": "",
                        "crud.damageds.filament.barcode.description": "",
                        "crud.damageds.inputs.barcode_image.label": "Barcode image",
                        "crud.damageds.inputs.barcode_image.placeholder": "Barcode image",
                        "crud.damageds.filament.barcode_image.helper_text": "",
                        "crud.damageds.filament.barcode_image.label": "",
                        "crud.damageds.filament.barcode_image.description": "",
                        "crud.users.itemTitle": "Employee",
                        "crud.users.collectionTitle": "Employees",
                        "crud.users.inputs.name.label": "Name",
                        "crud.users.inputs.name.placeholder": "Name",
                        "crud.users.filament.name.helper_text": "",
                        "crud.users.filament.name.label": "",
                        "crud.users.filament.name.description": "",
                        "crud.users.inputs.email.label": "Email",
                        "crud.users.inputs.email.placeholder": "Email",
                        "crud.users.filament.email.helper_text": "",
                        "crud.users.filament.email.label": "",
                        "crud.users.filament.email.description": "",
                        "crud.users.inputs.password.label": "Password",
                        "crud.users.inputs.password.placeholder": "Password",
                        "crud.users.filament.password.helper_text": "",
                        "crud.users.filament.password.label": "",
                        "crud.users.filament.password.description": "",
                        "navigation.suppliers": "Suppliers",
                        "crud.maintenanceDepartmentUser.itemTitle": "Maintenance Department User",
                        "crud.maintenanceDepartmentUser.collectionTitle": "Maintenance Department User"
                    }
                },
                "vthemeKeys": {
                    "default.delay": "opacity-75",
                    "table": "min-w-full divide-y divide-gray-200",
                    "table.container": "overflow-hidden border rounded-lg",
                    "table.head": "bg-gray-50",
                    "table.head.row": "text-gray-500",
                    "table.head.col": "px-5 py-3 text-xs font-medium text-left uppercase",
                    "table.body": "bg-white divide-y divide-gray-200 dark:divide-gray-700",
                    "table.body.row": "text-gray-800",
                    "table.body.col": "px-5 py-4 text-sm whitespace-nowrap",
                    "ui.button": "inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none",
                    "ui.input": "inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50",
                    "ui.input.checkbox": "",
                    "ui.label": "block mb-1.5 font-medium text-sm text-gray-700",
                    "ui.input.error": "text-sm text-red-600",
                    "ui.breadcrumbs.container": "flex justify-between py-1",
                    "ui.breadcrumbs.list": "inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0",
                    "ui.breadcrumbs.list.item": "",
                    "ui.breadcrumbs.list.item.link": "inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none",
                    "ui.breadcrumbs.separator": "w-5 h-5 text-gray-400/70",
                    "crud.index.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.table.head.col.extra": "cursor-pointer",
                    "crud.table.head.action-col": "px-5 py-3 text-xs font-medium text-right uppercase",
                    "crud.table.body.col.extra": "max-w-xs truncate",
                    "crud.table.body.action-col": "px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2",
                    "crud.action-link": "text-indigo-600 hover:text-indigo-700 cursor-pointer",
                    "crud.action-link-danger": "text-red-600 hover:text-red-700 cursor-pointer",
                    "crud.index.tools": "flex justify-between align-top py-4",
                    "crud.pagination.container": "mt-2",
                    "crud.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.header": "w-full text-gray-500 text-lg font-semibold py-4 uppercase",
                    "crud.form": "w-full mb-0",
                    "crud.form.container": "overflow-hidden border rounded-lg bg-white",
                    "crud.form.inputs.container": "p-6 space-y-3",
                    "crud.form.input.group": "w-full",
                    "crud.form.input.radio.group": "flex flex-wrap flex-col gap-2",
                    "crud.form.input.radio.box": "inline-flex justify-start gap-2",
                    "ui.input.radio": "!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500",
                    "crud.form.input.extra": "w-full",
                    "crud.form.input.image": "object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out",
                    "crud.form.input.image.button": "p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200",
                    "crud.form.input.file.name": "text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1",
                    "crud.form.buttons-container": "flex justify-between mt-4 border-t border-gray-50 p-4"
                },
                "vthemeCdn": "https://cdn.tailwindcss.com",
                "connectionFinished": true,
                "canIgnoreNextSchemaSourceChanges": false,
                "filesQueueStatus": "idle",
                "lastReadSchemaDataHash": "69fd51b6c41c0631423ad0cb44447258",
                "currentZoom": 60,
                "currentRenderedFilesPaths": [
                    "/lang/en//navigation.php",
                    "/lang/en//crud.php",
                    "resources/views/components/ui//toast.blade.php",
                    "resources/views/components/ui//action/danger.blade.php",
                    "resources/views/components/ui//action/index.blade.php",
                    "resources/views/components/ui//breadcrumbs/index.blade.php",
                    "resources/views/components/ui//breadcrumbs/link.blade.php",
                    "resources/views/components/ui//breadcrumbs/separator.blade.php",
                    "resources/views/components/ui//button/danger.blade.php",
                    "resources/views/components/ui//button/index.blade.php",
                    "resources/views/components/ui//card/body.blade.php",
                    "resources/views/components/ui//card/header.blade.php",
                    "resources/views/components/ui//card/index.blade.php",
                    "resources/views/components/ui//card/title.blade.php",
                    "resources/views/components/ui//container/table.blade.php",
                    "resources/views/components/ui//input/checkbox.blade.php",
                    "resources/views/components/ui//input/color.blade.php",
                    "resources/views/components/ui//input/date.blade.php",
                    "resources/views/components/ui//input/date-time.blade.php",
                    "resources/views/components/ui//input/email.blade.php",
                    "resources/views/components/ui//input/error.blade.php",
                    "resources/views/components/ui//input/file.blade.php",
                    "resources/views/components/ui//input/hidden.blade.php",
                    "resources/views/components/ui//input/image.blade.php",
                    "resources/views/components/ui//input/index.blade.php",
                    "resources/views/components/ui//input/number.blade.php",
                    "resources/views/components/ui//input/password.blade.php",
                    "resources/views/components/ui//input/radio.blade.php",
                    "resources/views/components/ui//input/select.blade.php",
                    "resources/views/components/ui//input/text.blade.php",
                    "resources/views/components/ui//input/textarea.blade.php",
                    "resources/views/components/ui//input/time.blade.php",
                    "resources/views/components/ui//input/url.blade.php",
                    "resources/views/components/ui//label/index.blade.php",
                    "resources/views/components/ui//modal/confirm.blade.php",
                    "resources/views/components/ui//modal/index.blade.php",
                    "resources/views/components/ui//table/action-column.blade.php",
                    "resources/views/components/ui//table/action-header.blade.php",
                    "resources/views/components/ui//table/column.blade.php",
                    "resources/views/components/ui//table/header.blade.php",
                    "resources/views/components/ui//table/image.blade.php",
                    "resources/views/components/ui//table/index.blade.php",
                    "resources/views/components/ui//table/row.blade.php",
                    "resources/views/partials/app-menu.blade.php",
                    "resources/views/partials/app-responsive-menu.blade.php",
                    "routes/app.php",
                    "routes/app-api.php",
                    "bootstrap/app.php",
                    "database/factories/UserFactory.php",
                    "database/seeders/UserSeeder.php",
                    "app/Policies/UserPolicy.php",
                    "database/factories/WarehouseFactory.php",
                    "database/seeders/WarehouseSeeder.php",
                    "app/Policies/WarehousePolicy.php",
                    "database/factories/ItemFactory.php",
                    "database/seeders/ItemSeeder.php",
                    "app/Policies/ItemPolicy.php",
                    "database/factories/AssetFactory.php",
                    "database/seeders/AssetSeeder.php",
                    "app/Policies/AssetPolicy.php",
                    "database/factories/MaintenanceDepartmentFactory.php",
                    "database/seeders/MaintenanceDepartmentSeeder.php",
                    "app/Policies/MaintenanceDepartmentPolicy.php",
                    "database/factories/MaintenanceItemFactory.php",
                    "database/seeders/MaintenanceItemSeeder.php",
                    "app/Policies/MaintenanceItemPolicy.php",
                    "database/factories/OrderFactory.php",
                    "database/seeders/OrderSeeder.php",
                    "app/Policies/OrderPolicy.php",
                    "database/factories/SupplierFactory.php",
                    "database/seeders/SupplierSeeder.php",
                    "app/Policies/SupplierPolicy.php",
                    "database/factories/OrderItemFactory.php",
                    "database/seeders/OrderItemSeeder.php",
                    "app/Policies/OrderItemPolicy.php",
                    "database/factories/DamagedFactory.php",
                    "database/seeders/DamagedSeeder.php",
                    "app/Policies/DamagedPolicy.php",
                    "resources/views/livewire/dashboard/suppliers/index.blade.php",
                    "app/Livewire/Dashboard/SupplierIndex.php",
                    "resources/views/livewire/dashboard/suppliers/create.blade.php",
                    "app/Livewire/Dashboard/SupplierCreate.php",
                    "resources/views/livewire/dashboard/suppliers/edit.blade.php",
                    "app/Livewire/Dashboard/SupplierEdit.php",
                    "app/Livewire/Dashboard/Suppliers/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Suppliers/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/suppliers/orders-detail.blade.php",
                    "app/Filament/Resources/Panel/SupplierResource.php",
                    "app/Filament/Resources/Panel/SupplierResource/Pages/CreateSupplier.php",
                    "app/Filament/Resources/Panel/SupplierResource/Pages/ViewSupplier.php",
                    "app/Filament/Resources/Panel/SupplierResource/Pages/EditSupplier.php",
                    "app/Filament/Resources/Panel/SupplierResource/Pages/ListSuppliers.php",
                    "app/Filament/Resources/Panel/SupplierResource/RelationManagers/OrdersRelationManager.php",
                    "app/Filament/Resources/Panel/OrderResource.php",
                    "app/Filament/Resources/Panel/OrderResource/Pages/CreateOrder.php",
                    "app/Livewire/Dashboard/SupplierOrdersDetail.php",
                    "app/Filament/Resources/Panel/OrderResource/Pages/ViewOrder.php",
                    "app/Livewire/Dashboard/Orders/Forms/CreateDetailForm.php",
                    "app/Filament/Resources/Panel/OrderResource/Pages/EditOrder.php",
                    "app/Livewire/Dashboard/Orders/Forms/UpdateDetailForm.php",
                    "app/Filament/Resources/Panel/OrderResource/Pages/ListOrders.php",
                    "app/Filament/Resources/Panel/OrderResource/RelationManagers/OrderItemsRelationManager.php",
                    "app/Filament/Resources/Panel/WarehouseResource.php",
                    "app/Filament/Resources/Panel/WarehouseResource/Pages/CreateWarehouse.php",
                    "app/Filament/Resources/Panel/WarehouseResource/Pages/ViewWarehouse.php",
                    "app/Filament/Resources/Panel/WarehouseResource/Pages/EditWarehouse.php",
                    "app/Filament/Resources/Panel/WarehouseResource/Pages/ListWarehouses.php",
                    "app/Filament/Resources/Panel/WarehouseResource/RelationManagers/ItemsRelationManager.php",
                    "app/Filament/Resources/Panel/WarehouseResource/RelationManagers/UsersRelationManager.php",
                    "app/Filament/Resources/Panel/ItemResource.php",
                    "app/Filament/Resources/Panel/ItemResource/Pages/CreateItem.php",
                    "app/Filament/Resources/Panel/ItemResource/Pages/ViewItem.php",
                    "app/Filament/Resources/Panel/ItemResource/Pages/EditItem.php",
                    "app/Filament/Resources/Panel/ItemResource/Pages/ListItems.php",
                    "app/Filament/Resources/Panel/ItemResource/RelationManagers/MaintenanceItemsRelationManager.php",
                    "app/Filament/Resources/Panel/AssetResource.php",
                    "app/Filament/Resources/Panel/AssetResource/Pages/CreateAsset.php",
                    "app/Filament/Resources/Panel/AssetResource/Pages/ViewAsset.php",
                    "app/Filament/Resources/Panel/AssetResource/Pages/EditAsset.php",
                    "app/Filament/Resources/Panel/AssetResource/Pages/ListAssets.php",
                    "app/Filament/Resources/Panel/MaintenanceDepartmentResource.php",
                    "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages/CreateMaintenanceDepartment.php",
                    "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages/ViewMaintenanceDepartment.php",
                    "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages/EditMaintenanceDepartment.php",
                    "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages/ListMaintenanceDepartments.php",
                    "app/Filament/Resources/Panel/MaintenanceDepartmentResource/RelationManagers/MaintenanceItemsRelationManager.php",
                    "app/Filament/Resources/Panel/MaintenanceDepartmentResource/RelationManagers/UsersRelationManager.php",
                    "app/Filament/Resources/Panel/MaintenanceItemResource.php",
                    "app/Filament/Resources/Panel/MaintenanceItemResource/Pages/CreateMaintenanceItem.php",
                    "app/Filament/Resources/Panel/MaintenanceItemResource/Pages/ViewMaintenanceItem.php",
                    "app/Filament/Resources/Panel/MaintenanceItemResource/Pages/EditMaintenanceItem.php",
                    "app/Filament/Resources/Panel/MaintenanceItemResource/Pages/ListMaintenanceItems.php",
                    "app/Filament/Resources/Panel/DamagedResource.php",
                    "app/Filament/Resources/Panel/DamagedResource/Pages/CreateDamaged.php",
                    "app/Filament/Resources/Panel/DamagedResource/Pages/ViewDamaged.php",
                    "app/Filament/Resources/Panel/DamagedResource/Pages/EditDamaged.php",
                    "app/Filament/Resources/Panel/DamagedResource/Pages/ListDamageds.php",
                    "app/Filament/Resources/Panel/EmployeeResource.php",
                    "app/Filament/Resources/Panel/EmployeeResource/Pages/CreateEmployee.php",
                    "app/Filament/Resources/Panel/EmployeeResource/Pages/ViewEmployee.php",
                    "app/Filament/Resources/Panel/EmployeeResource/Pages/EditEmployee.php",
                    "app/Filament/Resources/Panel/EmployeeResource/Pages/ListEmployees.php",
                    "database/seeders/DatabaseSeeder.php",
                    "resources/views/components/layouts/app.blade.php"
                ],
                "currentSchemaError": null,
                "currentSchemaErrorStack": null
            },
            "__tableData": {
                "count": 1,
                "lastPrimaryKey": 1,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.projectId": [
                                1,
                                13,
                                14,
                                15,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                31,
                                32,
                                33,
                                34,
                                35
                            ],
                            "models.projectId": [
                                4,
                                5,
                                6,
                                7,
                                16,
                                17,
                                18,
                                25,
                                29,
                                78
                            ],
                            "relationships.projectId": [
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                10,
                                11,
                                12,
                                13,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                31,
                                32,
                                35,
                                36,
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                49,
                                50
                            ],
                            "app_sections.projectId": [
                                1,
                                2,
                                3,
                                4
                            ],
                            "schema_sections.projectId": [
                                1,
                                2,
                                3
                            ],
                            "navs.projectId": [
                                1,
                                2,
                                3
                            ],
                            "renderable_files.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                43,
                                44,
                                45,
                                46,
                                47,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                58,
                                59,
                                60,
                                61,
                                62,
                                63,
                                64,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                87,
                                88,
                                89,
                                90,
                                91,
                                92,
                                93,
                                94,
                                95,
                                96,
                                97,
                                98,
                                99,
                                100,
                                101,
                                102,
                                103,
                                104,
                                105,
                                106,
                                107,
                                108,
                                109,
                                110,
                                111,
                                112,
                                113,
                                114,
                                115,
                                116,
                                117,
                                118,
                                119,
                                120,
                                121,
                                122,
                                123,
                                124,
                                125,
                                126,
                                127,
                                128,
                                129,
                                130,
                                131,
                                132,
                                133,
                                134,
                                135,
                                136,
                                137,
                                138,
                                139,
                                140,
                                141,
                                142,
                                143,
                                144,
                                145
                            ],
                            "cruds.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19
                            ],
                            "routes.projectId": [
                                1,
                                2,
                                3
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            }
        },
        "tables": {
            "item_1": {
                "projectId": 1,
                "name": "users",
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "users",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "email",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string",
                                "unique": true
                            },
                            {
                                "type": "timestamp",
                                "name": "email_verified_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "password",
                                "length": 255,
                                "table": "users",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "remember_token",
                                "length": 100,
                                "table": "users",
                                "creatorMethod": "rememberToken",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "current_team_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "users",
                                "creatorMethod": "foreignId",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "profile_photo_path",
                                "length": 2048,
                                "table": "users",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "users"
                            }
                        ],
                        "createdTables": [
                            "users"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_131833_add_two_factor_columns_to_users_table.php",
                        "relativePath": "/database/migrations/2025_01_29_131833_add_two_factor_columns_to_users_table.php",
                        "migrationName": "2025_01_29_131833_add_two_factor_columns_to_users_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_131833",
                        "addedColumns": [
                            {
                                "type": "text",
                                "name": "two_factor_secret",
                                "table": "users",
                                "creatorMethod": "text",
                                "after": "password",
                                "nullable": true
                            },
                            {
                                "type": "text",
                                "name": "two_factor_recovery_codes",
                                "table": "users",
                                "creatorMethod": "text",
                                "after": "two_factor_secret",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "two_factor_confirmed_at",
                                "precision": 0,
                                "table": "users",
                                "creatorMethod": "timestamp",
                                "after": "two_factor_recovery_codes",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "users"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "users",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "users",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "email",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "unique": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "email_verified_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "password",
                                    "length": 255,
                                    "table": "users",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "remember_token",
                                    "length": 100,
                                    "table": "users",
                                    "creatorMethod": "rememberToken",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "current_team_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "users",
                                    "creatorMethod": "foreignId",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "profile_photo_path",
                                    "length": 2048,
                                    "table": "users",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "users"
                                }
                            ],
                            "createdTables": [
                                "users"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_131833_add_two_factor_columns_to_users_table.php",
                            "relativePath": "/database/migrations/2025_01_29_131833_add_two_factor_columns_to_users_table.php",
                            "migrationName": "2025_01_29_131833_add_two_factor_columns_to_users_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_131833",
                            "addedColumns": [
                                {
                                    "type": "text",
                                    "name": "two_factor_secret",
                                    "table": "users",
                                    "creatorMethod": "text",
                                    "after": "password",
                                    "nullable": true
                                },
                                {
                                    "type": "text",
                                    "name": "two_factor_recovery_codes",
                                    "table": "users",
                                    "creatorMethod": "text",
                                    "after": "two_factor_secret",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "two_factor_confirmed_at",
                                    "precision": 0,
                                    "table": "users",
                                    "creatorMethod": "timestamp",
                                    "after": "two_factor_recovery_codes",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "users"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "id": 1,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12",
                "positionX": "-584",
                "positionY": "-376",
                "sectionId": 1,
                "removed": false
            },
            "__tableData": {
                "count": 15,
                "lastPrimaryKey": 37,
                "index": {
                    "1": {
                        "hasMany": {
                            "columns.tableId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13
                            ],
                            "models.tableId": [
                                4
                            ],
                            "indices.onTableId": [
                                5,
                                7,
                                8
                            ],
                            "cruds.tableId": [
                                16
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "columns.tableId": [
                                81,
                                82,
                                83,
                                84,
                                144
                            ],
                            "models.tableId": [
                                5
                            ],
                            "indices.onTableId": [
                                6,
                                10,
                                16
                            ],
                            "cruds.tableId": [
                                5
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "columns.tableId": [
                                86,
                                87,
                                88,
                                89,
                                92,
                                95,
                                103,
                                195,
                                196,
                                219
                            ],
                            "models.tableId": [
                                6,
                                7,
                                78
                            ],
                            "indices.tableId": [
                                7,
                                10,
                                37
                            ],
                            "indices.onTableId": [
                                13,
                                25,
                                42,
                                43
                            ],
                            "cruds.tableId": [
                                6,
                                8,
                                10,
                                15
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "columns.tableId": [
                                93,
                                94
                            ],
                            "indices.tableId": [
                                5,
                                6
                            ],
                            "relationships.pivotId": [
                                2,
                                3
                            ],
                            "cruds.tableId": [
                                7
                            ]
                        }
                    },
                    "17": {
                        "hasMany": {
                            "columns.tableId": [
                                101,
                                102
                            ],
                            "indices.tableId": [
                                8,
                                12
                            ],
                            "relationships.pivotId": [
                                19,
                                20
                            ],
                            "cruds.tableId": [
                                19
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "columns.tableId": [
                                105,
                                106,
                                107,
                                108,
                                109,
                                132
                            ],
                            "models.tableId": [
                                16
                            ],
                            "indices.onTableId": [
                                14,
                                37
                            ],
                            "cruds.tableId": [
                                12
                            ]
                        }
                    },
                    "19": {
                        "hasMany": {
                            "columns.tableId": [
                                110,
                                111,
                                112,
                                113,
                                114,
                                115,
                                116,
                                199,
                                224
                            ],
                            "models.tableId": [
                                17
                            ],
                            "indices.tableId": [
                                13,
                                14,
                                25,
                                42,
                                43
                            ],
                            "cruds.tableId": [
                                9,
                                11,
                                13,
                                14
                            ]
                        }
                    },
                    "20": {
                        "hasMany": {
                            "columns.tableId": [
                                117,
                                118,
                                119,
                                126,
                                127,
                                128,
                                142
                            ],
                            "models.tableId": [
                                18
                            ],
                            "indices.tableId": [
                                15,
                                16
                            ],
                            "indices.onTableId": [
                                20
                            ],
                            "cruds.tableId": [
                                2,
                                3,
                                18
                            ]
                        }
                    },
                    "21": {
                        "hasMany": {
                            "columns.tableId": [
                                120,
                                121,
                                122,
                                123,
                                124,
                                141
                            ],
                            "models.tableId": [
                                25
                            ],
                            "indices.onTableId": [
                                15
                            ],
                            "cruds.tableId": [
                                1,
                                17
                            ]
                        }
                    },
                    "22": {
                        "hasMany": {
                            "columns.tableId": [
                                133,
                                134,
                                135,
                                136,
                                140,
                                143,
                                197,
                                198
                            ],
                            "models.tableId": [
                                29
                            ],
                            "indices.tableId": [
                                20
                            ],
                            "cruds.tableId": [
                                4
                            ]
                        }
                    },
                    "31": {
                        "hasMany": {
                            "columns.tableId": [
                                200,
                                201,
                                202,
                                203,
                                204
                            ],
                            "indices.tableId": [
                                26
                            ],
                            "indices.onTableId": [
                                29,
                                34
                            ]
                        }
                    },
                    "32": {
                        "hasMany": {
                            "columns.tableId": [
                                205,
                                206,
                                207,
                                208,
                                209
                            ],
                            "indices.tableId": [
                                27
                            ],
                            "indices.onTableId": [
                                32,
                                35
                            ]
                        }
                    },
                    "33": {
                        "hasMany": {
                            "columns.tableId": [
                                210,
                                211,
                                212
                            ],
                            "indices.tableId": [
                                28,
                                29,
                                30
                            ]
                        }
                    },
                    "34": {
                        "hasMany": {
                            "columns.tableId": [
                                213,
                                214,
                                215
                            ],
                            "indices.tableId": [
                                31,
                                32,
                                33
                            ]
                        }
                    },
                    "35": {
                        "hasMany": {
                            "columns.tableId": [
                                216,
                                217
                            ],
                            "indices.tableId": [
                                34,
                                35,
                                36
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_13": {
                "projectId": 1,
                "sectionId": 1,
                "name": "warehouses",
                "createdFromInterface": false,
                "id": 13,
                "createdAt": "2025-01-29 16:45:44",
                "updatedAt": "2025-01-30 11:49:12",
                "positionX": "817.143",
                "positionY": "-598.429",
                "removed": false,
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140325_001_create_warehouses_table.php",
                        "relativePath": "/database/migrations/2025_01_29_140325_001_create_warehouses_table.php",
                        "migrationName": "2025_01_29_140325_001_create_warehouses_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_140325",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "warehouses",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "warehouses",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "warehouses",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "warehouses",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "warehouses"
                            }
                        ],
                        "createdTables": [
                            "warehouses"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_143619_001_update_warehouses_table.php",
                        "relativePath": "/database/migrations/2025_01_29_143619_001_update_warehouses_table.php",
                        "migrationName": "2025_01_29_143619_001_update_warehouses_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_143619",
                        "addedColumns": [
                            {
                                "type": "string",
                                "name": "location",
                                "length": 255,
                                "table": "warehouses",
                                "creatorMethod": "string",
                                "after": "name"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "warehouses"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "warehouses",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140325_001_create_warehouses_table.php",
                            "relativePath": "/database/migrations/2025_01_29_140325_001_create_warehouses_table.php",
                            "migrationName": "2025_01_29_140325_001_create_warehouses_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_140325",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "warehouses",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "warehouses",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "warehouses",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "warehouses",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "warehouses"
                                }
                            ],
                            "createdTables": [
                                "warehouses"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_143619_001_update_warehouses_table.php",
                            "relativePath": "/database/migrations/2025_01_29_143619_001_update_warehouses_table.php",
                            "migrationName": "2025_01_29_143619_001_update_warehouses_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_143619",
                            "addedColumns": [
                                {
                                    "type": "string",
                                    "name": "location",
                                    "length": 255,
                                    "table": "warehouses",
                                    "creatorMethod": "string",
                                    "after": "name"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "warehouses"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_14": {
                "projectId": 1,
                "sectionId": 1,
                "name": "items",
                "createdFromInterface": false,
                "id": 14,
                "createdAt": "2025-01-29 16:46:42",
                "updatedAt": "2025-01-30 11:49:12",
                "positionX": "305",
                "positionY": "-312.667",
                "removed": false,
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140325_003_create_items_table.php",
                        "relativePath": "/database/migrations/2025_01_29_140325_003_create_items_table.php",
                        "migrationName": "2025_01_29_140325_003_create_items_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_140325",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "items",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "items",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "enum",
                                "name": "status",
                                "allowed": [
                                    "in_where_house",
                                    "asset",
                                    "in_maintenance",
                                    "damaged"
                                ],
                                "table": "items",
                                "creatorMethod": "enum"
                            },
                            {
                                "type": "bigInteger",
                                "name": "user_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "items",
                                "creatorMethod": "bigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "warehouse_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "items",
                                "creatorMethod": "bigInteger"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "items",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "items",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "items"
                            },
                            {
                                "name": "foreign",
                                "index": "items_user_id_foreign",
                                "columns": [
                                    "user_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "users",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "items"
                            },
                            {
                                "name": "foreign",
                                "index": "items_warehouse_id_foreign",
                                "columns": [
                                    "warehouse_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "warehouses",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "items"
                            }
                        ],
                        "createdTables": [
                            "items"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_202703_change_fileds_in_items_table.php",
                        "relativePath": "/database/migrations/2025_01_29_202703_change_fileds_in_items_table.php",
                        "migrationName": "2025_01_29_202703_change_fileds_in_items_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_202703",
                        "addedColumns": [
                            {
                                "type": "string",
                                "name": "barcode",
                                "length": 255,
                                "table": "items",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "barcode_image",
                                "length": 255,
                                "table": "items",
                                "creatorMethod": "string",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "user_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "items",
                                "creatorMethod": "bigInteger",
                                "nullable": true,
                                "change": true
                            }
                        ],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "items"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_30_084421_001_update_items_table.php",
                        "relativePath": "/database/migrations/2025_01_30_084421_001_update_items_table.php",
                        "migrationName": "2025_01_30_084421_001_update_items_table",
                        "datePrefix": "2025_01_30",
                        "fullPrefix": "2025_01_30_084421",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "maintenance_department_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "items",
                                "creatorMethod": "bigInteger",
                                "nullable": true,
                                "after": "warehouse_id"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "items"
                            },
                            {
                                "name": "foreign",
                                "index": "items_maintenance_department_id_foreign",
                                "columns": [
                                    "maintenance_department_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "maintenance_departments",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "items"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "items",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140325_003_create_items_table.php",
                            "relativePath": "/database/migrations/2025_01_29_140325_003_create_items_table.php",
                            "migrationName": "2025_01_29_140325_003_create_items_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_140325",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "items",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "items",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "enum",
                                    "name": "status",
                                    "allowed": [
                                        "in_where_house",
                                        "asset",
                                        "in_maintenance",
                                        "damaged"
                                    ],
                                    "table": "items",
                                    "creatorMethod": "enum"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "user_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "items",
                                    "creatorMethod": "bigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "warehouse_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "items",
                                    "creatorMethod": "bigInteger"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "items",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "items",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "items"
                                },
                                {
                                    "name": "foreign",
                                    "index": "items_user_id_foreign",
                                    "columns": [
                                        "user_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "users",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "items"
                                },
                                {
                                    "name": "foreign",
                                    "index": "items_warehouse_id_foreign",
                                    "columns": [
                                        "warehouse_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "warehouses",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "items"
                                }
                            ],
                            "createdTables": [
                                "items"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_202703_change_fileds_in_items_table.php",
                            "relativePath": "/database/migrations/2025_01_29_202703_change_fileds_in_items_table.php",
                            "migrationName": "2025_01_29_202703_change_fileds_in_items_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_202703",
                            "addedColumns": [
                                {
                                    "type": "string",
                                    "name": "barcode",
                                    "length": 255,
                                    "table": "items",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "barcode_image",
                                    "length": 255,
                                    "table": "items",
                                    "creatorMethod": "string",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "user_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "items",
                                    "creatorMethod": "bigInteger",
                                    "nullable": true,
                                    "change": true
                                }
                            ],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "items"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_30_084421_001_update_items_table.php",
                            "relativePath": "/database/migrations/2025_01_30_084421_001_update_items_table.php",
                            "migrationName": "2025_01_30_084421_001_update_items_table",
                            "datePrefix": "2025_01_30",
                            "fullPrefix": "2025_01_30_084421",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "maintenance_department_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "items",
                                    "creatorMethod": "bigInteger",
                                    "nullable": true,
                                    "after": "warehouse_id"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "items"
                                },
                                {
                                    "name": "foreign",
                                    "index": "items_maintenance_department_id_foreign",
                                    "columns": [
                                        "maintenance_department_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "maintenance_departments",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "items"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_15": {
                "projectId": 1,
                "name": "user_warehouse",
                "sectionId": 1,
                "id": 15,
                "createdAt": "2025-01-29 16:50:03",
                "updatedAt": "2025-01-30 11:49:12",
                "positionX": "175.333",
                "positionY": "-510",
                "removed": false,
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140326_004_create_user_warehouse_table.php",
                        "relativePath": "/database/migrations/2025_01_29_140326_004_create_user_warehouse_table.php",
                        "migrationName": "2025_01_29_140326_004_create_user_warehouse_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_140326",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "user_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "user_warehouse",
                                "creatorMethod": "bigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "warehouse_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "user_warehouse",
                                "creatorMethod": "bigInteger"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "user_warehouse"
                            },
                            {
                                "name": "foreign",
                                "index": "user_warehouse_user_id_foreign",
                                "columns": [
                                    "user_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "users",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "user_warehouse"
                            },
                            {
                                "name": "foreign",
                                "index": "user_warehouse_warehouse_id_foreign",
                                "columns": [
                                    "warehouse_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "warehouses",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "user_warehouse"
                            }
                        ],
                        "createdTables": [
                            "user_warehouse"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "user_warehouse",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140326_004_create_user_warehouse_table.php",
                            "relativePath": "/database/migrations/2025_01_29_140326_004_create_user_warehouse_table.php",
                            "migrationName": "2025_01_29_140326_004_create_user_warehouse_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_140326",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "user_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "user_warehouse",
                                    "creatorMethod": "bigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "warehouse_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "user_warehouse",
                                    "creatorMethod": "bigInteger"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "user_warehouse"
                                },
                                {
                                    "name": "foreign",
                                    "index": "user_warehouse_user_id_foreign",
                                    "columns": [
                                        "user_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "users",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "user_warehouse"
                                },
                                {
                                    "name": "foreign",
                                    "index": "user_warehouse_warehouse_id_foreign",
                                    "columns": [
                                        "warehouse_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "warehouses",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "user_warehouse"
                                }
                            ],
                            "createdTables": [
                                "user_warehouse"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_17": {
                "projectId": 1,
                "name": "maintenance_department_user",
                "sectionId": 1,
                "id": 17,
                "createdAt": "2025-01-29 16:53:05",
                "updatedAt": "2025-01-30 11:49:13",
                "positionX": "-98",
                "positionY": "635.333",
                "removed": false,
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140326_005_create_maintenance_department_user_table.php",
                        "relativePath": "/database/migrations/2025_01_29_140326_005_create_maintenance_department_user_table.php",
                        "migrationName": "2025_01_29_140326_005_create_maintenance_department_user_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_140326",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "user_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "maintenance_department_user",
                                "creatorMethod": "bigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "maintenance_department_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "maintenance_department_user",
                                "creatorMethod": "bigInteger"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "maintenance_department_user"
                            },
                            {
                                "name": "foreign",
                                "index": "maintenance_department_user_user_id_foreign",
                                "columns": [
                                    "user_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "users",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "maintenance_department_user"
                            },
                            {
                                "name": "foreign",
                                "index": "maintenance_department_user_maintenance_department_id_foreign",
                                "columns": [
                                    "maintenance_department_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "Maintenance_departments",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "maintenance_department_user"
                            }
                        ],
                        "createdTables": [
                            "maintenance_department_user"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "maintenance_department_user",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140326_005_create_maintenance_department_user_table.php",
                            "relativePath": "/database/migrations/2025_01_29_140326_005_create_maintenance_department_user_table.php",
                            "migrationName": "2025_01_29_140326_005_create_maintenance_department_user_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_140326",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "user_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "maintenance_department_user",
                                    "creatorMethod": "bigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "maintenance_department_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "maintenance_department_user",
                                    "creatorMethod": "bigInteger"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "maintenance_department_user"
                                },
                                {
                                    "name": "foreign",
                                    "index": "maintenance_department_user_user_id_foreign",
                                    "columns": [
                                        "user_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "users",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "maintenance_department_user"
                                },
                                {
                                    "name": "foreign",
                                    "index": "maintenance_department_user_maintenance_department_id_foreign",
                                    "columns": [
                                        "maintenance_department_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "Maintenance_departments",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "maintenance_department_user"
                                }
                            ],
                            "createdTables": [
                                "maintenance_department_user"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_18": {
                "projectId": 1,
                "name": "maintenance_departments",
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140325_002_create_maintenance_departments_table.php",
                        "relativePath": "/database/migrations/2025_01_29_140325_002_create_maintenance_departments_table.php",
                        "migrationName": "2025_01_29_140325_002_create_maintenance_departments_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_140325",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "maintenance_departments",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "maintenance_departments",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "location",
                                "length": 255,
                                "table": "maintenance_departments",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "maintenance_departments",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "maintenance_departments",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "maintenance_departments"
                            }
                        ],
                        "createdTables": [
                            "maintenance_departments"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_141959_003_update_maintenance_departments_table.php",
                        "relativePath": "/database/migrations/2025_01_29_141959_003_update_maintenance_departments_table.php",
                        "migrationName": "2025_01_29_141959_003_update_maintenance_departments_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_141959",
                        "addedColumns": [
                            {
                                "type": "enum",
                                "name": "type",
                                "allowed": [
                                    "internal",
                                    "external"
                                ],
                                "table": "maintenance_departments",
                                "creatorMethod": "enum",
                                "after": "location"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "maintenance_departments"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "maintenance_departments",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140325_002_create_maintenance_departments_table.php",
                            "relativePath": "/database/migrations/2025_01_29_140325_002_create_maintenance_departments_table.php",
                            "migrationName": "2025_01_29_140325_002_create_maintenance_departments_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_140325",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "maintenance_departments",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "maintenance_departments",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "location",
                                    "length": 255,
                                    "table": "maintenance_departments",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "maintenance_departments",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "maintenance_departments",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "maintenance_departments"
                                }
                            ],
                            "createdTables": [
                                "maintenance_departments"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_141959_003_update_maintenance_departments_table.php",
                            "relativePath": "/database/migrations/2025_01_29_141959_003_update_maintenance_departments_table.php",
                            "migrationName": "2025_01_29_141959_003_update_maintenance_departments_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_141959",
                            "addedColumns": [
                                {
                                    "type": "enum",
                                    "name": "type",
                                    "allowed": [
                                        "internal",
                                        "external"
                                    ],
                                    "table": "maintenance_departments",
                                    "creatorMethod": "enum",
                                    "after": "location"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "maintenance_departments"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "sectionId": 1,
                "id": 18,
                "createdAt": "2025-01-29 17:05:13",
                "updatedAt": "2025-01-30 11:49:12",
                "positionX": "647.667",
                "positionY": "539.667",
                "removed": false
            },
            "item_19": {
                "projectId": 1,
                "sectionId": 1,
                "name": "maintenance_items",
                "createdFromInterface": false,
                "id": 19,
                "createdAt": "2025-01-29 17:05:48",
                "updatedAt": "2025-01-30 11:49:13",
                "positionX": "1226.33",
                "positionY": "222",
                "removed": false,
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140800_001_create_maintenance_items_table.php",
                        "relativePath": "/database/migrations/2025_01_29_140800_001_create_maintenance_items_table.php",
                        "migrationName": "2025_01_29_140800_001_create_maintenance_items_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_140800",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "maintenance_items",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "status",
                                "length": 255,
                                "table": "maintenance_items",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "text",
                                "name": "note",
                                "table": "maintenance_items",
                                "creatorMethod": "text"
                            },
                            {
                                "type": "bigInteger",
                                "name": "item_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "maintenance_items",
                                "creatorMethod": "bigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "maintenance_department_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "maintenance_items",
                                "creatorMethod": "bigInteger"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "maintenance_items",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "maintenance_items",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "maintenance_items"
                            },
                            {
                                "name": "foreign",
                                "index": "maintenance_items_item_id_foreign",
                                "columns": [
                                    "item_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "items",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "maintenance_items"
                            },
                            {
                                "name": "foreign",
                                "index": "maintenance_items_maintenance_department_id_foreign",
                                "columns": [
                                    "maintenance_department_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "maintenance_departments",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "maintenance_items"
                            }
                        ],
                        "createdTables": [
                            "maintenance_items"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_181741_001_update_maintenance_items_table.php",
                        "relativePath": "/database/migrations/2025_01_29_181741_001_update_maintenance_items_table.php",
                        "migrationName": "2025_01_29_181741_001_update_maintenance_items_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_181741",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "asset_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "maintenance_items",
                                "creatorMethod": "bigInteger",
                                "after": "maintenance_department_id"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "maintenance_items"
                            },
                            {
                                "name": "foreign",
                                "index": "maintenance_items_asset_id_foreign",
                                "columns": [
                                    "asset_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "items",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "maintenance_items"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_204412_001_update_maintenance_items_table.php",
                        "relativePath": "/database/migrations/2025_01_29_204412_001_update_maintenance_items_table.php",
                        "migrationName": "2025_01_29_204412_001_update_maintenance_items_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_204412",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "damaged_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "maintenance_items",
                                "creatorMethod": "bigInteger",
                                "after": "asset_id"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "maintenance_items"
                            },
                            {
                                "name": "foreign",
                                "index": "maintenance_items_damaged_id_foreign",
                                "columns": [
                                    "damaged_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "items",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "maintenance_items"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_30_084421_002_update_maintenance_items_table.php",
                        "relativePath": "/database/migrations/2025_01_30_084421_002_update_maintenance_items_table.php",
                        "migrationName": "2025_01_30_084421_002_update_maintenance_items_table",
                        "datePrefix": "2025_01_30",
                        "fullPrefix": "2025_01_30_084421",
                        "addedColumns": [],
                        "changedColumns": [],
                        "droppedColumns": [
                            {
                                "name": "asset_id",
                                "table": "maintenance_items"
                            }
                        ],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "maintenance_items"
                            },
                            {
                                "name": "dropColumn",
                                "columns": [
                                    "asset_id"
                                ],
                                "table": "maintenance_items"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_30_084900_001_update_maintenance_items_table.php",
                        "relativePath": "/database/migrations/2025_01_30_084900_001_update_maintenance_items_table.php",
                        "migrationName": "2025_01_30_084900_001_update_maintenance_items_table",
                        "datePrefix": "2025_01_30",
                        "fullPrefix": "2025_01_30_084900",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "asset_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "maintenance_items",
                                "creatorMethod": "bigInteger",
                                "after": "damaged_id"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "maintenance_items"
                            },
                            {
                                "name": "foreign",
                                "index": "maintenance_items_asset_id_foreign",
                                "columns": [
                                    "asset_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "items",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "maintenance_items"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "maintenance_items",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140800_001_create_maintenance_items_table.php",
                            "relativePath": "/database/migrations/2025_01_29_140800_001_create_maintenance_items_table.php",
                            "migrationName": "2025_01_29_140800_001_create_maintenance_items_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_140800",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "maintenance_items",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "status",
                                    "length": 255,
                                    "table": "maintenance_items",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "text",
                                    "name": "note",
                                    "table": "maintenance_items",
                                    "creatorMethod": "text"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "item_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "maintenance_items",
                                    "creatorMethod": "bigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "maintenance_department_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "maintenance_items",
                                    "creatorMethod": "bigInteger"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "maintenance_items",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "maintenance_items",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "maintenance_items"
                                },
                                {
                                    "name": "foreign",
                                    "index": "maintenance_items_item_id_foreign",
                                    "columns": [
                                        "item_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "items",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "maintenance_items"
                                },
                                {
                                    "name": "foreign",
                                    "index": "maintenance_items_maintenance_department_id_foreign",
                                    "columns": [
                                        "maintenance_department_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "maintenance_departments",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "maintenance_items"
                                }
                            ],
                            "createdTables": [
                                "maintenance_items"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_181741_001_update_maintenance_items_table.php",
                            "relativePath": "/database/migrations/2025_01_29_181741_001_update_maintenance_items_table.php",
                            "migrationName": "2025_01_29_181741_001_update_maintenance_items_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_181741",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "asset_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "maintenance_items",
                                    "creatorMethod": "bigInteger",
                                    "after": "maintenance_department_id"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "maintenance_items"
                                },
                                {
                                    "name": "foreign",
                                    "index": "maintenance_items_asset_id_foreign",
                                    "columns": [
                                        "asset_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "items",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "maintenance_items"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_204412_001_update_maintenance_items_table.php",
                            "relativePath": "/database/migrations/2025_01_29_204412_001_update_maintenance_items_table.php",
                            "migrationName": "2025_01_29_204412_001_update_maintenance_items_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_204412",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "damaged_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "maintenance_items",
                                    "creatorMethod": "bigInteger",
                                    "after": "asset_id"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "maintenance_items"
                                },
                                {
                                    "name": "foreign",
                                    "index": "maintenance_items_damaged_id_foreign",
                                    "columns": [
                                        "damaged_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "items",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "maintenance_items"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_30_084421_002_update_maintenance_items_table.php",
                            "relativePath": "/database/migrations/2025_01_30_084421_002_update_maintenance_items_table.php",
                            "migrationName": "2025_01_30_084421_002_update_maintenance_items_table",
                            "datePrefix": "2025_01_30",
                            "fullPrefix": "2025_01_30_084421",
                            "addedColumns": [],
                            "changedColumns": [],
                            "droppedColumns": [
                                {
                                    "name": "asset_id",
                                    "table": "maintenance_items"
                                }
                            ],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "maintenance_items"
                                },
                                {
                                    "name": "dropColumn",
                                    "columns": [
                                        "asset_id"
                                    ],
                                    "table": "maintenance_items"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_30_084900_001_update_maintenance_items_table.php",
                            "relativePath": "/database/migrations/2025_01_30_084900_001_update_maintenance_items_table.php",
                            "migrationName": "2025_01_30_084900_001_update_maintenance_items_table",
                            "datePrefix": "2025_01_30",
                            "fullPrefix": "2025_01_30_084900",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "asset_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "maintenance_items",
                                    "creatorMethod": "bigInteger",
                                    "after": "damaged_id"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "maintenance_items"
                                },
                                {
                                    "name": "foreign",
                                    "index": "maintenance_items_asset_id_foreign",
                                    "columns": [
                                        "asset_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "items",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "maintenance_items"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_20": {
                "projectId": 1,
                "sectionId": 1,
                "name": "orders",
                "createdFromInterface": false,
                "id": 20,
                "createdAt": "2025-01-29 17:07:34",
                "updatedAt": "2025-01-30 11:49:13",
                "positionX": "1305.86",
                "positionY": "-637.857",
                "removed": false,
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140800_002_create_orders_table.php",
                        "relativePath": "/database/migrations/2025_01_29_140800_002_create_orders_table.php",
                        "migrationName": "2025_01_29_140800_002_create_orders_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_140800",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "orders",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "orders",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "orders",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "orders"
                            }
                        ],
                        "createdTables": [
                            "orders"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_141959_004_update_orders_table.php",
                        "relativePath": "/database/migrations/2025_01_29_141959_004_update_orders_table.php",
                        "migrationName": "2025_01_29_141959_004_update_orders_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_141959",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "supplier_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "orders",
                                "creatorMethod": "bigInteger",
                                "after": "id"
                            },
                            {
                                "type": "bigInteger",
                                "name": "warehouse_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "orders",
                                "creatorMethod": "bigInteger",
                                "after": "supplier_id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "orders",
                                "creatorMethod": "string",
                                "after": "warehouse_id"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "orders"
                            },
                            {
                                "name": "foreign",
                                "index": "orders_supplier_id_foreign",
                                "columns": [
                                    "supplier_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "suppliers",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "orders"
                            },
                            {
                                "name": "foreign",
                                "index": "orders_warehouse_id_foreign",
                                "columns": [
                                    "warehouse_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "warehouses",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "orders"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_143400_001_update_orders_table.php",
                        "relativePath": "/database/migrations/2025_01_29_143400_001_update_orders_table.php",
                        "migrationName": "2025_01_29_143400_001_update_orders_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_143400",
                        "addedColumns": [
                            {
                                "type": "string",
                                "name": "status",
                                "length": 255,
                                "table": "orders",
                                "creatorMethod": "string",
                                "after": "name"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "orders"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_222013_change_fileds_in_orders_table.php",
                        "relativePath": "/database/migrations/2025_01_29_222013_change_fileds_in_orders_table.php",
                        "migrationName": "2025_01_29_222013_change_fileds_in_orders_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_222013",
                        "addedColumns": [],
                        "changedColumns": [
                            {
                                "type": "string",
                                "name": "status",
                                "length": 255,
                                "table": "orders",
                                "creatorMethod": "string",
                                "after": "name",
                                "default": "Waiting",
                                "change": true
                            }
                        ],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "orders"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "orders",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_140800_002_create_orders_table.php",
                            "relativePath": "/database/migrations/2025_01_29_140800_002_create_orders_table.php",
                            "migrationName": "2025_01_29_140800_002_create_orders_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_140800",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "orders",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "orders",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "orders",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "orders"
                                }
                            ],
                            "createdTables": [
                                "orders"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_141959_004_update_orders_table.php",
                            "relativePath": "/database/migrations/2025_01_29_141959_004_update_orders_table.php",
                            "migrationName": "2025_01_29_141959_004_update_orders_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_141959",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "supplier_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "orders",
                                    "creatorMethod": "bigInteger",
                                    "after": "id"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "warehouse_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "orders",
                                    "creatorMethod": "bigInteger",
                                    "after": "supplier_id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "orders",
                                    "creatorMethod": "string",
                                    "after": "warehouse_id"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "orders"
                                },
                                {
                                    "name": "foreign",
                                    "index": "orders_supplier_id_foreign",
                                    "columns": [
                                        "supplier_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "suppliers",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "orders"
                                },
                                {
                                    "name": "foreign",
                                    "index": "orders_warehouse_id_foreign",
                                    "columns": [
                                        "warehouse_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "warehouses",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "orders"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_143400_001_update_orders_table.php",
                            "relativePath": "/database/migrations/2025_01_29_143400_001_update_orders_table.php",
                            "migrationName": "2025_01_29_143400_001_update_orders_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_143400",
                            "addedColumns": [
                                {
                                    "type": "string",
                                    "name": "status",
                                    "length": 255,
                                    "table": "orders",
                                    "creatorMethod": "string",
                                    "after": "name"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "orders"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_222013_change_fileds_in_orders_table.php",
                            "relativePath": "/database/migrations/2025_01_29_222013_change_fileds_in_orders_table.php",
                            "migrationName": "2025_01_29_222013_change_fileds_in_orders_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_222013",
                            "addedColumns": [],
                            "changedColumns": [
                                {
                                    "type": "string",
                                    "name": "status",
                                    "length": 255,
                                    "table": "orders",
                                    "creatorMethod": "string",
                                    "after": "name",
                                    "default": "Waiting",
                                    "change": true
                                }
                            ],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "orders"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_21": {
                "projectId": 1,
                "sectionId": 1,
                "name": "suppliers",
                "createdFromInterface": false,
                "id": 21,
                "createdAt": "2025-01-29 17:08:53",
                "updatedAt": "2025-01-30 11:49:13",
                "positionX": "1794.14",
                "positionY": "-692.429",
                "removed": false,
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_141959_001_create_suppliers_table.php",
                        "relativePath": "/database/migrations/2025_01_29_141959_001_create_suppliers_table.php",
                        "migrationName": "2025_01_29_141959_001_create_suppliers_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_141959",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "suppliers",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "suppliers",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "phone",
                                "length": 255,
                                "table": "suppliers",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "suppliers",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "suppliers",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "suppliers"
                            }
                        ],
                        "createdTables": [
                            "suppliers"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_142818_001_update_suppliers_table.php",
                        "relativePath": "/database/migrations/2025_01_29_142818_001_update_suppliers_table.php",
                        "migrationName": "2025_01_29_142818_001_update_suppliers_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_142818",
                        "addedColumns": [
                            {
                                "type": "string",
                                "name": "location",
                                "length": 255,
                                "table": "suppliers",
                                "creatorMethod": "string",
                                "after": "phone"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "suppliers"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "suppliers",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_141959_001_create_suppliers_table.php",
                            "relativePath": "/database/migrations/2025_01_29_141959_001_create_suppliers_table.php",
                            "migrationName": "2025_01_29_141959_001_create_suppliers_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_141959",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "suppliers",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "suppliers",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "phone",
                                    "length": 255,
                                    "table": "suppliers",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "suppliers",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "suppliers",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "suppliers"
                                }
                            ],
                            "createdTables": [
                                "suppliers"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_142818_001_update_suppliers_table.php",
                            "relativePath": "/database/migrations/2025_01_29_142818_001_update_suppliers_table.php",
                            "migrationName": "2025_01_29_142818_001_update_suppliers_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_142818",
                            "addedColumns": [
                                {
                                    "type": "string",
                                    "name": "location",
                                    "length": 255,
                                    "table": "suppliers",
                                    "creatorMethod": "string",
                                    "after": "phone"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "suppliers"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_22": {
                "projectId": 1,
                "sectionId": 1,
                "name": "order_items",
                "createdFromInterface": false,
                "id": 22,
                "createdAt": "2025-01-29 17:21:10",
                "updatedAt": "2025-01-30 11:49:13",
                "positionX": "1716.86",
                "positionY": "-178.857",
                "removed": false,
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_142120_001_create_order_items_table.php",
                        "relativePath": "/database/migrations/2025_01_29_142120_001_create_order_items_table.php",
                        "migrationName": "2025_01_29_142120_001_create_order_items_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_142120",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "order_items",
                                "creatorMethod": "id"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "order_items",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "enum",
                                "name": "status",
                                "allowed": [
                                    "in_where_house",
                                    "asset",
                                    "in_maintenance",
                                    "damaged"
                                ],
                                "table": "order_items",
                                "creatorMethod": "enum"
                            },
                            {
                                "type": "bigInteger",
                                "name": "user_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "order_items",
                                "creatorMethod": "bigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "warehouse_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "order_items",
                                "creatorMethod": "bigInteger"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "order_items",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "order_items",
                                "creatorMethod": "timestamp",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "order_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "order_items",
                                "creatorMethod": "bigInteger"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "order_items"
                            },
                            {
                                "name": "foreign",
                                "index": "order_items_order_id_foreign",
                                "columns": [
                                    "order_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "orders",
                                "onDelete": "cascade",
                                "onUpdate": "cascade",
                                "table": "order_items"
                            }
                        ],
                        "createdTables": [
                            "order_items"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_142341_001_update_order_items_table.php",
                        "relativePath": "/database/migrations/2025_01_29_142341_001_update_order_items_table.php",
                        "migrationName": "2025_01_29_142341_001_update_order_items_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_142341",
                        "addedColumns": [],
                        "changedColumns": [],
                        "droppedColumns": [
                            {
                                "name": "user_id",
                                "table": "order_items"
                            },
                            {
                                "name": "warehouse_id",
                                "table": "order_items"
                            }
                        ],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "order_items"
                            },
                            {
                                "name": "dropColumn",
                                "columns": [
                                    "user_id"
                                ],
                                "table": "order_items"
                            },
                            {
                                "name": "dropColumn",
                                "columns": [
                                    "warehouse_id"
                                ],
                                "table": "order_items"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_143400_002_update_order_items_table.php",
                        "relativePath": "/database/migrations/2025_01_29_143400_002_update_order_items_table.php",
                        "migrationName": "2025_01_29_143400_002_update_order_items_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_143400",
                        "addedColumns": [
                            {
                                "type": "decimal",
                                "name": "price",
                                "total": 8,
                                "places": 2,
                                "table": "order_items",
                                "creatorMethod": "decimal",
                                "after": "order_id"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "order_items"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    },
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_191816_change_fileds_in_order_items_table.php",
                        "relativePath": "/database/migrations/2025_01_29_191816_change_fileds_in_order_items_table.php",
                        "migrationName": "2025_01_29_191816_change_fileds_in_order_items_table",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_191816",
                        "addedColumns": [
                            {
                                "type": "string",
                                "name": "barcode",
                                "length": 255,
                                "table": "order_items",
                                "creatorMethod": "string",
                                "nullable": true
                            },
                            {
                                "type": "string",
                                "name": "barcode_image",
                                "length": 255,
                                "table": "order_items",
                                "creatorMethod": "string",
                                "nullable": true
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [
                            {
                                "name": "status",
                                "table": "order_items"
                            }
                        ],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "order_items"
                            },
                            {
                                "name": "dropColumn",
                                "columns": [
                                    "status"
                                ],
                                "table": "order_items"
                            }
                        ],
                        "createdTables": [],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "order_items",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_142120_001_create_order_items_table.php",
                            "relativePath": "/database/migrations/2025_01_29_142120_001_create_order_items_table.php",
                            "migrationName": "2025_01_29_142120_001_create_order_items_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_142120",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "order_items",
                                    "creatorMethod": "id"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "order_items",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "enum",
                                    "name": "status",
                                    "allowed": [
                                        "in_where_house",
                                        "asset",
                                        "in_maintenance",
                                        "damaged"
                                    ],
                                    "table": "order_items",
                                    "creatorMethod": "enum"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "user_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "order_items",
                                    "creatorMethod": "bigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "warehouse_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "order_items",
                                    "creatorMethod": "bigInteger"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "order_items",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "order_items",
                                    "creatorMethod": "timestamp",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "order_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "order_items",
                                    "creatorMethod": "bigInteger"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "order_items"
                                },
                                {
                                    "name": "foreign",
                                    "index": "order_items_order_id_foreign",
                                    "columns": [
                                        "order_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "orders",
                                    "onDelete": "cascade",
                                    "onUpdate": "cascade",
                                    "table": "order_items"
                                }
                            ],
                            "createdTables": [
                                "order_items"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_142341_001_update_order_items_table.php",
                            "relativePath": "/database/migrations/2025_01_29_142341_001_update_order_items_table.php",
                            "migrationName": "2025_01_29_142341_001_update_order_items_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_142341",
                            "addedColumns": [],
                            "changedColumns": [],
                            "droppedColumns": [
                                {
                                    "name": "user_id",
                                    "table": "order_items"
                                },
                                {
                                    "name": "warehouse_id",
                                    "table": "order_items"
                                }
                            ],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "order_items"
                                },
                                {
                                    "name": "dropColumn",
                                    "columns": [
                                        "user_id"
                                    ],
                                    "table": "order_items"
                                },
                                {
                                    "name": "dropColumn",
                                    "columns": [
                                        "warehouse_id"
                                    ],
                                    "table": "order_items"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_143400_002_update_order_items_table.php",
                            "relativePath": "/database/migrations/2025_01_29_143400_002_update_order_items_table.php",
                            "migrationName": "2025_01_29_143400_002_update_order_items_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_143400",
                            "addedColumns": [
                                {
                                    "type": "decimal",
                                    "name": "price",
                                    "total": 8,
                                    "places": 2,
                                    "table": "order_items",
                                    "creatorMethod": "decimal",
                                    "after": "order_id"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "order_items"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        },
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_191816_change_fileds_in_order_items_table.php",
                            "relativePath": "/database/migrations/2025_01_29_191816_change_fileds_in_order_items_table.php",
                            "migrationName": "2025_01_29_191816_change_fileds_in_order_items_table",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_191816",
                            "addedColumns": [
                                {
                                    "type": "string",
                                    "name": "barcode",
                                    "length": 255,
                                    "table": "order_items",
                                    "creatorMethod": "string",
                                    "nullable": true
                                },
                                {
                                    "type": "string",
                                    "name": "barcode_image",
                                    "length": 255,
                                    "table": "order_items",
                                    "creatorMethod": "string",
                                    "nullable": true
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [
                                {
                                    "name": "status",
                                    "table": "order_items"
                                }
                            ],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "order_items"
                                },
                                {
                                    "name": "dropColumn",
                                    "columns": [
                                        "status"
                                    ],
                                    "table": "order_items"
                                }
                            ],
                            "createdTables": [],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                }
            },
            "item_31": {
                "projectId": 1,
                "name": "permissions",
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_205907_create_permission_tables.php",
                        "relativePath": "/database/migrations/2025_01_29_205907_create_permission_tables.php",
                        "migrationName": "2025_01_29_205907_create_permission_tables",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_205907",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "permissions",
                                "creatorMethod": "bigIncrements"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "guard_name",
                                "length": 255,
                                "table": "permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "permissions",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "permissions",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "roles",
                                "creatorMethod": "bigIncrements"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "guard_name",
                                "length": 255,
                                "table": "roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "roles",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "roles",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "permission_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "model_type",
                                "length": 255,
                                "table": "model_has_permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "bigInteger",
                                "name": "model_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "role_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_roles",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "model_type",
                                "length": 255,
                                "table": "model_has_roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "bigInteger",
                                "name": "model_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_roles",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "permission_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "role_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "role_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "role_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "permissions"
                            },
                            {
                                "name": "unique",
                                "index": "permissions_name_guard_name_unique",
                                "columns": [
                                    "name",
                                    "guard_name"
                                ],
                                "algorithm": null,
                                "table": "permissions"
                            },
                            {
                                "name": "create",
                                "table": "roles"
                            },
                            {
                                "name": "unique",
                                "index": "roles_name_guard_name_unique",
                                "columns": [
                                    "name",
                                    "guard_name"
                                ],
                                "algorithm": null,
                                "table": "roles"
                            },
                            {
                                "name": "create",
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "index",
                                "index": "model_has_permissions_model_id_model_type_index",
                                "columns": [
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "model_has_permissions_permission_id_foreign",
                                "columns": [
                                    "permission_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "permissions",
                                "onDelete": "cascade",
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "primary",
                                "index": "model_has_permissions_permission_model_type_primary",
                                "columns": [
                                    "permission_id",
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "create",
                                "table": "model_has_roles"
                            },
                            {
                                "name": "index",
                                "index": "model_has_roles_model_id_model_type_index",
                                "columns": [
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_roles"
                            },
                            {
                                "name": "foreign",
                                "index": "model_has_roles_role_id_foreign",
                                "columns": [
                                    "role_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "roles",
                                "onDelete": "cascade",
                                "table": "model_has_roles"
                            },
                            {
                                "name": "primary",
                                "index": "model_has_roles_role_model_type_primary",
                                "columns": [
                                    "role_id",
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_roles"
                            },
                            {
                                "name": "create",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "role_has_permissions_permission_id_foreign",
                                "columns": [
                                    "permission_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "permissions",
                                "onDelete": "cascade",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "role_has_permissions_role_id_foreign",
                                "columns": [
                                    "role_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "roles",
                                "onDelete": "cascade",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "primary",
                                "index": "role_has_permissions_permission_id_role_id_primary",
                                "columns": [
                                    "permission_id",
                                    "role_id"
                                ],
                                "algorithm": null,
                                "table": "role_has_permissions"
                            }
                        ],
                        "createdTables": [
                            "permissions",
                            "roles",
                            "model_has_permissions",
                            "model_has_roles",
                            "role_has_permissions"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "permissions",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_205907_create_permission_tables.php",
                            "relativePath": "/database/migrations/2025_01_29_205907_create_permission_tables.php",
                            "migrationName": "2025_01_29_205907_create_permission_tables",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_205907",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "permissions",
                                    "creatorMethod": "bigIncrements"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "guard_name",
                                    "length": 255,
                                    "table": "permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "permissions",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "permissions",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "roles",
                                    "creatorMethod": "bigIncrements"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "guard_name",
                                    "length": 255,
                                    "table": "roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "roles",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "roles",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "permission_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "model_type",
                                    "length": 255,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "model_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "role_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_roles",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "model_type",
                                    "length": 255,
                                    "table": "model_has_roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "model_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_roles",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "permission_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "role_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "role_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "role_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "permissions"
                                },
                                {
                                    "name": "unique",
                                    "index": "permissions_name_guard_name_unique",
                                    "columns": [
                                        "name",
                                        "guard_name"
                                    ],
                                    "algorithm": null,
                                    "table": "permissions"
                                },
                                {
                                    "name": "create",
                                    "table": "roles"
                                },
                                {
                                    "name": "unique",
                                    "index": "roles_name_guard_name_unique",
                                    "columns": [
                                        "name",
                                        "guard_name"
                                    ],
                                    "algorithm": null,
                                    "table": "roles"
                                },
                                {
                                    "name": "create",
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "index",
                                    "index": "model_has_permissions_model_id_model_type_index",
                                    "columns": [
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "model_has_permissions_permission_id_foreign",
                                    "columns": [
                                        "permission_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "permissions",
                                    "onDelete": "cascade",
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "primary",
                                    "index": "model_has_permissions_permission_model_type_primary",
                                    "columns": [
                                        "permission_id",
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "create",
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "index",
                                    "index": "model_has_roles_model_id_model_type_index",
                                    "columns": [
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "foreign",
                                    "index": "model_has_roles_role_id_foreign",
                                    "columns": [
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "roles",
                                    "onDelete": "cascade",
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "primary",
                                    "index": "model_has_roles_role_model_type_primary",
                                    "columns": [
                                        "role_id",
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "create",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "role_has_permissions_permission_id_foreign",
                                    "columns": [
                                        "permission_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "permissions",
                                    "onDelete": "cascade",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "role_has_permissions_role_id_foreign",
                                    "columns": [
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "roles",
                                    "onDelete": "cascade",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "primary",
                                    "index": "role_has_permissions_permission_id_role_id_primary",
                                    "columns": [
                                        "permission_id",
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "table": "role_has_permissions"
                                }
                            ],
                            "createdTables": [
                                "permissions",
                                "roles",
                                "model_has_permissions",
                                "model_has_roles",
                                "role_has_permissions"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "sectionId": 1,
                "id": 31,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "positionX": 0,
                "positionY": 0,
                "removed": false
            },
            "item_32": {
                "projectId": 1,
                "name": "roles",
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_205907_create_permission_tables.php",
                        "relativePath": "/database/migrations/2025_01_29_205907_create_permission_tables.php",
                        "migrationName": "2025_01_29_205907_create_permission_tables",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_205907",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "permissions",
                                "creatorMethod": "bigIncrements"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "guard_name",
                                "length": 255,
                                "table": "permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "permissions",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "permissions",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "roles",
                                "creatorMethod": "bigIncrements"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "guard_name",
                                "length": 255,
                                "table": "roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "roles",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "roles",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "permission_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "model_type",
                                "length": 255,
                                "table": "model_has_permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "bigInteger",
                                "name": "model_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "role_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_roles",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "model_type",
                                "length": 255,
                                "table": "model_has_roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "bigInteger",
                                "name": "model_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_roles",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "permission_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "role_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "role_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "role_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "permissions"
                            },
                            {
                                "name": "unique",
                                "index": "permissions_name_guard_name_unique",
                                "columns": [
                                    "name",
                                    "guard_name"
                                ],
                                "algorithm": null,
                                "table": "permissions"
                            },
                            {
                                "name": "create",
                                "table": "roles"
                            },
                            {
                                "name": "unique",
                                "index": "roles_name_guard_name_unique",
                                "columns": [
                                    "name",
                                    "guard_name"
                                ],
                                "algorithm": null,
                                "table": "roles"
                            },
                            {
                                "name": "create",
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "index",
                                "index": "model_has_permissions_model_id_model_type_index",
                                "columns": [
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "model_has_permissions_permission_id_foreign",
                                "columns": [
                                    "permission_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "permissions",
                                "onDelete": "cascade",
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "primary",
                                "index": "model_has_permissions_permission_model_type_primary",
                                "columns": [
                                    "permission_id",
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "create",
                                "table": "model_has_roles"
                            },
                            {
                                "name": "index",
                                "index": "model_has_roles_model_id_model_type_index",
                                "columns": [
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_roles"
                            },
                            {
                                "name": "foreign",
                                "index": "model_has_roles_role_id_foreign",
                                "columns": [
                                    "role_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "roles",
                                "onDelete": "cascade",
                                "table": "model_has_roles"
                            },
                            {
                                "name": "primary",
                                "index": "model_has_roles_role_model_type_primary",
                                "columns": [
                                    "role_id",
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_roles"
                            },
                            {
                                "name": "create",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "role_has_permissions_permission_id_foreign",
                                "columns": [
                                    "permission_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "permissions",
                                "onDelete": "cascade",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "role_has_permissions_role_id_foreign",
                                "columns": [
                                    "role_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "roles",
                                "onDelete": "cascade",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "primary",
                                "index": "role_has_permissions_permission_id_role_id_primary",
                                "columns": [
                                    "permission_id",
                                    "role_id"
                                ],
                                "algorithm": null,
                                "table": "role_has_permissions"
                            }
                        ],
                        "createdTables": [
                            "permissions",
                            "roles",
                            "model_has_permissions",
                            "model_has_roles",
                            "role_has_permissions"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "roles",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_205907_create_permission_tables.php",
                            "relativePath": "/database/migrations/2025_01_29_205907_create_permission_tables.php",
                            "migrationName": "2025_01_29_205907_create_permission_tables",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_205907",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "permissions",
                                    "creatorMethod": "bigIncrements"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "guard_name",
                                    "length": 255,
                                    "table": "permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "permissions",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "permissions",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "roles",
                                    "creatorMethod": "bigIncrements"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "guard_name",
                                    "length": 255,
                                    "table": "roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "roles",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "roles",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "permission_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "model_type",
                                    "length": 255,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "model_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "role_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_roles",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "model_type",
                                    "length": 255,
                                    "table": "model_has_roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "model_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_roles",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "permission_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "role_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "role_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "role_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "permissions"
                                },
                                {
                                    "name": "unique",
                                    "index": "permissions_name_guard_name_unique",
                                    "columns": [
                                        "name",
                                        "guard_name"
                                    ],
                                    "algorithm": null,
                                    "table": "permissions"
                                },
                                {
                                    "name": "create",
                                    "table": "roles"
                                },
                                {
                                    "name": "unique",
                                    "index": "roles_name_guard_name_unique",
                                    "columns": [
                                        "name",
                                        "guard_name"
                                    ],
                                    "algorithm": null,
                                    "table": "roles"
                                },
                                {
                                    "name": "create",
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "index",
                                    "index": "model_has_permissions_model_id_model_type_index",
                                    "columns": [
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "model_has_permissions_permission_id_foreign",
                                    "columns": [
                                        "permission_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "permissions",
                                    "onDelete": "cascade",
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "primary",
                                    "index": "model_has_permissions_permission_model_type_primary",
                                    "columns": [
                                        "permission_id",
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "create",
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "index",
                                    "index": "model_has_roles_model_id_model_type_index",
                                    "columns": [
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "foreign",
                                    "index": "model_has_roles_role_id_foreign",
                                    "columns": [
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "roles",
                                    "onDelete": "cascade",
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "primary",
                                    "index": "model_has_roles_role_model_type_primary",
                                    "columns": [
                                        "role_id",
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "create",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "role_has_permissions_permission_id_foreign",
                                    "columns": [
                                        "permission_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "permissions",
                                    "onDelete": "cascade",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "role_has_permissions_role_id_foreign",
                                    "columns": [
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "roles",
                                    "onDelete": "cascade",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "primary",
                                    "index": "role_has_permissions_permission_id_role_id_primary",
                                    "columns": [
                                        "permission_id",
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "table": "role_has_permissions"
                                }
                            ],
                            "createdTables": [
                                "permissions",
                                "roles",
                                "model_has_permissions",
                                "model_has_roles",
                                "role_has_permissions"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "sectionId": 1,
                "id": 32,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "positionX": 0,
                "positionY": 0,
                "removed": false
            },
            "item_33": {
                "projectId": 1,
                "name": "model_has_permissions",
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_205907_create_permission_tables.php",
                        "relativePath": "/database/migrations/2025_01_29_205907_create_permission_tables.php",
                        "migrationName": "2025_01_29_205907_create_permission_tables",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_205907",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "permissions",
                                "creatorMethod": "bigIncrements"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "guard_name",
                                "length": 255,
                                "table": "permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "permissions",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "permissions",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "roles",
                                "creatorMethod": "bigIncrements"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "guard_name",
                                "length": 255,
                                "table": "roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "roles",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "roles",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "permission_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "model_type",
                                "length": 255,
                                "table": "model_has_permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "bigInteger",
                                "name": "model_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "role_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_roles",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "model_type",
                                "length": 255,
                                "table": "model_has_roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "bigInteger",
                                "name": "model_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_roles",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "permission_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "role_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "role_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "role_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "permissions"
                            },
                            {
                                "name": "unique",
                                "index": "permissions_name_guard_name_unique",
                                "columns": [
                                    "name",
                                    "guard_name"
                                ],
                                "algorithm": null,
                                "table": "permissions"
                            },
                            {
                                "name": "create",
                                "table": "roles"
                            },
                            {
                                "name": "unique",
                                "index": "roles_name_guard_name_unique",
                                "columns": [
                                    "name",
                                    "guard_name"
                                ],
                                "algorithm": null,
                                "table": "roles"
                            },
                            {
                                "name": "create",
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "index",
                                "index": "model_has_permissions_model_id_model_type_index",
                                "columns": [
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "model_has_permissions_permission_id_foreign",
                                "columns": [
                                    "permission_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "permissions",
                                "onDelete": "cascade",
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "primary",
                                "index": "model_has_permissions_permission_model_type_primary",
                                "columns": [
                                    "permission_id",
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "create",
                                "table": "model_has_roles"
                            },
                            {
                                "name": "index",
                                "index": "model_has_roles_model_id_model_type_index",
                                "columns": [
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_roles"
                            },
                            {
                                "name": "foreign",
                                "index": "model_has_roles_role_id_foreign",
                                "columns": [
                                    "role_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "roles",
                                "onDelete": "cascade",
                                "table": "model_has_roles"
                            },
                            {
                                "name": "primary",
                                "index": "model_has_roles_role_model_type_primary",
                                "columns": [
                                    "role_id",
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_roles"
                            },
                            {
                                "name": "create",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "role_has_permissions_permission_id_foreign",
                                "columns": [
                                    "permission_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "permissions",
                                "onDelete": "cascade",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "role_has_permissions_role_id_foreign",
                                "columns": [
                                    "role_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "roles",
                                "onDelete": "cascade",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "primary",
                                "index": "role_has_permissions_permission_id_role_id_primary",
                                "columns": [
                                    "permission_id",
                                    "role_id"
                                ],
                                "algorithm": null,
                                "table": "role_has_permissions"
                            }
                        ],
                        "createdTables": [
                            "permissions",
                            "roles",
                            "model_has_permissions",
                            "model_has_roles",
                            "role_has_permissions"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "model_has_permissions",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_205907_create_permission_tables.php",
                            "relativePath": "/database/migrations/2025_01_29_205907_create_permission_tables.php",
                            "migrationName": "2025_01_29_205907_create_permission_tables",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_205907",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "permissions",
                                    "creatorMethod": "bigIncrements"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "guard_name",
                                    "length": 255,
                                    "table": "permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "permissions",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "permissions",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "roles",
                                    "creatorMethod": "bigIncrements"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "guard_name",
                                    "length": 255,
                                    "table": "roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "roles",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "roles",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "permission_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "model_type",
                                    "length": 255,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "model_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "role_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_roles",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "model_type",
                                    "length": 255,
                                    "table": "model_has_roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "model_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_roles",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "permission_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "role_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "role_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "role_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "permissions"
                                },
                                {
                                    "name": "unique",
                                    "index": "permissions_name_guard_name_unique",
                                    "columns": [
                                        "name",
                                        "guard_name"
                                    ],
                                    "algorithm": null,
                                    "table": "permissions"
                                },
                                {
                                    "name": "create",
                                    "table": "roles"
                                },
                                {
                                    "name": "unique",
                                    "index": "roles_name_guard_name_unique",
                                    "columns": [
                                        "name",
                                        "guard_name"
                                    ],
                                    "algorithm": null,
                                    "table": "roles"
                                },
                                {
                                    "name": "create",
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "index",
                                    "index": "model_has_permissions_model_id_model_type_index",
                                    "columns": [
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "model_has_permissions_permission_id_foreign",
                                    "columns": [
                                        "permission_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "permissions",
                                    "onDelete": "cascade",
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "primary",
                                    "index": "model_has_permissions_permission_model_type_primary",
                                    "columns": [
                                        "permission_id",
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "create",
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "index",
                                    "index": "model_has_roles_model_id_model_type_index",
                                    "columns": [
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "foreign",
                                    "index": "model_has_roles_role_id_foreign",
                                    "columns": [
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "roles",
                                    "onDelete": "cascade",
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "primary",
                                    "index": "model_has_roles_role_model_type_primary",
                                    "columns": [
                                        "role_id",
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "create",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "role_has_permissions_permission_id_foreign",
                                    "columns": [
                                        "permission_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "permissions",
                                    "onDelete": "cascade",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "role_has_permissions_role_id_foreign",
                                    "columns": [
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "roles",
                                    "onDelete": "cascade",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "primary",
                                    "index": "role_has_permissions_permission_id_role_id_primary",
                                    "columns": [
                                        "permission_id",
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "table": "role_has_permissions"
                                }
                            ],
                            "createdTables": [
                                "permissions",
                                "roles",
                                "model_has_permissions",
                                "model_has_roles",
                                "role_has_permissions"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "sectionId": 1,
                "id": 33,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "positionX": 0,
                "positionY": 0,
                "removed": false
            },
            "item_34": {
                "projectId": 1,
                "name": "model_has_roles",
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_205907_create_permission_tables.php",
                        "relativePath": "/database/migrations/2025_01_29_205907_create_permission_tables.php",
                        "migrationName": "2025_01_29_205907_create_permission_tables",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_205907",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "permissions",
                                "creatorMethod": "bigIncrements"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "guard_name",
                                "length": 255,
                                "table": "permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "permissions",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "permissions",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "roles",
                                "creatorMethod": "bigIncrements"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "guard_name",
                                "length": 255,
                                "table": "roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "roles",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "roles",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "permission_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "model_type",
                                "length": 255,
                                "table": "model_has_permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "bigInteger",
                                "name": "model_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "role_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_roles",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "model_type",
                                "length": 255,
                                "table": "model_has_roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "bigInteger",
                                "name": "model_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_roles",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "permission_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "role_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "role_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "role_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "permissions"
                            },
                            {
                                "name": "unique",
                                "index": "permissions_name_guard_name_unique",
                                "columns": [
                                    "name",
                                    "guard_name"
                                ],
                                "algorithm": null,
                                "table": "permissions"
                            },
                            {
                                "name": "create",
                                "table": "roles"
                            },
                            {
                                "name": "unique",
                                "index": "roles_name_guard_name_unique",
                                "columns": [
                                    "name",
                                    "guard_name"
                                ],
                                "algorithm": null,
                                "table": "roles"
                            },
                            {
                                "name": "create",
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "index",
                                "index": "model_has_permissions_model_id_model_type_index",
                                "columns": [
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "model_has_permissions_permission_id_foreign",
                                "columns": [
                                    "permission_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "permissions",
                                "onDelete": "cascade",
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "primary",
                                "index": "model_has_permissions_permission_model_type_primary",
                                "columns": [
                                    "permission_id",
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "create",
                                "table": "model_has_roles"
                            },
                            {
                                "name": "index",
                                "index": "model_has_roles_model_id_model_type_index",
                                "columns": [
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_roles"
                            },
                            {
                                "name": "foreign",
                                "index": "model_has_roles_role_id_foreign",
                                "columns": [
                                    "role_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "roles",
                                "onDelete": "cascade",
                                "table": "model_has_roles"
                            },
                            {
                                "name": "primary",
                                "index": "model_has_roles_role_model_type_primary",
                                "columns": [
                                    "role_id",
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_roles"
                            },
                            {
                                "name": "create",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "role_has_permissions_permission_id_foreign",
                                "columns": [
                                    "permission_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "permissions",
                                "onDelete": "cascade",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "role_has_permissions_role_id_foreign",
                                "columns": [
                                    "role_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "roles",
                                "onDelete": "cascade",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "primary",
                                "index": "role_has_permissions_permission_id_role_id_primary",
                                "columns": [
                                    "permission_id",
                                    "role_id"
                                ],
                                "algorithm": null,
                                "table": "role_has_permissions"
                            }
                        ],
                        "createdTables": [
                            "permissions",
                            "roles",
                            "model_has_permissions",
                            "model_has_roles",
                            "role_has_permissions"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "model_has_roles",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_205907_create_permission_tables.php",
                            "relativePath": "/database/migrations/2025_01_29_205907_create_permission_tables.php",
                            "migrationName": "2025_01_29_205907_create_permission_tables",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_205907",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "permissions",
                                    "creatorMethod": "bigIncrements"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "guard_name",
                                    "length": 255,
                                    "table": "permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "permissions",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "permissions",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "roles",
                                    "creatorMethod": "bigIncrements"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "guard_name",
                                    "length": 255,
                                    "table": "roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "roles",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "roles",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "permission_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "model_type",
                                    "length": 255,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "model_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "role_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_roles",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "model_type",
                                    "length": 255,
                                    "table": "model_has_roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "model_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_roles",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "permission_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "role_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "role_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "role_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "permissions"
                                },
                                {
                                    "name": "unique",
                                    "index": "permissions_name_guard_name_unique",
                                    "columns": [
                                        "name",
                                        "guard_name"
                                    ],
                                    "algorithm": null,
                                    "table": "permissions"
                                },
                                {
                                    "name": "create",
                                    "table": "roles"
                                },
                                {
                                    "name": "unique",
                                    "index": "roles_name_guard_name_unique",
                                    "columns": [
                                        "name",
                                        "guard_name"
                                    ],
                                    "algorithm": null,
                                    "table": "roles"
                                },
                                {
                                    "name": "create",
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "index",
                                    "index": "model_has_permissions_model_id_model_type_index",
                                    "columns": [
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "model_has_permissions_permission_id_foreign",
                                    "columns": [
                                        "permission_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "permissions",
                                    "onDelete": "cascade",
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "primary",
                                    "index": "model_has_permissions_permission_model_type_primary",
                                    "columns": [
                                        "permission_id",
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "create",
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "index",
                                    "index": "model_has_roles_model_id_model_type_index",
                                    "columns": [
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "foreign",
                                    "index": "model_has_roles_role_id_foreign",
                                    "columns": [
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "roles",
                                    "onDelete": "cascade",
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "primary",
                                    "index": "model_has_roles_role_model_type_primary",
                                    "columns": [
                                        "role_id",
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "create",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "role_has_permissions_permission_id_foreign",
                                    "columns": [
                                        "permission_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "permissions",
                                    "onDelete": "cascade",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "role_has_permissions_role_id_foreign",
                                    "columns": [
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "roles",
                                    "onDelete": "cascade",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "primary",
                                    "index": "role_has_permissions_permission_id_role_id_primary",
                                    "columns": [
                                        "permission_id",
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "table": "role_has_permissions"
                                }
                            ],
                            "createdTables": [
                                "permissions",
                                "roles",
                                "model_has_permissions",
                                "model_has_roles",
                                "role_has_permissions"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "sectionId": 1,
                "id": 34,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "positionX": "907.333",
                "positionY": "-113",
                "removed": false
            },
            "item_35": {
                "projectId": 1,
                "name": "role_has_permissions",
                "migrations": [
                    {
                        "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_205907_create_permission_tables.php",
                        "relativePath": "/database/migrations/2025_01_29_205907_create_permission_tables.php",
                        "migrationName": "2025_01_29_205907_create_permission_tables",
                        "datePrefix": "2025_01_29",
                        "fullPrefix": "2025_01_29_205907",
                        "addedColumns": [
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "permissions",
                                "creatorMethod": "bigIncrements"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "guard_name",
                                "length": 255,
                                "table": "permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "permissions",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "permissions",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "id",
                                "autoIncrement": true,
                                "unsigned": true,
                                "table": "roles",
                                "creatorMethod": "bigIncrements"
                            },
                            {
                                "type": "string",
                                "name": "name",
                                "length": 255,
                                "table": "roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "string",
                                "name": "guard_name",
                                "length": 255,
                                "table": "roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "timestamp",
                                "name": "created_at",
                                "precision": 0,
                                "table": "roles",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "timestamp",
                                "name": "updated_at",
                                "precision": 0,
                                "table": "roles",
                                "creatorMethod": "timestamps",
                                "nullable": true
                            },
                            {
                                "type": "bigInteger",
                                "name": "permission_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "model_type",
                                "length": 255,
                                "table": "model_has_permissions",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "bigInteger",
                                "name": "model_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "role_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_roles",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "string",
                                "name": "model_type",
                                "length": 255,
                                "table": "model_has_roles",
                                "creatorMethod": "string"
                            },
                            {
                                "type": "bigInteger",
                                "name": "model_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "model_has_roles",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "permission_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "role_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            },
                            {
                                "type": "bigInteger",
                                "name": "role_id",
                                "autoIncrement": false,
                                "unsigned": true,
                                "table": "role_has_permissions",
                                "creatorMethod": "unsignedBigInteger"
                            }
                        ],
                        "changedColumns": [],
                        "droppedColumns": [],
                        "renamedColumns": [],
                        "commands": [
                            {
                                "name": "create",
                                "table": "permissions"
                            },
                            {
                                "name": "unique",
                                "index": "permissions_name_guard_name_unique",
                                "columns": [
                                    "name",
                                    "guard_name"
                                ],
                                "algorithm": null,
                                "table": "permissions"
                            },
                            {
                                "name": "create",
                                "table": "roles"
                            },
                            {
                                "name": "unique",
                                "index": "roles_name_guard_name_unique",
                                "columns": [
                                    "name",
                                    "guard_name"
                                ],
                                "algorithm": null,
                                "table": "roles"
                            },
                            {
                                "name": "create",
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "index",
                                "index": "model_has_permissions_model_id_model_type_index",
                                "columns": [
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "model_has_permissions_permission_id_foreign",
                                "columns": [
                                    "permission_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "permissions",
                                "onDelete": "cascade",
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "primary",
                                "index": "model_has_permissions_permission_model_type_primary",
                                "columns": [
                                    "permission_id",
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_permissions"
                            },
                            {
                                "name": "create",
                                "table": "model_has_roles"
                            },
                            {
                                "name": "index",
                                "index": "model_has_roles_model_id_model_type_index",
                                "columns": [
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_roles"
                            },
                            {
                                "name": "foreign",
                                "index": "model_has_roles_role_id_foreign",
                                "columns": [
                                    "role_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "roles",
                                "onDelete": "cascade",
                                "table": "model_has_roles"
                            },
                            {
                                "name": "primary",
                                "index": "model_has_roles_role_model_type_primary",
                                "columns": [
                                    "role_id",
                                    "model_id",
                                    "model_type"
                                ],
                                "algorithm": null,
                                "table": "model_has_roles"
                            },
                            {
                                "name": "create",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "role_has_permissions_permission_id_foreign",
                                "columns": [
                                    "permission_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "permissions",
                                "onDelete": "cascade",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "foreign",
                                "index": "role_has_permissions_role_id_foreign",
                                "columns": [
                                    "role_id"
                                ],
                                "algorithm": null,
                                "references": "id",
                                "on": "roles",
                                "onDelete": "cascade",
                                "table": "role_has_permissions"
                            },
                            {
                                "name": "primary",
                                "index": "role_has_permissions_permission_id_role_id_primary",
                                "columns": [
                                    "permission_id",
                                    "role_id"
                                ],
                                "algorithm": null,
                                "table": "role_has_permissions"
                            }
                        ],
                        "createdTables": [
                            "permissions",
                            "roles",
                            "model_has_permissions",
                            "model_has_roles",
                            "role_has_permissions"
                        ],
                        "renamedTables": [],
                        "droppedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "role_has_permissions",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "D:\\New folder (4)\\stock/database/migrations/2025_01_29_205907_create_permission_tables.php",
                            "relativePath": "/database/migrations/2025_01_29_205907_create_permission_tables.php",
                            "migrationName": "2025_01_29_205907_create_permission_tables",
                            "datePrefix": "2025_01_29",
                            "fullPrefix": "2025_01_29_205907",
                            "addedColumns": [
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "permissions",
                                    "creatorMethod": "bigIncrements"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "guard_name",
                                    "length": 255,
                                    "table": "permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "permissions",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "permissions",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "id",
                                    "autoIncrement": true,
                                    "unsigned": true,
                                    "table": "roles",
                                    "creatorMethod": "bigIncrements"
                                },
                                {
                                    "type": "string",
                                    "name": "name",
                                    "length": 255,
                                    "table": "roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "string",
                                    "name": "guard_name",
                                    "length": 255,
                                    "table": "roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "timestamp",
                                    "name": "created_at",
                                    "precision": 0,
                                    "table": "roles",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "timestamp",
                                    "name": "updated_at",
                                    "precision": 0,
                                    "table": "roles",
                                    "creatorMethod": "timestamps",
                                    "nullable": true
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "permission_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "model_type",
                                    "length": 255,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "model_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "role_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_roles",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "string",
                                    "name": "model_type",
                                    "length": 255,
                                    "table": "model_has_roles",
                                    "creatorMethod": "string"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "model_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "model_has_roles",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "permission_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "role_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                },
                                {
                                    "type": "bigInteger",
                                    "name": "role_id",
                                    "autoIncrement": false,
                                    "unsigned": true,
                                    "table": "role_has_permissions",
                                    "creatorMethod": "unsignedBigInteger"
                                }
                            ],
                            "changedColumns": [],
                            "droppedColumns": [],
                            "renamedColumns": [],
                            "commands": [
                                {
                                    "name": "create",
                                    "table": "permissions"
                                },
                                {
                                    "name": "unique",
                                    "index": "permissions_name_guard_name_unique",
                                    "columns": [
                                        "name",
                                        "guard_name"
                                    ],
                                    "algorithm": null,
                                    "table": "permissions"
                                },
                                {
                                    "name": "create",
                                    "table": "roles"
                                },
                                {
                                    "name": "unique",
                                    "index": "roles_name_guard_name_unique",
                                    "columns": [
                                        "name",
                                        "guard_name"
                                    ],
                                    "algorithm": null,
                                    "table": "roles"
                                },
                                {
                                    "name": "create",
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "index",
                                    "index": "model_has_permissions_model_id_model_type_index",
                                    "columns": [
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "model_has_permissions_permission_id_foreign",
                                    "columns": [
                                        "permission_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "permissions",
                                    "onDelete": "cascade",
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "primary",
                                    "index": "model_has_permissions_permission_model_type_primary",
                                    "columns": [
                                        "permission_id",
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_permissions"
                                },
                                {
                                    "name": "create",
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "index",
                                    "index": "model_has_roles_model_id_model_type_index",
                                    "columns": [
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "foreign",
                                    "index": "model_has_roles_role_id_foreign",
                                    "columns": [
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "roles",
                                    "onDelete": "cascade",
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "primary",
                                    "index": "model_has_roles_role_model_type_primary",
                                    "columns": [
                                        "role_id",
                                        "model_id",
                                        "model_type"
                                    ],
                                    "algorithm": null,
                                    "table": "model_has_roles"
                                },
                                {
                                    "name": "create",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "role_has_permissions_permission_id_foreign",
                                    "columns": [
                                        "permission_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "permissions",
                                    "onDelete": "cascade",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "foreign",
                                    "index": "role_has_permissions_role_id_foreign",
                                    "columns": [
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "references": "id",
                                    "on": "roles",
                                    "onDelete": "cascade",
                                    "table": "role_has_permissions"
                                },
                                {
                                    "name": "primary",
                                    "index": "role_has_permissions_permission_id_role_id_primary",
                                    "columns": [
                                        "permission_id",
                                        "role_id"
                                    ],
                                    "algorithm": null,
                                    "table": "role_has_permissions"
                                }
                            ],
                            "createdTables": [
                                "permissions",
                                "roles",
                                "model_has_permissions",
                                "model_has_roles",
                                "role_has_permissions"
                            ],
                            "renamedTables": [],
                            "droppedTables": []
                        }
                    ]
                },
                "sectionId": 1,
                "id": 35,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "positionX": "-348.571",
                "positionY": "378.571",
                "removed": false
            }
        },
        "columns": {
            "item_1": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "options": [],
                "id": 1,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "__tableData": {
                "count": 86,
                "lastPrimaryKey": 224,
                "index": {
                    "1": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                5,
                                7,
                                8
                            ],
                            "relationships.parentKeyId": [
                                4,
                                5,
                                6,
                                7,
                                35,
                                36
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                5
                            ],
                            "cruds.defaultSearchColumnId": [
                                16
                            ],
                            "inputs.columnId": [
                                53
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                6
                            ],
                            "inputs.columnId": [
                                54
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "casts_model_column.columnId": [
                                2
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                7
                            ],
                            "hidden_model_column.columnId": [
                                1
                            ],
                            "casts_model_column.columnId": [
                                3
                            ],
                            "inputs.columnId": [
                                55
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                4
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                3
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                2
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                16
                            ]
                        }
                    },
                    "81": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                6,
                                10,
                                16
                            ],
                            "relationships.parentKeyId": [
                                10,
                                11,
                                12,
                                13,
                                27,
                                28,
                                37,
                                38
                            ]
                        }
                    },
                    "82": {
                        "hasMany": {}
                    },
                    "83": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                5
                            ]
                        }
                    },
                    "84": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                5
                            ],
                            "inputs.columnId": [
                                14
                            ]
                        }
                    },
                    "86": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                13,
                                25,
                                42,
                                43
                            ],
                            "relationships.parentKeyId": [
                                21,
                                22,
                                39,
                                40,
                                49,
                                50
                            ]
                        }
                    },
                    "87": {
                        "hasMany": {}
                    },
                    "88": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                6,
                                8,
                                10,
                                15
                            ]
                        }
                    },
                    "89": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                6,
                                8,
                                10,
                                15
                            ],
                            "inputs.columnId": [
                                16,
                                19,
                                26,
                                47
                            ]
                        }
                    },
                    "92": {
                        "hasMany": {
                            "inputs.columnId": [
                                17,
                                20,
                                27,
                                48
                            ]
                        }
                    },
                    "93": {
                        "hasMany": {
                            "index_column.columnId": [
                                8
                            ],
                            "relationships.foreignPivotKeyId": [
                                3
                            ],
                            "relationships.relatedPivotKeyId": [
                                2
                            ]
                        }
                    },
                    "94": {
                        "hasMany": {
                            "index_column.columnId": [
                                9
                            ],
                            "relationships.relatedPivotKeyId": [
                                3
                            ],
                            "relationships.foreignPivotKeyId": [
                                2
                            ]
                        }
                    },
                    "95": {
                        "hasMany": {
                            "index_column.columnId": [
                                10
                            ],
                            "relationships.foreignKeyId": [
                                4,
                                5,
                                6,
                                7,
                                35,
                                36
                            ],
                            "inputs.columnId": [
                                18,
                                21,
                                28,
                                50
                            ]
                        }
                    },
                    "101": {
                        "hasMany": {
                            "index_column.columnId": [
                                11
                            ],
                            "relationships.foreignPivotKeyId": [
                                19
                            ],
                            "relationships.relatedPivotKeyId": [
                                20
                            ]
                        }
                    },
                    "102": {
                        "hasMany": {
                            "index_column.columnId": [
                                15
                            ],
                            "relationships.relatedPivotKeyId": [
                                19
                            ],
                            "relationships.foreignPivotKeyId": [
                                20
                            ]
                        }
                    },
                    "103": {
                        "hasMany": {
                            "index_column.columnId": [
                                13
                            ],
                            "relationships.foreignKeyId": [
                                10,
                                11,
                                12,
                                13,
                                37,
                                38
                            ],
                            "inputs.columnId": [
                                22,
                                29,
                                49
                            ]
                        }
                    },
                    "105": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                14,
                                37
                            ],
                            "relationships.parentKeyId": [
                                23,
                                24,
                                41,
                                42
                            ]
                        }
                    },
                    "106": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                12
                            ],
                            "inputs.columnId": [
                                35
                            ]
                        }
                    },
                    "107": {
                        "hasMany": {
                            "inputs.columnId": [
                                36
                            ]
                        }
                    },
                    "108": {
                        "hasMany": {}
                    },
                    "109": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                12
                            ]
                        }
                    },
                    "110": {
                        "hasMany": {}
                    },
                    "111": {
                        "hasMany": {}
                    },
                    "112": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                9,
                                11,
                                13,
                                14
                            ]
                        }
                    },
                    "113": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                9,
                                11,
                                13,
                                14
                            ],
                            "inputs.columnId": [
                                23,
                                30,
                                38,
                                42
                            ]
                        }
                    },
                    "114": {
                        "hasMany": {
                            "inputs.columnId": [
                                24,
                                31,
                                39,
                                43
                            ]
                        }
                    },
                    "115": {
                        "hasMany": {
                            "index_column.columnId": [
                                16
                            ],
                            "relationships.foreignKeyId": [
                                21,
                                22
                            ],
                            "inputs.columnId": [
                                32,
                                40,
                                44
                            ]
                        }
                    },
                    "116": {
                        "hasMany": {
                            "index_column.columnId": [
                                17
                            ],
                            "relationships.foreignKeyId": [
                                23,
                                24
                            ],
                            "inputs.columnId": [
                                25,
                                33,
                                45
                            ]
                        }
                    },
                    "117": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                20
                            ],
                            "relationships.parentKeyId": [
                                31,
                                32
                            ]
                        }
                    },
                    "118": {
                        "hasMany": {}
                    },
                    "119": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                2,
                                3,
                                18
                            ]
                        }
                    },
                    "120": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                15
                            ],
                            "relationships.parentKeyId": [
                                25,
                                26
                            ]
                        }
                    },
                    "121": {
                        "hasMany": {}
                    },
                    "122": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                1,
                                17
                            ]
                        }
                    },
                    "123": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                1,
                                17
                            ],
                            "inputs.columnId": [
                                1,
                                56
                            ]
                        }
                    },
                    "124": {
                        "hasMany": {
                            "inputs.columnId": [
                                2,
                                57
                            ]
                        }
                    },
                    "126": {
                        "hasMany": {
                            "index_column.columnId": [
                                18
                            ],
                            "relationships.foreignKeyId": [
                                25,
                                26
                            ],
                            "inputs.columnId": [
                                7
                            ]
                        }
                    },
                    "127": {
                        "hasMany": {
                            "index_column.columnId": [
                                19
                            ],
                            "relationships.foreignKeyId": [
                                27,
                                28
                            ],
                            "inputs.columnId": [
                                4,
                                8,
                                59
                            ]
                        }
                    },
                    "128": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                2,
                                3,
                                18
                            ],
                            "inputs.columnId": [
                                5,
                                9,
                                60
                            ]
                        }
                    },
                    "132": {
                        "hasMany": {
                            "inputs.columnId": [
                                37
                            ]
                        }
                    },
                    "133": {
                        "hasMany": {}
                    },
                    "134": {
                        "hasMany": {}
                    },
                    "135": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                4
                            ]
                        }
                    },
                    "136": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                4
                            ],
                            "inputs.columnId": [
                                11
                            ]
                        }
                    },
                    "140": {
                        "hasMany": {
                            "index_column.columnId": [
                                23
                            ],
                            "relationships.foreignKeyId": [
                                31,
                                32
                            ]
                        }
                    },
                    "141": {
                        "hasMany": {
                            "inputs.columnId": [
                                3,
                                58
                            ]
                        }
                    },
                    "142": {
                        "hasMany": {
                            "inputs.columnId": [
                                6,
                                10,
                                61
                            ]
                        }
                    },
                    "143": {
                        "hasMany": {
                            "inputs.columnId": [
                                13
                            ]
                        }
                    },
                    "144": {
                        "hasMany": {
                            "inputs.columnId": [
                                15
                            ]
                        }
                    },
                    "195": {
                        "hasMany": {
                            "inputs.columnId": [
                                51
                            ]
                        }
                    },
                    "196": {
                        "hasMany": {
                            "inputs.columnId": [
                                52
                            ]
                        }
                    },
                    "197": {
                        "hasMany": {}
                    },
                    "198": {
                        "hasMany": {}
                    },
                    "199": {
                        "hasMany": {
                            "index_column.columnId": [
                                27
                            ],
                            "relationships.foreignKeyId": [
                                39,
                                40
                            ]
                        }
                    },
                    "200": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                29,
                                34
                            ]
                        }
                    },
                    "201": {
                        "hasMany": {
                            "index_column.columnId": [
                                28
                            ]
                        }
                    },
                    "202": {
                        "hasMany": {
                            "index_column.columnId": [
                                29
                            ]
                        }
                    },
                    "203": {
                        "hasMany": {}
                    },
                    "204": {
                        "hasMany": {}
                    },
                    "205": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                32,
                                35
                            ]
                        }
                    },
                    "206": {
                        "hasMany": {
                            "index_column.columnId": [
                                30
                            ]
                        }
                    },
                    "207": {
                        "hasMany": {
                            "index_column.columnId": [
                                31
                            ]
                        }
                    },
                    "208": {
                        "hasMany": {}
                    },
                    "209": {
                        "hasMany": {}
                    },
                    "210": {
                        "hasMany": {
                            "index_column.columnId": [
                                34,
                                35
                            ]
                        }
                    },
                    "211": {
                        "hasMany": {
                            "index_column.columnId": [
                                33,
                                37
                            ]
                        }
                    },
                    "212": {
                        "hasMany": {
                            "index_column.columnId": [
                                32,
                                36
                            ]
                        }
                    },
                    "213": {
                        "hasMany": {
                            "index_column.columnId": [
                                40,
                                41
                            ]
                        }
                    },
                    "214": {
                        "hasMany": {
                            "index_column.columnId": [
                                39,
                                43
                            ]
                        }
                    },
                    "215": {
                        "hasMany": {
                            "index_column.columnId": [
                                38,
                                42
                            ]
                        }
                    },
                    "216": {
                        "hasMany": {
                            "index_column.columnId": [
                                44,
                                46
                            ]
                        }
                    },
                    "217": {
                        "hasMany": {
                            "index_column.columnId": [
                                45,
                                47
                            ]
                        }
                    },
                    "219": {
                        "hasMany": {
                            "index_column.columnId": [
                                48
                            ],
                            "relationships.foreignKeyId": [
                                41,
                                42
                            ]
                        }
                    },
                    "224": {
                        "hasMany": {
                            "index_column.columnId": [
                                53
                            ],
                            "relationships.foreignKeyId": [
                                49,
                                50
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "order": 1,
                "options": [],
                "id": 2,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_3": {
                "name": "email",
                "type": "string",
                "length": 255,
                "unique": true,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": 255,
                    "type": "string",
                    "unique": true,
                    "options": []
                },
                "faker": "fake()->unique()->safeEmail()",
                "order": 2,
                "options": [],
                "id": 3,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_4": {
                "name": "email_verified_at",
                "type": "timestamp",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "email_verified_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "now()",
                "order": 3,
                "options": [],
                "id": 4,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_5": {
                "name": "password",
                "type": "string",
                "length": 255,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "password",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "\\Hash::make('password')",
                "order": 4,
                "options": [],
                "id": 5,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_6": {
                "name": "two_factor_secret",
                "type": "text",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "two_factor_secret",
                    "nullable": true,
                    "type": "text",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->text()",
                "order": 5,
                "options": [],
                "id": 6,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_7": {
                "name": "two_factor_recovery_codes",
                "type": "text",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "two_factor_recovery_codes",
                    "nullable": true,
                    "type": "text",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->text()",
                "order": 6,
                "options": [],
                "id": 7,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_8": {
                "name": "two_factor_confirmed_at",
                "type": "timestamp",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "two_factor_confirmed_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "",
                "order": 7,
                "options": [],
                "id": 8,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_9": {
                "name": "remember_token",
                "type": "string",
                "length": 100,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "remember_token",
                    "length": 100,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "Str::random(10)",
                "order": 8,
                "options": [],
                "id": 9,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_10": {
                "name": "current_team_id",
                "type": "bigInteger",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "current_team_id",
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "autoIncrement": false,
                "faker": "",
                "order": 9,
                "options": [],
                "id": 10,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_11": {
                "name": "profile_photo_path",
                "type": "string",
                "length": 2048,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "profile_photo_path",
                    "length": 2048,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "",
                "order": 10,
                "options": [],
                "id": 11,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_12": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 11,
                "options": [],
                "id": 12,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_13": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 12,
                "options": [],
                "id": 13,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_81": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 81,
                "createdAt": "2025-01-29 16:45:44",
                "updatedAt": "2025-01-30 11:49:12",
                "options": []
            },
            "item_82": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 3,
                "id": 82,
                "createdAt": "2025-01-29 16:45:44",
                "updatedAt": "2025-01-30 11:49:12",
                "options": []
            },
            "item_83": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 4,
                "id": 83,
                "createdAt": "2025-01-29 16:45:44",
                "updatedAt": "2025-01-30 11:49:12",
                "options": []
            },
            "item_84": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "id": 84,
                "createdAt": "2025-01-29 16:46:06",
                "updatedAt": "2025-01-30 11:49:12",
                "order": 1,
                "options": []
            },
            "item_86": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 86,
                "createdAt": "2025-01-29 16:46:42",
                "updatedAt": "2025-01-30 11:49:12",
                "options": []
            },
            "item_87": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 6,
                "id": 87,
                "createdAt": "2025-01-29 16:46:42",
                "updatedAt": "2025-01-30 11:49:12",
                "options": []
            },
            "item_88": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 7,
                "id": 88,
                "createdAt": "2025-01-29 16:46:42",
                "updatedAt": "2025-01-30 11:49:12",
                "options": []
            },
            "item_89": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "id": 89,
                "createdAt": "2025-01-29 16:46:52",
                "updatedAt": "2025-01-30 11:49:12",
                "order": 1,
                "options": []
            },
            "item_92": {
                "name": "status",
                "type": "enum",
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "type": "enum",
                    "options": [
                        "in_where_house",
                        "asset",
                        "in_maintenance",
                        "damaged"
                    ]
                },
                "faker": "fake()->word()",
                "id": 92,
                "createdAt": "2025-01-29 16:47:35",
                "updatedAt": "2025-01-30 11:49:12",
                "order": 2,
                "options": [
                    "in_where_house",
                    "asset",
                    "in_maintenance",
                    "damaged"
                ]
            },
            "item_93": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 93,
                "createdAt": "2025-01-29 16:50:03",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 0,
                "options": []
            },
            "item_94": {
                "name": "warehouse_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "warehouse_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 94,
                "createdAt": "2025-01-29 16:50:03",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 1,
                "options": []
            },
            "item_95": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 95,
                "createdAt": "2025-01-29 16:50:46",
                "updatedAt": "2025-01-30 11:49:12",
                "order": 7,
                "options": []
            },
            "item_101": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 17,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 101,
                "createdAt": "2025-01-29 16:53:05",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 0,
                "options": []
            },
            "item_102": {
                "name": "maintenance_department_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 17,
                "removed": false,
                "schemaState": {
                    "name": "maintenance_department_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 102,
                "createdAt": "2025-01-29 16:53:05",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 1,
                "options": []
            },
            "item_103": {
                "name": "warehouse_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "warehouse_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 103,
                "createdAt": "2025-01-29 16:53:41",
                "updatedAt": "2025-01-30 11:49:12",
                "order": 4,
                "options": []
            },
            "item_105": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "options": [],
                "id": 105,
                "createdAt": "2025-01-29 17:05:13",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_106": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "order": 1,
                "options": [],
                "id": 106,
                "createdAt": "2025-01-29 17:05:13",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_107": {
                "name": "location",
                "type": "string",
                "length": 255,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "location",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->text({LENGTH})",
                "order": 2,
                "options": [],
                "id": 107,
                "createdAt": "2025-01-29 17:05:13",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_108": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 4,
                "options": [],
                "id": 108,
                "createdAt": "2025-01-29 17:05:13",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_109": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 5,
                "options": [],
                "id": 109,
                "createdAt": "2025-01-29 17:05:13",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_110": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 110,
                "createdAt": "2025-01-29 17:05:48",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_111": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 8,
                "id": 111,
                "createdAt": "2025-01-29 17:05:48",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_112": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 9,
                "id": 112,
                "createdAt": "2025-01-29 17:05:48",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_113": {
                "name": "status",
                "type": "string",
                "length": 255,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->word()",
                "id": 113,
                "createdAt": "2025-01-29 17:05:59",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 1,
                "options": []
            },
            "item_114": {
                "name": "note",
                "type": "text",
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "note",
                    "type": "text",
                    "options": []
                },
                "faker": "fake()->word()",
                "id": 114,
                "createdAt": "2025-01-29 17:06:07",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 2,
                "options": []
            },
            "item_115": {
                "name": "item_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "item_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 115,
                "createdAt": "2025-01-29 17:06:50",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 3,
                "options": []
            },
            "item_116": {
                "name": "maintenance_department_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "maintenance_department_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 116,
                "createdAt": "2025-01-29 17:06:58",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 4,
                "options": []
            },
            "item_117": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 20,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 117,
                "createdAt": "2025-01-29 17:07:34",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_118": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 20,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 5,
                "id": 118,
                "createdAt": "2025-01-29 17:07:34",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_119": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 20,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 6,
                "id": 119,
                "createdAt": "2025-01-29 17:07:34",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_120": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 120,
                "createdAt": "2025-01-29 17:08:53",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_121": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 4,
                "id": 121,
                "createdAt": "2025-01-29 17:08:53",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_122": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 5,
                "id": 122,
                "createdAt": "2025-01-29 17:08:53",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_123": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "id": 123,
                "createdAt": "2025-01-29 17:09:00",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 1,
                "options": []
            },
            "item_124": {
                "name": "phone",
                "type": "string",
                "length": 255,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "phone",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->phoneNumber()",
                "id": 124,
                "createdAt": "2025-01-29 17:09:03",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 2,
                "options": []
            },
            "item_126": {
                "name": "supplier_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 20,
                "removed": false,
                "schemaState": {
                    "name": "supplier_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 126,
                "createdAt": "2025-01-29 17:09:27",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 1,
                "options": []
            },
            "item_127": {
                "name": "warehouse_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 20,
                "removed": false,
                "schemaState": {
                    "name": "warehouse_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 127,
                "createdAt": "2025-01-29 17:09:38",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 2,
                "options": []
            },
            "item_128": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 20,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "id": 128,
                "createdAt": "2025-01-29 17:09:44",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 3,
                "options": []
            },
            "item_132": {
                "name": "type",
                "type": "enum",
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "type",
                    "type": "enum",
                    "options": [
                        "internal",
                        "external"
                    ]
                },
                "faker": "fake()->word()",
                "id": 132,
                "createdAt": "2025-01-29 17:15:39",
                "updatedAt": "2025-01-30 11:49:12",
                "order": 3,
                "options": [
                    "internal",
                    "external"
                ]
            },
            "item_133": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 133,
                "createdAt": "2025-01-29 17:21:10",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_134": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 5,
                "id": 134,
                "createdAt": "2025-01-29 17:21:10",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_135": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 6,
                "id": 135,
                "createdAt": "2025-01-29 17:21:10",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_136": {
                "name": "name",
                "type": "string",
                "length": 255,
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->name()",
                "order": 1,
                "options": [],
                "id": 136,
                "createdAt": "2025-01-29 17:22:58",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_140": {
                "name": "order_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "order_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 7,
                "options": [],
                "id": 140,
                "createdAt": "2025-01-29 17:22:58",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_141": {
                "name": "location",
                "type": "string",
                "length": 255,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "location",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->word()",
                "id": 141,
                "createdAt": "2025-01-29 17:28:05",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 3,
                "options": []
            },
            "item_142": {
                "name": "status",
                "type": "string",
                "length": 255,
                "tableId": 20,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "length": 255,
                    "type": "string",
                    "default": "Waiting",
                    "options": []
                },
                "default": "Waiting",
                "faker": "fake()->word()",
                "id": 142,
                "createdAt": "2025-01-29 17:29:33",
                "updatedAt": "2025-01-30 11:49:13",
                "options": []
            },
            "item_143": {
                "name": "price",
                "type": "decimal",
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "price",
                    "type": "decimal",
                    "total": 8,
                    "places": 2,
                    "options": []
                },
                "faker": "fake()->randomFloat(2, 0, 9999)",
                "id": 143,
                "createdAt": "2025-01-29 17:29:45",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 8,
                "total": 8,
                "places": 2,
                "options": []
            },
            "item_144": {
                "name": "location",
                "type": "string",
                "length": 255,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "location",
                    "length": 255,
                    "type": "string",
                    "options": []
                },
                "faker": "fake()->word()",
                "id": 144,
                "createdAt": "2025-01-29 17:36:06",
                "updatedAt": "2025-01-30 11:49:12",
                "order": 2,
                "options": []
            },
            "item_195": {
                "name": "barcode",
                "type": "string",
                "length": 255,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "barcode",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->text({LENGTH})",
                "order": 8,
                "options": [],
                "id": 195,
                "createdAt": "2025-01-29 23:41:18",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_196": {
                "name": "barcode_image",
                "type": "string",
                "length": 255,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "barcode_image",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->text({LENGTH})",
                "order": 9,
                "options": [],
                "id": 196,
                "createdAt": "2025-01-29 23:41:18",
                "updatedAt": "2025-01-30 11:49:12"
            },
            "item_197": {
                "name": "barcode",
                "type": "string",
                "length": 255,
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "barcode",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->text({LENGTH})",
                "order": 9,
                "options": [],
                "id": 197,
                "createdAt": "2025-01-29 23:41:18",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_198": {
                "name": "barcode_image",
                "type": "string",
                "length": 255,
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "barcode_image",
                    "length": 255,
                    "nullable": true,
                    "type": "string",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->text({LENGTH})",
                "order": 10,
                "options": [],
                "id": 198,
                "createdAt": "2025-01-29 23:41:18",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_199": {
                "name": "damaged_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "damaged_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 199,
                "createdAt": "2025-01-29 23:44:04",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 6,
                "options": []
            },
            "item_200": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "order": 0,
                "options": [],
                "id": 200,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_201": {
                "name": "name",
                "type": "string",
                "index": true,
                "length": 255,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "index": true,
                    "options": []
                },
                "faker": "fake()->name()",
                "order": 1,
                "options": [],
                "id": 201,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_202": {
                "name": "guard_name",
                "type": "string",
                "index": true,
                "length": 255,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "guard_name",
                    "length": 255,
                    "type": "string",
                    "index": true,
                    "options": []
                },
                "faker": "fake()->text({LENGTH})",
                "order": 2,
                "options": [],
                "id": 202,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_203": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 3,
                "options": [],
                "id": 203,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_204": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 4,
                "options": [],
                "id": 204,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_205": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 32,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": true,
                "order": 0,
                "options": [],
                "id": 205,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_206": {
                "name": "name",
                "type": "string",
                "index": true,
                "length": 255,
                "tableId": 32,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": 255,
                    "type": "string",
                    "index": true,
                    "options": []
                },
                "faker": "fake()->name()",
                "order": 1,
                "options": [],
                "id": 206,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_207": {
                "name": "guard_name",
                "type": "string",
                "index": true,
                "length": 255,
                "tableId": 32,
                "removed": false,
                "schemaState": {
                    "name": "guard_name",
                    "length": 255,
                    "type": "string",
                    "index": true,
                    "options": []
                },
                "faker": "fake()->text({LENGTH})",
                "order": 2,
                "options": [],
                "id": 207,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_208": {
                "name": "created_at",
                "type": "timestamp",
                "tableId": 32,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 3,
                "options": [],
                "id": 208,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_209": {
                "name": "updated_at",
                "type": "timestamp",
                "tableId": 32,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "nullable": true,
                    "type": "timestamp",
                    "options": []
                },
                "nullable": true,
                "faker": "fake()->dateTime()",
                "order": 4,
                "options": [],
                "id": 209,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_210": {
                "name": "permission_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 33,
                "removed": false,
                "schemaState": {
                    "name": "permission_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 0,
                "options": [],
                "id": 210,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_211": {
                "name": "model_type",
                "type": "string",
                "index": true,
                "length": 255,
                "tableId": 33,
                "removed": false,
                "schemaState": {
                    "name": "model_type",
                    "length": 255,
                    "type": "string",
                    "index": true,
                    "options": []
                },
                "order": 1,
                "options": [],
                "id": 211,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_212": {
                "name": "model_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 33,
                "removed": false,
                "schemaState": {
                    "name": "model_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 2,
                "options": [],
                "id": 212,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_213": {
                "name": "role_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 34,
                "removed": false,
                "schemaState": {
                    "name": "role_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 0,
                "options": [],
                "id": 213,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_214": {
                "name": "model_type",
                "type": "string",
                "index": true,
                "length": 255,
                "tableId": 34,
                "removed": false,
                "schemaState": {
                    "name": "model_type",
                    "length": 255,
                    "type": "string",
                    "index": true,
                    "options": []
                },
                "order": 1,
                "options": [],
                "id": 214,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_215": {
                "name": "model_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 34,
                "removed": false,
                "schemaState": {
                    "name": "model_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 2,
                "options": [],
                "id": 215,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_216": {
                "name": "permission_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 35,
                "removed": false,
                "schemaState": {
                    "name": "permission_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": "",
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 0,
                "options": [],
                "id": 216,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_217": {
                "name": "role_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 35,
                "removed": false,
                "schemaState": {
                    "name": "role_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "options": [],
                "id": 217,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13"
            },
            "item_219": {
                "name": "maintenance_department_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "maintenance_department_id",
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 219,
                "createdAt": "2025-01-30 11:41:37",
                "updatedAt": "2025-01-30 11:49:12",
                "order": 5,
                "options": []
            },
            "item_224": {
                "name": "asset_id",
                "type": "bigInteger",
                "index": true,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "asset_id",
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "options": []
                },
                "unsigned": true,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 224,
                "createdAt": "2025-01-30 11:48:56",
                "updatedAt": "2025-01-30 11:49:13",
                "order": 7,
                "options": []
            }
        },
        "indices": {
            "__tableData": {
                "count": 26,
                "lastPrimaryKey": 43,
                "index": {
                    "5": {
                        "hasMany": {
                            "index_column.indexId": [
                                8
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "index_column.indexId": [
                                9
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "index_column.indexId": [
                                10
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "index_column.indexId": [
                                11
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "index_column.indexId": [
                                13
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "index_column.indexId": [
                                15
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "index_column.indexId": [
                                16
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "index_column.indexId": [
                                17
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "index_column.indexId": [
                                18
                            ]
                        }
                    },
                    "16": {
                        "hasMany": {
                            "index_column.indexId": [
                                19
                            ]
                        }
                    },
                    "20": {
                        "hasMany": {
                            "index_column.indexId": [
                                23
                            ]
                        }
                    },
                    "25": {
                        "hasMany": {
                            "index_column.indexId": [
                                27
                            ]
                        }
                    },
                    "26": {
                        "hasMany": {
                            "index_column.indexId": [
                                28,
                                29
                            ]
                        }
                    },
                    "27": {
                        "hasMany": {
                            "index_column.indexId": [
                                30,
                                31
                            ]
                        }
                    },
                    "28": {
                        "hasMany": {
                            "index_column.indexId": [
                                32,
                                33
                            ]
                        }
                    },
                    "29": {
                        "hasMany": {
                            "index_column.indexId": [
                                34
                            ]
                        }
                    },
                    "30": {
                        "hasMany": {
                            "index_column.indexId": [
                                35,
                                36,
                                37
                            ]
                        }
                    },
                    "31": {
                        "hasMany": {
                            "index_column.indexId": [
                                38,
                                39
                            ]
                        }
                    },
                    "32": {
                        "hasMany": {
                            "index_column.indexId": [
                                40
                            ]
                        }
                    },
                    "33": {
                        "hasMany": {
                            "index_column.indexId": [
                                41,
                                42,
                                43
                            ]
                        }
                    },
                    "34": {
                        "hasMany": {
                            "index_column.indexId": [
                                44
                            ]
                        }
                    },
                    "35": {
                        "hasMany": {
                            "index_column.indexId": [
                                45
                            ]
                        }
                    },
                    "36": {
                        "hasMany": {
                            "index_column.indexId": [
                                46,
                                47
                            ]
                        }
                    },
                    "37": {
                        "hasMany": {
                            "index_column.indexId": [
                                48
                            ]
                        }
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {
                            "index_column.indexId": [
                                53
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_5": {
                "tableId": 15,
                "name": "user_warehouse_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 1,
                "references": "id",
                "referencesColumnId": 1,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 5,
                "createdAt": "2025-01-29 16:50:03",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "user_warehouse_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_6": {
                "tableId": 15,
                "name": "user_warehouse_warehouse_id_foreign",
                "columns": [
                    "warehouse_id"
                ],
                "type": "foreign",
                "on": "warehouses",
                "onTableId": 13,
                "references": "id",
                "referencesColumnId": 81,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 6,
                "createdAt": "2025-01-29 16:50:03",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "user_warehouse_warehouse_id_foreign",
                    "columns": [
                        "warehouse_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "warehouses",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_7": {
                "tableId": 14,
                "name": "items_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 1,
                "references": "id",
                "referencesColumnId": 1,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 7,
                "createdAt": "2025-01-29 16:50:46",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "items_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_8": {
                "tableId": 17,
                "name": "maintenance_department_user_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 1,
                "references": "id",
                "referencesColumnId": 1,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 8,
                "createdAt": "2025-01-29 16:53:05",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "maintenance_department_user_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_10": {
                "tableId": 14,
                "name": "items_warehouse_id_foreign",
                "columns": [
                    "warehouse_id"
                ],
                "type": "foreign",
                "on": "warehouses",
                "onTableId": 13,
                "references": "id",
                "referencesColumnId": 81,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 10,
                "createdAt": "2025-01-29 16:53:41",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "items_warehouse_id_foreign",
                    "columns": [
                        "warehouse_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "warehouses",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_12": {
                "tableId": 17,
                "name": "maintenance_department_user_maintenance_department_id_foreign",
                "columns": [
                    "maintenance_department_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "Maintenance_departments",
                "references": "id",
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "maintenance_department_user_maintenance_department_id_foreign",
                    "columns": [
                        "maintenance_department_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "Maintenance_departments",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                },
                "id": 12,
                "createdAt": "2025-01-29 17:05:13",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false
            },
            "item_13": {
                "tableId": 19,
                "name": "maintenance_items_item_id_foreign",
                "columns": [
                    "item_id"
                ],
                "type": "foreign",
                "on": "items",
                "onTableId": 14,
                "references": "id",
                "referencesColumnId": 86,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 13,
                "createdAt": "2025-01-29 17:06:50",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "maintenance_items_item_id_foreign",
                    "columns": [
                        "item_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "items",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_14": {
                "tableId": 19,
                "name": "maintenance_items_maintenance_department_id_foreign",
                "columns": [
                    "maintenance_department_id"
                ],
                "type": "foreign",
                "on": "maintenance_departments",
                "onTableId": 18,
                "references": "id",
                "referencesColumnId": 105,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 14,
                "createdAt": "2025-01-29 17:06:58",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "maintenance_items_maintenance_department_id_foreign",
                    "columns": [
                        "maintenance_department_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "maintenance_departments",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_15": {
                "tableId": 20,
                "name": "orders_supplier_id_foreign",
                "columns": [
                    "supplier_id"
                ],
                "type": "foreign",
                "on": "suppliers",
                "onTableId": 21,
                "references": "id",
                "referencesColumnId": 120,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 15,
                "createdAt": "2025-01-29 17:09:27",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "orders_supplier_id_foreign",
                    "columns": [
                        "supplier_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "suppliers",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_16": {
                "tableId": 20,
                "name": "orders_warehouse_id_foreign",
                "columns": [
                    "warehouse_id"
                ],
                "type": "foreign",
                "on": "warehouses",
                "onTableId": 13,
                "references": "id",
                "referencesColumnId": 81,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 16,
                "createdAt": "2025-01-29 17:09:38",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "orders_warehouse_id_foreign",
                    "columns": [
                        "warehouse_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "warehouses",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_20": {
                "tableId": 22,
                "name": "order_items_order_id_foreign",
                "columns": [
                    "order_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "orders",
                "references": "id",
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "order_items_order_id_foreign",
                    "columns": [
                        "order_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "orders",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                },
                "id": 20,
                "createdAt": "2025-01-29 17:22:58",
                "updatedAt": "2025-01-30 11:49:13",
                "onTableId": 20,
                "referencesColumnId": 117,
                "removed": false
            },
            "item_25": {
                "tableId": 19,
                "name": "maintenance_items_damaged_id_foreign",
                "columns": [
                    "damaged_id"
                ],
                "type": "foreign",
                "on": "items",
                "onTableId": 14,
                "references": "id",
                "referencesColumnId": 86,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 25,
                "createdAt": "2025-01-29 23:44:04",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "maintenance_items_damaged_id_foreign",
                    "columns": [
                        "damaged_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "items",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_26": {
                "tableId": 31,
                "name": "permissions_name_guard_name_unique",
                "columns": [
                    "name",
                    "guard_name"
                ],
                "algorithm": null,
                "type": "unique",
                "schemaState": {
                    "name": "permissions_name_guard_name_unique",
                    "columns": [
                        "name",
                        "guard_name"
                    ],
                    "algorithm": null,
                    "type": "unique"
                },
                "id": 26,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false
            },
            "item_27": {
                "tableId": 32,
                "name": "roles_name_guard_name_unique",
                "columns": [
                    "name",
                    "guard_name"
                ],
                "algorithm": null,
                "type": "unique",
                "schemaState": {
                    "name": "roles_name_guard_name_unique",
                    "columns": [
                        "name",
                        "guard_name"
                    ],
                    "algorithm": null,
                    "type": "unique"
                },
                "id": 27,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false
            },
            "item_28": {
                "tableId": 33,
                "name": "model_has_permissions_model_id_model_type_index",
                "columns": [
                    "model_id",
                    "model_type"
                ],
                "algorithm": null,
                "type": "index",
                "schemaState": {
                    "name": "model_has_permissions_model_id_model_type_index",
                    "columns": [
                        "model_id",
                        "model_type"
                    ],
                    "algorithm": null,
                    "type": "index"
                },
                "id": 28,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false
            },
            "item_29": {
                "tableId": 33,
                "name": "model_has_permissions_permission_id_foreign",
                "columns": [
                    "permission_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "permissions",
                "references": "id",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "model_has_permissions_permission_id_foreign",
                    "columns": [
                        "permission_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "permissions",
                    "references": "id",
                    "onDelete": "cascade"
                },
                "id": 29,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "onTableId": 31,
                "referencesColumnId": 200,
                "removed": false
            },
            "item_30": {
                "tableId": 33,
                "name": "model_has_permissions_permission_model_type_primary",
                "columns": [
                    "permission_id",
                    "model_id",
                    "model_type"
                ],
                "algorithm": null,
                "type": "primary",
                "schemaState": {
                    "name": "model_has_permissions_permission_model_type_primary",
                    "columns": [
                        "permission_id",
                        "model_id",
                        "model_type"
                    ],
                    "algorithm": null,
                    "type": "primary"
                },
                "id": 30,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false
            },
            "item_31": {
                "tableId": 34,
                "name": "model_has_roles_model_id_model_type_index",
                "columns": [
                    "model_id",
                    "model_type"
                ],
                "algorithm": null,
                "type": "index",
                "schemaState": {
                    "name": "model_has_roles_model_id_model_type_index",
                    "columns": [
                        "model_id",
                        "model_type"
                    ],
                    "algorithm": null,
                    "type": "index"
                },
                "id": 31,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false
            },
            "item_32": {
                "tableId": 34,
                "name": "model_has_roles_role_id_foreign",
                "columns": [
                    "role_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "roles",
                "references": "id",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "model_has_roles_role_id_foreign",
                    "columns": [
                        "role_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "roles",
                    "references": "id",
                    "onDelete": "cascade"
                },
                "id": 32,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "onTableId": 32,
                "referencesColumnId": 205,
                "removed": false
            },
            "item_33": {
                "tableId": 34,
                "name": "model_has_roles_role_model_type_primary",
                "columns": [
                    "role_id",
                    "model_id",
                    "model_type"
                ],
                "algorithm": null,
                "type": "primary",
                "schemaState": {
                    "name": "model_has_roles_role_model_type_primary",
                    "columns": [
                        "role_id",
                        "model_id",
                        "model_type"
                    ],
                    "algorithm": null,
                    "type": "primary"
                },
                "id": 33,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false
            },
            "item_34": {
                "tableId": 35,
                "name": "role_has_permissions_permission_id_foreign",
                "columns": [
                    "permission_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "permissions",
                "references": "id",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "role_has_permissions_permission_id_foreign",
                    "columns": [
                        "permission_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "permissions",
                    "references": "id",
                    "onDelete": "cascade"
                },
                "id": 34,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "onTableId": 31,
                "referencesColumnId": 200,
                "removed": false
            },
            "item_35": {
                "tableId": 35,
                "name": "role_has_permissions_role_id_foreign",
                "columns": [
                    "role_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "roles",
                "references": "id",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "role_has_permissions_role_id_foreign",
                    "columns": [
                        "role_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "roles",
                    "references": "id",
                    "onDelete": "cascade"
                },
                "id": 35,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "onTableId": 32,
                "referencesColumnId": 205,
                "removed": false
            },
            "item_36": {
                "tableId": 35,
                "name": "role_has_permissions_permission_id_role_id_primary",
                "columns": [
                    "permission_id",
                    "role_id"
                ],
                "algorithm": null,
                "type": "primary",
                "schemaState": {
                    "name": "role_has_permissions_permission_id_role_id_primary",
                    "columns": [
                        "permission_id",
                        "role_id"
                    ],
                    "algorithm": null,
                    "type": "primary"
                },
                "id": 36,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false
            },
            "item_37": {
                "tableId": 14,
                "name": "items_maintenance_department_id_foreign",
                "columns": [
                    "maintenance_department_id"
                ],
                "type": "foreign",
                "on": "maintenance_departments",
                "onTableId": 18,
                "references": "id",
                "referencesColumnId": 105,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 37,
                "createdAt": "2025-01-30 11:41:37",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "items_maintenance_department_id_foreign",
                    "columns": [
                        "maintenance_department_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "maintenance_departments",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_42": {
                "tableId": 19,
                "name": "maintenance_items_asset_id_foreign",
                "columns": [
                    "asset_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "items",
                "references": "id",
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "maintenance_items_asset_id_foreign",
                    "columns": [
                        "asset_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "items",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                },
                "id": 42,
                "createdAt": "2025-01-30 11:44:49",
                "updatedAt": "2025-01-30 11:49:12",
                "onTableId": 14,
                "referencesColumnId": 86
            },
            "item_43": {
                "tableId": 19,
                "name": "maintenance_items_asset_id_foreign",
                "columns": [
                    "asset_id"
                ],
                "type": "foreign",
                "on": "items",
                "onTableId": 14,
                "references": "id",
                "referencesColumnId": 86,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 43,
                "createdAt": "2025-01-30 11:48:56",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "maintenance_items_asset_id_foreign",
                    "columns": [
                        "asset_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "items",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            }
        },
        "index_column": {
            "__tableData": {
                "count": 34,
                "lastPrimaryKey": 53,
                "index": {
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {}
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_8": {
                "indexId": 5,
                "columnId": 93,
                "id": 8,
                "createdAt": "2025-01-29 16:50:03",
                "updatedAt": "2025-01-29 16:50:03"
            },
            "item_9": {
                "indexId": 6,
                "columnId": 94,
                "id": 9,
                "createdAt": "2025-01-29 16:50:03",
                "updatedAt": "2025-01-29 16:50:03"
            },
            "item_10": {
                "indexId": 7,
                "columnId": 95,
                "id": 10,
                "createdAt": "2025-01-29 16:50:46",
                "updatedAt": "2025-01-29 16:50:46"
            },
            "item_11": {
                "indexId": 8,
                "columnId": 101,
                "id": 11,
                "createdAt": "2025-01-29 16:53:05",
                "updatedAt": "2025-01-29 16:53:05"
            },
            "item_13": {
                "indexId": 10,
                "columnId": 103,
                "id": 13,
                "createdAt": "2025-01-29 16:53:41",
                "updatedAt": "2025-01-29 16:53:41"
            },
            "item_15": {
                "indexId": 12,
                "columnId": 102,
                "id": 15,
                "createdAt": "2025-01-29 17:05:13",
                "updatedAt": "2025-01-29 17:05:13"
            },
            "item_16": {
                "indexId": 13,
                "columnId": 115,
                "id": 16,
                "createdAt": "2025-01-29 17:06:50",
                "updatedAt": "2025-01-29 17:06:50"
            },
            "item_17": {
                "indexId": 14,
                "columnId": 116,
                "id": 17,
                "createdAt": "2025-01-29 17:06:58",
                "updatedAt": "2025-01-29 17:06:58"
            },
            "item_18": {
                "indexId": 15,
                "columnId": 126,
                "id": 18,
                "createdAt": "2025-01-29 17:09:27",
                "updatedAt": "2025-01-29 17:09:27"
            },
            "item_19": {
                "indexId": 16,
                "columnId": 127,
                "id": 19,
                "createdAt": "2025-01-29 17:09:38",
                "updatedAt": "2025-01-29 17:09:38"
            },
            "item_23": {
                "indexId": 20,
                "columnId": 140,
                "id": 23,
                "createdAt": "2025-01-29 17:22:58",
                "updatedAt": "2025-01-29 17:22:58"
            },
            "item_27": {
                "indexId": 25,
                "columnId": 199,
                "id": 27,
                "createdAt": "2025-01-29 23:44:04",
                "updatedAt": "2025-01-29 23:44:04"
            },
            "item_28": {
                "indexId": 26,
                "columnId": 201,
                "id": 28,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_29": {
                "indexId": 26,
                "columnId": 202,
                "id": 29,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_30": {
                "indexId": 27,
                "columnId": 206,
                "id": 30,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_31": {
                "indexId": 27,
                "columnId": 207,
                "id": 31,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_32": {
                "indexId": 28,
                "columnId": 212,
                "id": 32,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_33": {
                "indexId": 28,
                "columnId": 211,
                "id": 33,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_34": {
                "indexId": 29,
                "columnId": 210,
                "id": 34,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_35": {
                "indexId": 30,
                "columnId": 210,
                "id": 35,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_36": {
                "indexId": 30,
                "columnId": 212,
                "id": 36,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_37": {
                "indexId": 30,
                "columnId": 211,
                "id": 37,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_38": {
                "indexId": 31,
                "columnId": 215,
                "id": 38,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_39": {
                "indexId": 31,
                "columnId": 214,
                "id": 39,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_40": {
                "indexId": 32,
                "columnId": 213,
                "id": 40,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_41": {
                "indexId": 33,
                "columnId": 213,
                "id": 41,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_42": {
                "indexId": 33,
                "columnId": 215,
                "id": 42,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_43": {
                "indexId": 33,
                "columnId": 214,
                "id": 43,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_44": {
                "indexId": 34,
                "columnId": 216,
                "id": 44,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_45": {
                "indexId": 35,
                "columnId": 217,
                "id": 45,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_46": {
                "indexId": 36,
                "columnId": 216,
                "id": 46,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_47": {
                "indexId": 36,
                "columnId": 217,
                "id": 47,
                "createdAt": "2025-01-30 02:47:49",
                "updatedAt": "2025-01-30 02:47:49"
            },
            "item_48": {
                "indexId": 37,
                "columnId": 219,
                "id": 48,
                "createdAt": "2025-01-30 11:41:37",
                "updatedAt": "2025-01-30 11:41:37"
            },
            "item_53": {
                "indexId": 43,
                "columnId": 224,
                "id": 53,
                "createdAt": "2025-01-30 11:48:56",
                "updatedAt": "2025-01-30 11:48:56"
            }
        },
        "models": {
            "__tableData": {
                "count": 10,
                "lastPrimaryKey": 99,
                "index": {
                    "4": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                5,
                                6,
                                7
                            ],
                            "hidden_model_column.modelId": [
                                1,
                                2,
                                3,
                                4
                            ],
                            "casts_model_column.modelId": [
                                2,
                                3
                            ],
                            "relationships.relatedModelId": [
                                2,
                                5,
                                7,
                                20,
                                36
                            ],
                            "relationships.modelId": [
                                3,
                                4,
                                6,
                                19,
                                35
                            ],
                            "cruds.modelId": [
                                16
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "relationships.modelId": [
                                2,
                                10,
                                12,
                                27,
                                37
                            ],
                            "relationships.relatedModelId": [
                                3,
                                11,
                                13,
                                28,
                                38
                            ],
                            "cruds.modelId": [
                                5
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                4,
                                10,
                                22,
                                41
                            ],
                            "relationships.modelId": [
                                5,
                                11,
                                21,
                                42
                            ],
                            "cruds.modelId": [
                                6,
                                8
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                6,
                                12,
                                50
                            ],
                            "relationships.modelId": [
                                7,
                                13,
                                49
                            ],
                            "cruds.modelId": [
                                10
                            ]
                        }
                    },
                    "16": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                19,
                                24,
                                42
                            ],
                            "relationships.modelId": [
                                20,
                                23,
                                41
                            ],
                            "cruds.modelId": [
                                12
                            ]
                        }
                    },
                    "17": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                21,
                                23,
                                40,
                                49
                            ],
                            "relationships.modelId": [
                                22,
                                24,
                                39,
                                50
                            ],
                            "cruds.modelId": [
                                9,
                                11,
                                13,
                                14
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                25,
                                27,
                                32
                            ],
                            "relationships.modelId": [
                                26,
                                28,
                                31
                            ],
                            "cruds.modelId": [
                                2,
                                3,
                                18
                            ]
                        }
                    },
                    "25": {
                        "hasMany": {
                            "relationships.modelId": [
                                25
                            ],
                            "relationships.relatedModelId": [
                                26
                            ],
                            "cruds.modelId": [
                                1,
                                17
                            ]
                        }
                    },
                    "29": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                31
                            ],
                            "relationships.modelId": [
                                32
                            ],
                            "cruds.modelId": [
                                4
                            ]
                        }
                    },
                    "78": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                35,
                                37,
                                39
                            ],
                            "relationships.modelId": [
                                36,
                                38,
                                40
                            ],
                            "cruds.modelId": [
                                15
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_4": {
                "projectId": 1,
                "name": "User",
                "fileName": "User.php",
                "tableName": "users",
                "class": "App\\Models\\User",
                "namespace": "App\\Models",
                "path": "Models\\User.php",
                "casts": {
                    "email_verified_at": "datetime",
                    "password": "hashed"
                },
                "fillable": [
                    "name",
                    "email",
                    "password"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [
                    "password",
                    "remember_token",
                    "two_factor_recovery_codes",
                    "two_factor_secret"
                ],
                "appends": [
                    "profile_photo_url"
                ],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "interfaces": [],
                "traits": [
                    "Laravel\\Jetstream\\HasTeams",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Notifications\\Notifiable",
                    "Laravel\\Sanctum\\HasApiTokens",
                    "Laravel\\Jetstream\\HasProfilePhoto",
                    "Laravel\\Fortify\\TwoFactorAuthenticatable",
                    "Spatie\\Permission\\Traits\\HasRoles"
                ],
                "allImports": [
                    "Laravel\\Jetstream\\HasTeams",
                    "Laravel\\Sanctum\\HasApiTokens",
                    "Laravel\\Jetstream\\HasProfilePhoto",
                    "Illuminate\\Notifications\\Notifiable",
                    "Laravel\\Fortify\\TwoFactorAuthenticatable",
                    "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                    "Spatie\\Permission\\Traits\\HasRoles"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": true,
                "schemaState": {
                    "name": "User",
                    "fileName": "User.php",
                    "tableName": "users",
                    "class": "App\\Models\\User",
                    "namespace": "App\\Models",
                    "path": "Models\\User.php",
                    "casts": {
                        "email_verified_at": "datetime",
                        "password": "hashed"
                    },
                    "fillable": [
                        "name",
                        "email",
                        "password"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [
                        "password",
                        "remember_token",
                        "two_factor_recovery_codes",
                        "two_factor_secret"
                    ],
                    "appends": [
                        "profile_photo_url"
                    ],
                    "methods": [],
                    "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                    "interfaces": [],
                    "traits": [
                        "Laravel\\Jetstream\\HasTeams",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Notifications\\Notifiable",
                        "Laravel\\Sanctum\\HasApiTokens",
                        "Laravel\\Jetstream\\HasProfilePhoto",
                        "Laravel\\Fortify\\TwoFactorAuthenticatable",
                        "Spatie\\Permission\\Traits\\HasRoles"
                    ],
                    "allImports": [
                        "Laravel\\Jetstream\\HasTeams",
                        "Laravel\\Sanctum\\HasApiTokens",
                        "Laravel\\Jetstream\\HasProfilePhoto",
                        "Illuminate\\Notifications\\Notifiable",
                        "Laravel\\Fortify\\TwoFactorAuthenticatable",
                        "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                        "Spatie\\Permission\\Traits\\HasRoles"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": true
                },
                "id": 4,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:49:13",
                "plural": "Users",
                "pluralAndSingularAreSame": false,
                "tableId": 1,
                "callSeeder": false,
                "seederQuantity": 5,
                "attributesComments": true,
                "methodsComments": true,
                "hooksWhenSchemaWasRead": {},
                "removed": false
            },
            "item_5": {
                "tableId": 13,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Warehouse",
                "plural": "Warehouses",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Warehouse",
                "fileName": "Warehouse.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 5,
                "createdAt": "2025-01-29 16:45:44",
                "updatedAt": "2025-01-30 11:49:13",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "warehouses",
                "path": "Models\\Warehouse.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Warehouse",
                    "fileName": "Warehouse.php",
                    "tableName": "warehouses",
                    "class": "App\\Models\\Warehouse",
                    "namespace": "App\\Models",
                    "path": "Models\\Warehouse.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_6": {
                "tableId": 14,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Item",
                "plural": "Items",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Item",
                "fileName": "Item.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 6,
                "createdAt": "2025-01-29 16:46:42",
                "updatedAt": "2025-01-30 11:49:13",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "items",
                "path": "Models\\Item.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Item",
                    "fileName": "Item.php",
                    "tableName": "items",
                    "class": "App\\Models\\Item",
                    "namespace": "App\\Models",
                    "path": "Models\\Item.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_7": {
                "tableId": 14,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "guarded": [],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 7,
                "createdAt": "2025-01-29 16:51:26",
                "updatedAt": "2025-01-30 11:49:13",
                "name": "Asset",
                "plural": "Assets",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Asset",
                "fileName": "Asset.php",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "items",
                "path": "Models\\Asset.php",
                "hasFillable": false,
                "hasTimestamps": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Asset",
                    "fileName": "Asset.php",
                    "tableName": "items",
                    "class": "App\\Models\\Asset",
                    "namespace": "App\\Models",
                    "path": "Models\\Asset.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": false,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_16": {
                "tableId": 18,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "MaintenanceDepartment",
                "plural": "MaintenanceDepartments",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\MaintenanceDepartment",
                "fileName": "MaintenanceDepartment.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 16,
                "createdAt": "2025-01-29 17:05:22",
                "updatedAt": "2025-01-30 11:49:13",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "maintenance_departments",
                "path": "Models\\MaintenanceDepartment.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "MaintenanceDepartment",
                    "fileName": "MaintenanceDepartment.php",
                    "tableName": "maintenance_departments",
                    "class": "App\\Models\\MaintenanceDepartment",
                    "namespace": "App\\Models",
                    "path": "Models\\MaintenanceDepartment.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_17": {
                "tableId": 19,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "MaintenanceItem",
                "plural": "MaintenanceItems",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\MaintenanceItem",
                "fileName": "MaintenanceItem.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 17,
                "createdAt": "2025-01-29 17:05:48",
                "updatedAt": "2025-01-30 11:49:13",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "maintenance_items",
                "path": "Models\\MaintenanceItem.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "MaintenanceItem",
                    "fileName": "MaintenanceItem.php",
                    "tableName": "maintenance_items",
                    "class": "App\\Models\\MaintenanceItem",
                    "namespace": "App\\Models",
                    "path": "Models\\MaintenanceItem.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_18": {
                "tableId": 20,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Order",
                "plural": "Orders",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Order",
                "fileName": "Order.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 18,
                "createdAt": "2025-01-29 17:07:34",
                "updatedAt": "2025-01-30 11:49:13",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "orders",
                "path": "Models\\Order.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Order",
                    "fileName": "Order.php",
                    "tableName": "orders",
                    "class": "App\\Models\\Order",
                    "namespace": "App\\Models",
                    "path": "Models\\Order.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_25": {
                "tableId": 21,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Supplier",
                "plural": "Suppliers",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Supplier",
                "fileName": "Supplier.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 25,
                "createdAt": "2025-01-29 17:08:53",
                "updatedAt": "2025-01-30 11:49:13",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "suppliers",
                "path": "Models\\Supplier.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Supplier",
                    "fileName": "Supplier.php",
                    "tableName": "suppliers",
                    "class": "App\\Models\\Supplier",
                    "namespace": "App\\Models",
                    "path": "Models\\Supplier.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_29": {
                "tableId": 22,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "OrderItem",
                "plural": "OrderItems",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\OrderItem",
                "fileName": "OrderItem.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [
                    {
                        "name": "boot",
                        "content": "    protected static function boot()\r\n    {\r\n        parent::boot();\r\n\r\n        static::created(function ($order) {\r\n\r\n\r\n            $generator = new BarcodeGeneratorPNG();\r\n            $barcode = $generator->getBarcode($order->barcode, $generator::TYPE_CODE_128);\r\n            $order->barcode_image = 'data:image/png;base64,' . base64_encode($barcode);\r\n            $order->save();\r\n\r\n        });\r\n    }\r\n"
                    }
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Picqer\\Barcode\\BarcodeGeneratorPNG"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 29,
                "createdAt": "2025-01-29 17:21:10",
                "updatedAt": "2025-01-30 11:49:13",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "order_items",
                "path": "Models\\OrderItem.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "OrderItem",
                    "fileName": "OrderItem.php",
                    "tableName": "order_items",
                    "class": "App\\Models\\OrderItem",
                    "namespace": "App\\Models",
                    "path": "Models\\OrderItem.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [
                        {
                            "name": "boot",
                            "content": "    protected static function boot()\r\n    {\r\n        parent::boot();\r\n\r\n        static::created(function ($order) {\r\n\r\n\r\n            $generator = new BarcodeGeneratorPNG();\r\n            $barcode = $generator->getBarcode($order->barcode, $generator::TYPE_CODE_128);\r\n            $order->barcode_image = 'data:image/png;base64,' . base64_encode($barcode);\r\n            $order->save();\r\n\r\n        });\r\n    }\r\n"
                        }
                    ],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Picqer\\Barcode\\BarcodeGeneratorPNG"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_78": {
                "tableId": 14,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "guarded": [],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 78,
                "createdAt": "2025-01-29 23:42:30",
                "updatedAt": "2025-01-30 11:49:13",
                "name": "Damaged",
                "plural": "Damageds",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Damaged",
                "fileName": "Damaged.php",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "items",
                "path": "Models\\Damaged.php",
                "hasFillable": false,
                "hasTimestamps": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Damaged",
                    "fileName": "Damaged.php",
                    "tableName": "items",
                    "class": "App\\Models\\Damaged",
                    "namespace": "App\\Models",
                    "path": "Models\\Damaged.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": false,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            }
        },
        "fillable_model_column": {
            "__tableData": {
                "count": 3,
                "lastPrimaryKey": 7,
                "index": {
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_5": {
                "modelId": 4,
                "columnId": 2,
                "id": 5,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            },
            "item_6": {
                "modelId": 4,
                "columnId": 3,
                "id": 6,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            },
            "item_7": {
                "modelId": 4,
                "columnId": 5,
                "id": 7,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            }
        },
        "casts_model_column": {
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 3,
                "index": {
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 4,
                "columnId": 4,
                "id": 2,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54",
                "type": "datetime"
            },
            "item_3": {
                "modelId": 4,
                "columnId": 5,
                "id": 3,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54",
                "type": "hashed"
            }
        },
        "relationships": {
            "__tableData": {
                "count": 32,
                "lastPrimaryKey": 50,
                "index": {
                    "2": {
                        "hasMany": {
                            "relationships.inverseId": [
                                3
                            ],
                            "belongs_to_many_details.relationshipId": [
                                1
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "relationships.inverseId": [
                                2
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "relationships.inverseId": [
                                5
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "relationships.inverseId": [
                                4
                            ],
                            "inputs.relationshipId": [
                                18,
                                21,
                                28,
                                50
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "relationships.inverseId": [
                                7
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "relationships.inverseId": [
                                6
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "relationships.inverseId": [
                                11
                            ],
                            "has_many_details.relationshipId": [
                                3
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "relationships.inverseId": [
                                10
                            ],
                            "inputs.relationshipId": [
                                22,
                                29,
                                49
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "relationships.inverseId": [
                                13
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "relationships.inverseId": [
                                12
                            ]
                        }
                    },
                    "19": {
                        "hasMany": {
                            "relationships.inverseId": [
                                20
                            ]
                        }
                    },
                    "20": {
                        "hasMany": {
                            "relationships.inverseId": [
                                19
                            ],
                            "belongs_to_many_details.relationshipId": [
                                2
                            ]
                        }
                    },
                    "21": {
                        "hasMany": {
                            "relationships.inverseId": [
                                22
                            ],
                            "has_many_details.relationshipId": [
                                4
                            ]
                        }
                    },
                    "22": {
                        "hasMany": {
                            "relationships.inverseId": [
                                21
                            ],
                            "inputs.relationshipId": [
                                32,
                                40,
                                44
                            ]
                        }
                    },
                    "23": {
                        "hasMany": {
                            "relationships.inverseId": [
                                24
                            ],
                            "has_many_details.relationshipId": [
                                6
                            ]
                        }
                    },
                    "24": {
                        "hasMany": {
                            "relationships.inverseId": [
                                23
                            ],
                            "inputs.relationshipId": [
                                25,
                                33,
                                45
                            ]
                        }
                    },
                    "25": {
                        "hasMany": {
                            "relationships.inverseId": [
                                26
                            ],
                            "has_many_details.relationshipId": [
                                1,
                                7
                            ]
                        }
                    },
                    "26": {
                        "hasMany": {
                            "relationships.inverseId": [
                                25
                            ],
                            "inputs.relationshipId": [
                                7
                            ]
                        }
                    },
                    "27": {
                        "hasMany": {
                            "relationships.inverseId": [
                                28
                            ]
                        }
                    },
                    "28": {
                        "hasMany": {
                            "relationships.inverseId": [
                                27
                            ],
                            "inputs.relationshipId": [
                                4,
                                8,
                                59
                            ]
                        }
                    },
                    "31": {
                        "hasMany": {
                            "relationships.inverseId": [
                                32
                            ],
                            "has_many_details.relationshipId": [
                                2
                            ]
                        }
                    },
                    "32": {
                        "hasMany": {
                            "relationships.inverseId": [
                                31
                            ]
                        }
                    },
                    "35": {
                        "hasMany": {
                            "relationships.inverseId": [
                                36
                            ]
                        }
                    },
                    "36": {
                        "hasMany": {
                            "relationships.inverseId": [
                                35
                            ]
                        }
                    },
                    "37": {
                        "hasMany": {
                            "relationships.inverseId": [
                                38
                            ]
                        }
                    },
                    "38": {
                        "hasMany": {
                            "relationships.inverseId": [
                                37
                            ]
                        }
                    },
                    "39": {
                        "hasMany": {
                            "relationships.inverseId": [
                                40
                            ]
                        }
                    },
                    "40": {
                        "hasMany": {
                            "relationships.inverseId": [
                                39
                            ]
                        }
                    },
                    "41": {
                        "hasMany": {
                            "relationships.inverseId": [
                                42
                            ]
                        }
                    },
                    "42": {
                        "hasMany": {
                            "relationships.inverseId": [
                                41
                            ]
                        }
                    },
                    "49": {
                        "hasMany": {
                            "relationships.inverseId": [
                                50
                            ]
                        }
                    },
                    "50": {
                        "hasMany": {
                            "relationships.inverseId": [
                                49
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 5,
                "projectId": 1,
                "type": "BelongsToMany",
                "relatedModelId": 4,
                "defaultName": "users2",
                "usingFirstDefaultName": false,
                "name": "users",
                "relatedPivotKeyName": "user_id",
                "foreignPivotKeyName": "warehouse_id",
                "pivotTableName": "user_warehouse",
                "pivotId": 15,
                "id": 2,
                "createdAt": "2025-01-29 16:50:03",
                "updatedAt": "2025-01-30 11:49:13",
                "foreignPivotKeyId": 94,
                "relatedPivotKeyId": 93,
                "inverseId": 3,
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "warehouses",
                "parentModelName": "App\\Models\\Warehouse",
                "foreignKeyName": null,
                "localKeyName": null,
                "ownerKeyName": null,
                "relatedKeyName": "id",
                "morphType": null,
                "createdFromInterface": false,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "users",
                    "type": "BelongsToMany",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "warehouses",
                    "parentModelName": "App\\Models\\Warehouse",
                    "foreignKeyName": null,
                    "localKeyName": null,
                    "ownerKeyName": null,
                    "relatedKeyName": "id",
                    "morphType": null,
                    "foreignPivotKeyName": "warehouse_id",
                    "relatedPivotKeyName": "user_id",
                    "pivotTableName": "user_warehouse",
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_3": {
                "name": "warehouses",
                "modelId": 4,
                "relatedModelId": 5,
                "type": "BelongsToMany",
                "pivotId": 15,
                "foreignPivotKeyId": 93,
                "relatedPivotKeyId": 94,
                "defaultName": "warehouses",
                "usingFirstDefaultName": true,
                "relatedPivotKeyName": "warehouse_id",
                "foreignPivotKeyName": "user_id",
                "pivotTableName": "user_warehouse",
                "id": 3,
                "createdAt": "2025-01-29 16:50:03",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 2,
                "removed": false,
                "projectId": 1,
                "relatedTableName": "warehouses",
                "relatedModelName": "App\\Models\\Warehouse",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "foreignKeyName": null,
                "localKeyName": null,
                "ownerKeyName": null,
                "relatedKeyName": "id",
                "morphType": null,
                "createdFromInterface": false,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "warehouses",
                    "type": "BelongsToMany",
                    "relatedTableName": "warehouses",
                    "relatedModelName": "App\\Models\\Warehouse",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": null,
                    "localKeyName": null,
                    "ownerKeyName": null,
                    "relatedKeyName": "id",
                    "morphType": null,
                    "foreignPivotKeyName": "user_id",
                    "relatedPivotKeyName": "warehouse_id",
                    "pivotTableName": "user_warehouse",
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_4": {
                "name": "items",
                "modelId": 4,
                "projectId": 1,
                "relatedModelId": 6,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 1,
                "foreignKeyId": 95,
                "defaultName": "items",
                "usingFirstDefaultName": true,
                "id": 4,
                "createdAt": "2025-01-29 16:50:46",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 5,
                "removed": false,
                "relatedTableName": "items",
                "relatedModelName": "App\\Models\\Item",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "items",
                    "type": "HasMany",
                    "relatedTableName": "items",
                    "relatedModelName": "App\\Models\\Item",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_5": {
                "modelId": 6,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 4,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "name": "user",
                "parentKeyId": 1,
                "foreignKeyName": "user_id",
                "inverseId": 4,
                "foreignKeyId": 95,
                "id": 5,
                "createdAt": "2025-01-29 16:50:46",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "items",
                "parentModelName": "App\\Models\\Item",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "items",
                    "parentModelName": "App\\Models\\Item",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_6": {
                "name": "assets",
                "modelId": 4,
                "projectId": 1,
                "relatedModelId": 7,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 1,
                "foreignKeyId": 95,
                "defaultName": "assets",
                "usingFirstDefaultName": true,
                "id": 6,
                "createdAt": "2025-01-29 16:51:40",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 7,
                "removed": false,
                "relatedTableName": "items",
                "relatedModelName": "App\\Models\\Asset",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "assets",
                    "type": "HasMany",
                    "relatedTableName": "items",
                    "relatedModelName": "App\\Models\\Asset",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_7": {
                "modelId": 7,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 4,
                "defaultName": "user2",
                "usingFirstDefaultName": false,
                "name": "user",
                "parentKeyId": 1,
                "foreignKeyName": "user_id",
                "inverseId": 6,
                "foreignKeyId": 95,
                "id": 7,
                "createdAt": "2025-01-29 16:51:40",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "items",
                "parentModelName": "App\\Models\\Asset",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "items",
                    "parentModelName": "App\\Models\\Asset",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_10": {
                "name": "items",
                "modelId": 5,
                "projectId": 1,
                "relatedModelId": 6,
                "type": "HasMany",
                "foreignKeyName": "warehouse_id",
                "parentKeyId": 81,
                "foreignKeyId": 103,
                "defaultName": "items",
                "usingFirstDefaultName": true,
                "id": 10,
                "createdAt": "2025-01-29 16:53:41",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 11,
                "removed": false,
                "relatedTableName": "items",
                "relatedModelName": "App\\Models\\Item",
                "parentTableName": "warehouses",
                "parentModelName": "App\\Models\\Warehouse",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "items",
                    "type": "HasMany",
                    "relatedTableName": "items",
                    "relatedModelName": "App\\Models\\Item",
                    "parentTableName": "warehouses",
                    "parentModelName": "App\\Models\\Warehouse",
                    "foreignKeyName": "warehouse_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_11": {
                "modelId": 6,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 5,
                "defaultName": "warehouse",
                "usingFirstDefaultName": true,
                "name": "warehouse",
                "parentKeyId": 81,
                "foreignKeyName": "warehouse_id",
                "inverseId": 10,
                "foreignKeyId": 103,
                "id": 11,
                "createdAt": "2025-01-29 16:53:41",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "warehouses",
                "relatedModelName": "App\\Models\\Warehouse",
                "parentTableName": "items",
                "parentModelName": "App\\Models\\Item",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "warehouse",
                    "type": "BelongsTo",
                    "relatedTableName": "warehouses",
                    "relatedModelName": "App\\Models\\Warehouse",
                    "parentTableName": "items",
                    "parentModelName": "App\\Models\\Item",
                    "foreignKeyName": "warehouse_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_12": {
                "name": "assets",
                "modelId": 5,
                "projectId": 1,
                "relatedModelId": 7,
                "type": "HasMany",
                "foreignKeyName": "warehouse_id",
                "parentKeyId": 81,
                "foreignKeyId": 103,
                "defaultName": "assets",
                "usingFirstDefaultName": true,
                "id": 12,
                "createdAt": "2025-01-29 16:54:30",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 13,
                "removed": false,
                "relatedTableName": "items",
                "relatedModelName": "App\\Models\\Asset",
                "parentTableName": "warehouses",
                "parentModelName": "App\\Models\\Warehouse",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "assets",
                    "type": "HasMany",
                    "relatedTableName": "items",
                    "relatedModelName": "App\\Models\\Asset",
                    "parentTableName": "warehouses",
                    "parentModelName": "App\\Models\\Warehouse",
                    "foreignKeyName": "warehouse_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_13": {
                "modelId": 7,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 5,
                "defaultName": "warehouse",
                "usingFirstDefaultName": true,
                "name": "warehouse",
                "parentKeyId": 81,
                "foreignKeyName": "warehouse_id",
                "inverseId": 12,
                "foreignKeyId": 103,
                "id": 13,
                "createdAt": "2025-01-29 16:54:30",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "warehouses",
                "relatedModelName": "App\\Models\\Warehouse",
                "parentTableName": "items",
                "parentModelName": "App\\Models\\Asset",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "warehouse",
                    "type": "BelongsTo",
                    "relatedTableName": "warehouses",
                    "relatedModelName": "App\\Models\\Warehouse",
                    "parentTableName": "items",
                    "parentModelName": "App\\Models\\Asset",
                    "foreignKeyName": "warehouse_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_19": {
                "name": "maintenanceDepartments",
                "modelId": 4,
                "relatedModelId": 16,
                "type": "BelongsToMany",
                "pivotId": 17,
                "foreignPivotKeyId": 101,
                "relatedPivotKeyId": 102,
                "defaultName": "maintenanceDepartments",
                "usingFirstDefaultName": true,
                "relatedPivotKeyName": "maintenance_department_id",
                "foreignPivotKeyName": "user_id",
                "pivotTableName": "maintenance_department_user",
                "id": 19,
                "createdAt": "2025-01-29 17:05:38",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 20,
                "removed": false,
                "projectId": 1,
                "relatedTableName": "maintenance_departments",
                "relatedModelName": "App\\Models\\MaintenanceDepartment",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "foreignKeyName": null,
                "localKeyName": null,
                "ownerKeyName": null,
                "relatedKeyName": "id",
                "morphType": null,
                "createdFromInterface": false,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "maintenanceDepartments",
                    "type": "BelongsToMany",
                    "relatedTableName": "maintenance_departments",
                    "relatedModelName": "App\\Models\\MaintenanceDepartment",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": null,
                    "localKeyName": null,
                    "ownerKeyName": null,
                    "relatedKeyName": "id",
                    "morphType": null,
                    "foreignPivotKeyName": "user_id",
                    "relatedPivotKeyName": "maintenance_department_id",
                    "pivotTableName": "maintenance_department_user",
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_20": {
                "modelId": 16,
                "projectId": 1,
                "type": "BelongsToMany",
                "relatedModelId": 4,
                "defaultName": "users",
                "usingFirstDefaultName": true,
                "name": "users",
                "relatedPivotKeyName": "user_id",
                "foreignPivotKeyName": "maintenance_department_id",
                "pivotTableName": "maintenance_department_user",
                "pivotId": 17,
                "foreignPivotKeyId": 102,
                "relatedPivotKeyId": 101,
                "inverseId": 19,
                "id": 20,
                "createdAt": "2025-01-29 17:05:38",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "maintenance_departments",
                "parentModelName": "App\\Models\\MaintenanceDepartment",
                "foreignKeyName": null,
                "localKeyName": null,
                "ownerKeyName": null,
                "relatedKeyName": "id",
                "morphType": null,
                "createdFromInterface": false,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "users",
                    "type": "BelongsToMany",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "maintenance_departments",
                    "parentModelName": "App\\Models\\MaintenanceDepartment",
                    "foreignKeyName": null,
                    "localKeyName": null,
                    "ownerKeyName": null,
                    "relatedKeyName": "id",
                    "morphType": null,
                    "foreignPivotKeyName": "maintenance_department_id",
                    "relatedPivotKeyName": "user_id",
                    "pivotTableName": "maintenance_department_user",
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_21": {
                "name": "maintenanceItems",
                "modelId": 6,
                "projectId": 1,
                "relatedModelId": 17,
                "type": "HasMany",
                "foreignKeyName": "item_id",
                "parentKeyId": 86,
                "foreignKeyId": 115,
                "defaultName": "maintenanceItems",
                "usingFirstDefaultName": true,
                "id": 21,
                "createdAt": "2025-01-29 17:06:50",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 22,
                "removed": false,
                "relatedTableName": "maintenance_items",
                "relatedModelName": "App\\Models\\MaintenanceItem",
                "parentTableName": "items",
                "parentModelName": "App\\Models\\Item",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "maintenanceItems",
                    "type": "HasMany",
                    "relatedTableName": "maintenance_items",
                    "relatedModelName": "App\\Models\\MaintenanceItem",
                    "parentTableName": "items",
                    "parentModelName": "App\\Models\\Item",
                    "foreignKeyName": "item_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_22": {
                "modelId": 17,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 6,
                "defaultName": "item",
                "usingFirstDefaultName": true,
                "name": "item",
                "parentKeyId": 86,
                "foreignKeyName": "item_id",
                "inverseId": 21,
                "foreignKeyId": 115,
                "id": 22,
                "createdAt": "2025-01-29 17:06:50",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "items",
                "relatedModelName": "App\\Models\\Item",
                "parentTableName": "maintenance_items",
                "parentModelName": "App\\Models\\MaintenanceItem",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "item",
                    "type": "BelongsTo",
                    "relatedTableName": "items",
                    "relatedModelName": "App\\Models\\Item",
                    "parentTableName": "maintenance_items",
                    "parentModelName": "App\\Models\\MaintenanceItem",
                    "foreignKeyName": "item_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_23": {
                "name": "maintenanceItems",
                "modelId": 16,
                "projectId": 1,
                "relatedModelId": 17,
                "type": "HasMany",
                "foreignKeyName": "maintenance_department_id",
                "parentKeyId": 105,
                "foreignKeyId": 116,
                "defaultName": "maintenanceItems",
                "usingFirstDefaultName": true,
                "id": 23,
                "createdAt": "2025-01-29 17:06:58",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 24,
                "removed": false,
                "relatedTableName": "maintenance_items",
                "relatedModelName": "App\\Models\\MaintenanceItem",
                "parentTableName": "maintenance_departments",
                "parentModelName": "App\\Models\\MaintenanceDepartment",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "maintenanceItems",
                    "type": "HasMany",
                    "relatedTableName": "maintenance_items",
                    "relatedModelName": "App\\Models\\MaintenanceItem",
                    "parentTableName": "maintenance_departments",
                    "parentModelName": "App\\Models\\MaintenanceDepartment",
                    "foreignKeyName": "maintenance_department_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_24": {
                "modelId": 17,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 16,
                "defaultName": "maintenanceDepartment",
                "usingFirstDefaultName": true,
                "name": "maintenanceDepartment",
                "parentKeyId": 105,
                "foreignKeyName": "maintenance_department_id",
                "inverseId": 23,
                "foreignKeyId": 116,
                "id": 24,
                "createdAt": "2025-01-29 17:06:58",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "maintenance_departments",
                "relatedModelName": "App\\Models\\MaintenanceDepartment",
                "parentTableName": "maintenance_items",
                "parentModelName": "App\\Models\\MaintenanceItem",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "maintenanceDepartment",
                    "type": "BelongsTo",
                    "relatedTableName": "maintenance_departments",
                    "relatedModelName": "App\\Models\\MaintenanceDepartment",
                    "parentTableName": "maintenance_items",
                    "parentModelName": "App\\Models\\MaintenanceItem",
                    "foreignKeyName": "maintenance_department_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_25": {
                "name": "orders",
                "modelId": 25,
                "projectId": 1,
                "relatedModelId": 18,
                "type": "HasMany",
                "foreignKeyName": "supplier_id",
                "parentKeyId": 120,
                "foreignKeyId": 126,
                "defaultName": "orders",
                "usingFirstDefaultName": true,
                "id": 25,
                "createdAt": "2025-01-29 17:09:27",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 26,
                "removed": false,
                "relatedTableName": "orders",
                "relatedModelName": "App\\Models\\Order",
                "parentTableName": "suppliers",
                "parentModelName": "App\\Models\\Supplier",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "orders",
                    "type": "HasMany",
                    "relatedTableName": "orders",
                    "relatedModelName": "App\\Models\\Order",
                    "parentTableName": "suppliers",
                    "parentModelName": "App\\Models\\Supplier",
                    "foreignKeyName": "supplier_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_26": {
                "modelId": 18,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 25,
                "defaultName": "supplier",
                "usingFirstDefaultName": true,
                "name": "supplier",
                "parentKeyId": 120,
                "foreignKeyName": "supplier_id",
                "inverseId": 25,
                "foreignKeyId": 126,
                "id": 26,
                "createdAt": "2025-01-29 17:09:27",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "suppliers",
                "relatedModelName": "App\\Models\\Supplier",
                "parentTableName": "orders",
                "parentModelName": "App\\Models\\Order",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "supplier",
                    "type": "BelongsTo",
                    "relatedTableName": "suppliers",
                    "relatedModelName": "App\\Models\\Supplier",
                    "parentTableName": "orders",
                    "parentModelName": "App\\Models\\Order",
                    "foreignKeyName": "supplier_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_27": {
                "name": "orders",
                "modelId": 5,
                "projectId": 1,
                "relatedModelId": 18,
                "type": "HasMany",
                "foreignKeyName": "warehouse_id",
                "parentKeyId": 81,
                "foreignKeyId": 127,
                "defaultName": "orders",
                "usingFirstDefaultName": true,
                "id": 27,
                "createdAt": "2025-01-29 17:09:39",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 28,
                "removed": false,
                "relatedTableName": "orders",
                "relatedModelName": "App\\Models\\Order",
                "parentTableName": "warehouses",
                "parentModelName": "App\\Models\\Warehouse",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "orders",
                    "type": "HasMany",
                    "relatedTableName": "orders",
                    "relatedModelName": "App\\Models\\Order",
                    "parentTableName": "warehouses",
                    "parentModelName": "App\\Models\\Warehouse",
                    "foreignKeyName": "warehouse_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_28": {
                "modelId": 18,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 5,
                "defaultName": "warehouse",
                "usingFirstDefaultName": true,
                "name": "warehouse",
                "parentKeyId": 81,
                "foreignKeyName": "warehouse_id",
                "inverseId": 27,
                "foreignKeyId": 127,
                "id": 28,
                "createdAt": "2025-01-29 17:09:39",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "warehouses",
                "relatedModelName": "App\\Models\\Warehouse",
                "parentTableName": "orders",
                "parentModelName": "App\\Models\\Order",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "warehouse",
                    "type": "BelongsTo",
                    "relatedTableName": "warehouses",
                    "relatedModelName": "App\\Models\\Warehouse",
                    "parentTableName": "orders",
                    "parentModelName": "App\\Models\\Order",
                    "foreignKeyName": "warehouse_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_31": {
                "name": "orderItems",
                "modelId": 18,
                "projectId": 1,
                "relatedModelId": 29,
                "type": "HasMany",
                "foreignKeyName": "order_id",
                "parentKeyId": 117,
                "foreignKeyId": 140,
                "defaultName": "orderItems",
                "usingFirstDefaultName": true,
                "id": 31,
                "createdAt": "2025-01-29 17:23:28",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 32,
                "removed": false,
                "relatedTableName": "order_items",
                "relatedModelName": "App\\Models\\OrderItem",
                "parentTableName": "orders",
                "parentModelName": "App\\Models\\Order",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "orderItems",
                    "type": "HasMany",
                    "relatedTableName": "order_items",
                    "relatedModelName": "App\\Models\\OrderItem",
                    "parentTableName": "orders",
                    "parentModelName": "App\\Models\\Order",
                    "foreignKeyName": "order_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_32": {
                "modelId": 29,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 18,
                "defaultName": "order",
                "usingFirstDefaultName": true,
                "name": "order",
                "parentKeyId": 117,
                "foreignKeyName": "order_id",
                "inverseId": 31,
                "foreignKeyId": 140,
                "id": 32,
                "createdAt": "2025-01-29 17:23:28",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "orders",
                "relatedModelName": "App\\Models\\Order",
                "parentTableName": "order_items",
                "parentModelName": "App\\Models\\OrderItem",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "order",
                    "type": "BelongsTo",
                    "relatedTableName": "orders",
                    "relatedModelName": "App\\Models\\Order",
                    "parentTableName": "order_items",
                    "parentModelName": "App\\Models\\OrderItem",
                    "foreignKeyName": "order_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_35": {
                "name": "damageds",
                "modelId": 4,
                "projectId": 1,
                "relatedModelId": 78,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 1,
                "foreignKeyId": 95,
                "defaultName": "damageds",
                "usingFirstDefaultName": true,
                "id": 35,
                "createdAt": "2025-01-29 23:43:26",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 36,
                "removed": false,
                "relatedTableName": "items",
                "relatedModelName": "App\\Models\\Damaged",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "damageds",
                    "type": "HasMany",
                    "relatedTableName": "items",
                    "relatedModelName": "App\\Models\\Damaged",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_36": {
                "modelId": 78,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 4,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "name": "user",
                "parentKeyId": 1,
                "foreignKeyName": "user_id",
                "inverseId": 35,
                "foreignKeyId": 95,
                "id": 36,
                "createdAt": "2025-01-29 23:43:26",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "items",
                "parentModelName": "App\\Models\\Damaged",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "items",
                    "parentModelName": "App\\Models\\Damaged",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_37": {
                "name": "damageds",
                "modelId": 5,
                "projectId": 1,
                "relatedModelId": 78,
                "type": "HasMany",
                "foreignKeyName": "warehouse_id",
                "parentKeyId": 81,
                "foreignKeyId": 103,
                "defaultName": "damageds",
                "usingFirstDefaultName": true,
                "id": 37,
                "createdAt": "2025-01-29 23:43:41",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 38,
                "removed": false,
                "relatedTableName": "items",
                "relatedModelName": "App\\Models\\Damaged",
                "parentTableName": "warehouses",
                "parentModelName": "App\\Models\\Warehouse",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "damageds",
                    "type": "HasMany",
                    "relatedTableName": "items",
                    "relatedModelName": "App\\Models\\Damaged",
                    "parentTableName": "warehouses",
                    "parentModelName": "App\\Models\\Warehouse",
                    "foreignKeyName": "warehouse_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_38": {
                "modelId": 78,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 5,
                "defaultName": "warehouse",
                "usingFirstDefaultName": true,
                "name": "warehouse",
                "parentKeyId": 81,
                "foreignKeyName": "warehouse_id",
                "inverseId": 37,
                "foreignKeyId": 103,
                "id": 38,
                "createdAt": "2025-01-29 23:43:41",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "warehouses",
                "relatedModelName": "App\\Models\\Warehouse",
                "parentTableName": "items",
                "parentModelName": "App\\Models\\Damaged",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "warehouse",
                    "type": "BelongsTo",
                    "relatedTableName": "warehouses",
                    "relatedModelName": "App\\Models\\Warehouse",
                    "parentTableName": "items",
                    "parentModelName": "App\\Models\\Damaged",
                    "foreignKeyName": "warehouse_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_39": {
                "name": "damaged",
                "modelId": 17,
                "projectId": 1,
                "relatedModelId": 78,
                "type": "BelongsTo",
                "foreignKeyName": "damaged_id",
                "parentKeyId": 86,
                "foreignKeyId": 199,
                "defaultName": "damaged",
                "usingFirstDefaultName": true,
                "id": 39,
                "createdAt": "2025-01-29 23:44:04",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 40,
                "removed": false,
                "relatedTableName": "items",
                "relatedModelName": "App\\Models\\Damaged",
                "parentTableName": "maintenance_items",
                "parentModelName": "App\\Models\\MaintenanceItem",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "damaged",
                    "type": "BelongsTo",
                    "relatedTableName": "items",
                    "relatedModelName": "App\\Models\\Damaged",
                    "parentTableName": "maintenance_items",
                    "parentModelName": "App\\Models\\MaintenanceItem",
                    "foreignKeyName": "damaged_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_40": {
                "modelId": 78,
                "projectId": 1,
                "type": "HasMany",
                "relatedModelId": 17,
                "defaultName": "maintenanceItems",
                "usingFirstDefaultName": true,
                "name": "maintenanceItems",
                "parentKeyId": 86,
                "foreignKeyName": "damaged_id",
                "inverseId": 39,
                "foreignKeyId": 199,
                "id": 40,
                "createdAt": "2025-01-29 23:44:04",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "maintenance_items",
                "relatedModelName": "App\\Models\\MaintenanceItem",
                "parentTableName": "items",
                "parentModelName": "App\\Models\\Damaged",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "maintenanceItems",
                    "type": "HasMany",
                    "relatedTableName": "maintenance_items",
                    "relatedModelName": "App\\Models\\MaintenanceItem",
                    "parentTableName": "items",
                    "parentModelName": "App\\Models\\Damaged",
                    "foreignKeyName": "damaged_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_41": {
                "name": "items",
                "modelId": 16,
                "projectId": 1,
                "relatedModelId": 6,
                "type": "HasMany",
                "foreignKeyName": "maintenance_department_id",
                "parentKeyId": 105,
                "foreignKeyId": 219,
                "defaultName": "items",
                "usingFirstDefaultName": true,
                "id": 41,
                "createdAt": "2025-01-30 11:41:37",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 42,
                "removed": false,
                "relatedTableName": "items",
                "relatedModelName": "App\\Models\\Item",
                "parentTableName": "maintenance_departments",
                "parentModelName": "App\\Models\\MaintenanceDepartment",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "items",
                    "type": "HasMany",
                    "relatedTableName": "items",
                    "relatedModelName": "App\\Models\\Item",
                    "parentTableName": "maintenance_departments",
                    "parentModelName": "App\\Models\\MaintenanceDepartment",
                    "foreignKeyName": "maintenance_department_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_42": {
                "modelId": 6,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 16,
                "defaultName": "maintenanceDepartment2",
                "usingFirstDefaultName": false,
                "name": "maintenanceDepartment",
                "parentKeyId": 105,
                "foreignKeyName": "maintenance_department_id",
                "inverseId": 41,
                "foreignKeyId": 219,
                "id": 42,
                "createdAt": "2025-01-30 11:41:37",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "maintenance_departments",
                "relatedModelName": "App\\Models\\MaintenanceDepartment",
                "parentTableName": "items",
                "parentModelName": "App\\Models\\Item",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "maintenanceDepartment",
                    "type": "BelongsTo",
                    "relatedTableName": "maintenance_departments",
                    "relatedModelName": "App\\Models\\MaintenanceDepartment",
                    "parentTableName": "items",
                    "parentModelName": "App\\Models\\Item",
                    "foreignKeyName": "maintenance_department_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_49": {
                "name": "maintenanceItems",
                "modelId": 7,
                "projectId": 1,
                "relatedModelId": 17,
                "type": "HasMany",
                "foreignKeyName": "asset_id",
                "parentKeyId": 86,
                "foreignKeyId": 224,
                "defaultName": "maintenanceItems",
                "usingFirstDefaultName": true,
                "id": 49,
                "createdAt": "2025-01-30 11:48:56",
                "updatedAt": "2025-01-30 11:49:13",
                "inverseId": 50,
                "removed": false,
                "relatedTableName": "maintenance_items",
                "relatedModelName": "App\\Models\\MaintenanceItem",
                "parentTableName": "items",
                "parentModelName": "App\\Models\\Asset",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "maintenanceItems",
                    "type": "HasMany",
                    "relatedTableName": "maintenance_items",
                    "relatedModelName": "App\\Models\\MaintenanceItem",
                    "parentTableName": "items",
                    "parentModelName": "App\\Models\\Asset",
                    "foreignKeyName": "asset_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_50": {
                "modelId": 17,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 7,
                "defaultName": "asset",
                "usingFirstDefaultName": true,
                "name": "asset",
                "parentKeyId": 86,
                "foreignKeyName": "asset_id",
                "inverseId": 49,
                "foreignKeyId": 224,
                "id": 50,
                "createdAt": "2025-01-30 11:48:56",
                "updatedAt": "2025-01-30 11:49:13",
                "removed": false,
                "relatedTableName": "items",
                "relatedModelName": "App\\Models\\Asset",
                "parentTableName": "maintenance_items",
                "parentModelName": "App\\Models\\MaintenanceItem",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "asset",
                    "type": "BelongsTo",
                    "relatedTableName": "items",
                    "relatedModelName": "App\\Models\\Asset",
                    "parentTableName": "maintenance_items",
                    "parentModelName": "App\\Models\\MaintenanceItem",
                    "foreignKeyName": "asset_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            }
        },
        "hidden_model_column": {
            "item_1": {
                "modelId": 4,
                "columnId": 5,
                "id": 1,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 4,
                "columnId": 9,
                "id": 2,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            },
            "item_3": {
                "modelId": 4,
                "columnId": 7,
                "id": 3,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            },
            "item_4": {
                "modelId": 4,
                "columnId": 6,
                "id": 4,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            }
        },
        "app_sections": {
            "item_1": {
                "name": "Dashboard",
                "routePrefix": "dashboard",
                "routeBasePath": "dashboard",
                "projectId": 1,
                "requiresAuth": true,
                "id": 1,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {
                            "cruds.sectionId": [
                                17,
                                18
                            ],
                            "has_many_details.sectionId": [
                                7
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {
                            "cruds.sectionId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                19
                            ],
                            "has_many_details.sectionId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ],
                            "belongs_to_many_details.sectionId": [
                                1,
                                2
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "API",
                "routePrefix": "api",
                "routeBasePath": "api",
                "projectId": 1,
                "requiresAuth": true,
                "id": 2,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            },
            "item_3": {
                "name": "Site",
                "routePrefix": "",
                "routeBasePath": "",
                "projectId": 1,
                "requiresAuth": false,
                "id": 3,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            },
            "item_4": {
                "name": "Filament Panel",
                "routePrefix": "panel",
                "routeBasePath": "panel",
                "projectId": 1,
                "requiresAuth": false,
                "id": 4,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            }
        },
        "schema_sections": {
            "item_1": {
                "name": "App",
                "scrollX": 24804.80078125,
                "scrollY": 24758.400390625,
                "projectId": 1,
                "id": 1,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:48:34"
            },
            "__tableData": {
                "count": 3,
                "lastPrimaryKey": 3,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.sectionId": [
                                1,
                                13,
                                14,
                                15,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                31,
                                32,
                                33,
                                34,
                                35
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "tables.sectionId": []
                        }
                    },
                    "3": {
                        "hasMany": {
                            "tables.sectionId": []
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "Laravel",
                "scrollX": 0,
                "scrollY": 0,
                "projectId": 1,
                "id": 2,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            },
            "item_3": {
                "name": "Jetstream",
                "scrollX": 0,
                "scrollY": 0,
                "projectId": 1,
                "id": 3,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54"
            }
        },
        "navs": {
            "item_1": {
                "projectId": 1,
                "name": "navigation.home",
                "id": 1,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54",
                "tag": "home"
            },
            "__tableData": {
                "count": 3,
                "lastPrimaryKey": 3,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "navs.parentNavId": [
                                3
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "navigation.apps",
                "id": 2,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-29 16:24:54",
                "tag": "apps"
            },
            "item_3": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 17,
                "name": "navigation.suppliers",
                "id": 3,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11",
                "parentNavId": 2
            }
        },
        "renderable_files": {
            "item_1": {
                "path": "bootstrap",
                "name": "app.php",
                "fullPath": "bootstrap/app.php",
                "template": "laravel/BootstrapApp.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 1,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse Illuminate\\Foundation\\Application;\nuse Illuminate\\Foundation\\Configuration\\Exceptions;\nuse Illuminate\\Foundation\\Configuration\\Middleware;\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    ->withProviders()\n    ->withRouting(\n        web: __DIR__ . '/../routes/web.php',\n        // api: __DIR__.'/../routes/api.php',\n        commands: __DIR__ . '/../routes/console.php',\n        // channels: __DIR__.'/../routes/channels.php',\n        health: '/up',\n\n        then: function () {\n            Route::middleware('web')->group(__DIR__ . '/../routes/app.php');\n            Route::middleware('api')->group(__DIR__ . '/../routes/app-api.php');\n        }\n    )\n    ->withMiddleware(function (Middleware $middleware) {\n        //\n    })\n    ->withExceptions(function (Exceptions $exceptions) {\n        //\n    })\n    ->create();\n"
            },
            "__tableData": {
                "count": 145,
                "lastPrimaryKey": 145,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {}
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {}
                    },
                    "55": {
                        "hasMany": {}
                    },
                    "56": {
                        "hasMany": {}
                    },
                    "57": {
                        "hasMany": {}
                    },
                    "58": {
                        "hasMany": {}
                    },
                    "59": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {}
                    },
                    "61": {
                        "hasMany": {}
                    },
                    "62": {
                        "hasMany": {}
                    },
                    "63": {
                        "hasMany": {}
                    },
                    "64": {
                        "hasMany": {}
                    },
                    "65": {
                        "hasMany": {}
                    },
                    "66": {
                        "hasMany": {}
                    },
                    "67": {
                        "hasMany": {}
                    },
                    "68": {
                        "hasMany": {}
                    },
                    "69": {
                        "hasMany": {}
                    },
                    "70": {
                        "hasMany": {}
                    },
                    "71": {
                        "hasMany": {}
                    },
                    "72": {
                        "hasMany": {}
                    },
                    "73": {
                        "hasMany": {}
                    },
                    "74": {
                        "hasMany": {}
                    },
                    "75": {
                        "hasMany": {}
                    },
                    "76": {
                        "hasMany": {}
                    },
                    "77": {
                        "hasMany": {}
                    },
                    "78": {
                        "hasMany": {}
                    },
                    "79": {
                        "hasMany": {}
                    },
                    "80": {
                        "hasMany": {}
                    },
                    "81": {
                        "hasMany": {}
                    },
                    "82": {
                        "hasMany": {}
                    },
                    "83": {
                        "hasMany": {}
                    },
                    "84": {
                        "hasMany": {}
                    },
                    "85": {
                        "hasMany": {}
                    },
                    "86": {
                        "hasMany": {}
                    },
                    "87": {
                        "hasMany": {}
                    },
                    "88": {
                        "hasMany": {}
                    },
                    "89": {
                        "hasMany": {}
                    },
                    "90": {
                        "hasMany": {}
                    },
                    "91": {
                        "hasMany": {}
                    },
                    "92": {
                        "hasMany": {}
                    },
                    "93": {
                        "hasMany": {}
                    },
                    "94": {
                        "hasMany": {}
                    },
                    "95": {
                        "hasMany": {}
                    },
                    "96": {
                        "hasMany": {}
                    },
                    "97": {
                        "hasMany": {}
                    },
                    "98": {
                        "hasMany": {}
                    },
                    "99": {
                        "hasMany": {}
                    },
                    "100": {
                        "hasMany": {}
                    },
                    "101": {
                        "hasMany": {}
                    },
                    "102": {
                        "hasMany": {}
                    },
                    "103": {
                        "hasMany": {}
                    },
                    "104": {
                        "hasMany": {}
                    },
                    "105": {
                        "hasMany": {}
                    },
                    "106": {
                        "hasMany": {}
                    },
                    "107": {
                        "hasMany": {}
                    },
                    "108": {
                        "hasMany": {}
                    },
                    "109": {
                        "hasMany": {}
                    },
                    "110": {
                        "hasMany": {}
                    },
                    "111": {
                        "hasMany": {}
                    },
                    "112": {
                        "hasMany": {}
                    },
                    "113": {
                        "hasMany": {}
                    },
                    "114": {
                        "hasMany": {}
                    },
                    "115": {
                        "hasMany": {}
                    },
                    "116": {
                        "hasMany": {}
                    },
                    "117": {
                        "hasMany": {}
                    },
                    "118": {
                        "hasMany": {}
                    },
                    "119": {
                        "hasMany": {}
                    },
                    "120": {
                        "hasMany": {}
                    },
                    "121": {
                        "hasMany": {}
                    },
                    "122": {
                        "hasMany": {}
                    },
                    "123": {
                        "hasMany": {}
                    },
                    "124": {
                        "hasMany": {}
                    },
                    "125": {
                        "hasMany": {}
                    },
                    "126": {
                        "hasMany": {}
                    },
                    "127": {
                        "hasMany": {}
                    },
                    "128": {
                        "hasMany": {}
                    },
                    "129": {
                        "hasMany": {}
                    },
                    "130": {
                        "hasMany": {}
                    },
                    "131": {
                        "hasMany": {}
                    },
                    "132": {
                        "hasMany": {}
                    },
                    "133": {
                        "hasMany": {}
                    },
                    "134": {
                        "hasMany": {}
                    },
                    "135": {
                        "hasMany": {}
                    },
                    "136": {
                        "hasMany": {}
                    },
                    "137": {
                        "hasMany": {}
                    },
                    "138": {
                        "hasMany": {}
                    },
                    "139": {
                        "hasMany": {}
                    },
                    "140": {
                        "hasMany": {}
                    },
                    "141": {
                        "hasMany": {}
                    },
                    "142": {
                        "hasMany": {}
                    },
                    "143": {
                        "hasMany": {}
                    },
                    "144": {
                        "hasMany": {}
                    },
                    "145": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "path": "routes",
                "name": "app.php",
                "fullPath": "routes/app.php",
                "template": "routes/Routes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 2,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\n// Dashboard\nRoute::prefix('/dashboard')\n    ->name('dashboard.')\n    ->middleware(['auth:sanctum', config('jetstream.auth_session'), 'verified'])\n    ->group(function () {\n        Route::get(\n            '/suppliers',\n            App\\Livewire\\Dashboard\\SupplierIndex::class\n        )->name('suppliers.index');\n\n        Route::get(\n            '/suppliers/create',\n            App\\Livewire\\Dashboard\\SupplierCreate::class\n        )->name('suppliers.create');\n\n        Route::get(\n            '/suppliers/{supplier}',\n            App\\Livewire\\Dashboard\\SupplierEdit::class\n        )->name('suppliers.edit');\n    });\n\n// API\nRoute::prefix('/api')\n    ->name('api.')\n    ->middleware(['auth:sanctum', config('jetstream.auth_session'), 'verified'])\n    ->group(function () {});\n\n// Site\nRoute::prefix('/')->group(function () {});\n\n// Filament Panel\nRoute::prefix('/panel')\n    ->name('panel.')\n    ->group(function () {});\n"
            },
            "item_3": {
                "path": "routes",
                "name": "app-api.php",
                "fullPath": "routes/app-api.php",
                "template": "routes/ApiRoutes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 3,
                "createdAt": "2025-01-29 16:24:54",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\AuthController;\n\n/*\n|--------------------------------------------------------------------------\n| Api Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\nRoute::name('api.')\n    ->prefix('api')\n    ->group(function () {\n        Route::post('/login', [AuthController::class, 'login'])->name(\n            'api.login'\n        );\n\n        Route::middleware('auth:sanctum')->group(function () {});\n    });\n"
            },
            "item_4": {
                "path": "resources/views/components/ui",
                "name": "/toast.blade.php",
                "fullPath": "resources/views/components/ui//toast.blade.php",
                "template": "blade/ui/Toast.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 4,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props([\r\n    'on',\r\n    'timeout' => 2000,\r\n    'closeable' => true,\r\n])\r\n\r\n<div x-data=\"{ shown: false, timeout: null }\"\r\n    x-init=\"@this.on('{{ $on }}', () => { clearTimeout(timeout); shown = true; timeout = setTimeout(() => { shown = false }, {{ $timeout }});  })\"\r\n    x-show.transition.out.opacity.duration.500ms=\"shown\"\r\n    x-transition:leave.opacity.duration.500ms\r\n    x-transition:enter.opacity.duration.500ms\r\n    style=\"display: none;\"\r\n    {{ $attributes->merge(['class' => 'fixed right-0 top-0 p-2']) }}>\r\n    <div class=\"flex items-center bg-green-500 text-white rounded px-6 py-4\">\r\n        <div>\r\n            {{ $slot->isEmpty() ? 'Saved.' : $slot }}\r\n        </div>\r\n\r\n        @if($closeable)\r\n        <div @click=\"shown = false\" class=\"ml-4 cursor-pointer\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>              \r\n        </div>\r\n        @endif\r\n    </div>\r\n</div>"
            },
            "item_5": {
                "path": "resources/views/components/ui",
                "name": "/action/danger.blade.php",
                "fullPath": "resources/views/components/ui//action/danger.blade.php",
                "template": "blade/ui/action/Danger.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 5,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<a {!! $attributes->merge(['class' => 'text-red-600 hover:text-red-700 cursor-pointer']) !!}>\r\n    {{ $slot }}\r\n</a>"
            },
            "item_6": {
                "path": "resources/views/components/ui",
                "name": "/action/index.blade.php",
                "fullPath": "resources/views/components/ui//action/index.blade.php",
                "template": "blade/ui/action/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 6,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<a {!! $attributes->merge(['class' => 'text-indigo-600 hover:text-indigo-700 cursor-pointer']) !!}>\r\n    {{ $slot }}\r\n</a>"
            },
            "item_7": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/index.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/index.blade.php",
                "template": "blade/ui/breadcrumbs/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 7,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<nav class=\"flex justify-between py-1\">\r\n    <ol class=\"inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0\"> \r\n        {{ $slot }}\r\n    </ol>\r\n</nav>"
            },
            "item_8": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/link.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/link.blade.php",
                "template": "blade/ui/breadcrumbs/Link.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 8,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props([\r\n    'href' => false,\r\n    'active' => false,\r\n])\r\n\r\n<li class=\"\">\r\n    <a \r\n        @if($href)\r\n            wire:navigate\r\n            href=\"{{ $href }}\"\r\n        @endif\r\n        class=\"inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none {{ $active ? 'active-breadcrumb' : '' }}\"\r\n    >\r\n        {{ $slot }}\r\n    </a>\r\n</li>"
            },
            "item_9": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/separator.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/separator.blade.php",
                "template": "blade/ui/breadcrumbs/Separator.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 9,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<svg class=\"w-5 h-5 text-gray-400/70\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"none\"><path d=\"M10 8.013l4 4-4 4\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg>"
            },
            "item_10": {
                "path": "resources/views/components/ui",
                "name": "/button/danger.blade.php",
                "fullPath": "resources/views/components/ui//button/danger.blade.php",
                "template": "blade/ui/button/Danger.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 10,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center justify-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>\r\n    {{ $slot }}\r\n</button>"
            },
            "item_11": {
                "path": "resources/views/components/ui",
                "name": "/button/index.blade.php",
                "fullPath": "resources/views/components/ui//button/index.blade.php",
                "template": "blade/ui/button/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 11,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none']) }}>\r\n    {{ $slot }}\r\n</button>"
            },
            "item_12": {
                "path": "resources/views/components/ui",
                "name": "/card/body.blade.php",
                "fullPath": "resources/views/components/ui//card/body.blade.php",
                "template": "blade/ui/card/Body.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 12,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": ""
            },
            "item_13": {
                "path": "resources/views/components/ui",
                "name": "/card/header.blade.php",
                "fullPath": "resources/views/components/ui//card/header.blade.php",
                "template": "blade/ui/card/Header.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 13,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": ""
            },
            "item_14": {
                "path": "resources/views/components/ui",
                "name": "/card/index.blade.php",
                "fullPath": "resources/views/components/ui//card/index.blade.php",
                "template": "blade/ui/card/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 14,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": ""
            },
            "item_15": {
                "path": "resources/views/components/ui",
                "name": "/card/title.blade.php",
                "fullPath": "resources/views/components/ui//card/title.blade.php",
                "template": "blade/ui/card/Title.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 15,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": ""
            },
            "item_16": {
                "path": "resources/views/components/ui",
                "name": "/container/table.blade.php",
                "fullPath": "resources/views/components/ui//container/table.blade.php",
                "template": "blade/ui/container/Table.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 16,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<div class=\"flex flex-col\">\r\n    <div class=\"overflow-x-auto\">\r\n        <div class=\"inline-block min-w-full\">\r\n            {{ $slot }}\r\n        </div>\r\n    </div>\r\n</div>\r\n"
            },
            "item_17": {
                "path": "resources/views/components/ui",
                "name": "/input/checkbox.blade.php",
                "fullPath": "resources/views/components/ui//input/checkbox.blade.php",
                "template": "blade/ui/input/Checkbox.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 17,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<input \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    type=\"checkbox\"\r\n    {!! $attributes->merge(['class' => '']) !!}\r\n>"
            },
            "item_18": {
                "path": "resources/views/components/ui",
                "name": "/input/color.blade.php",
                "fullPath": "resources/views/components/ui//input/color.blade.php",
                "template": "blade/ui/input/Color.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 18,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"color\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_19": {
                "path": "resources/views/components/ui",
                "name": "/input/date.blade.php",
                "fullPath": "resources/views/components/ui//input/date.blade.php",
                "template": "blade/ui/input/Date.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 19,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"date\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_20": {
                "path": "resources/views/components/ui",
                "name": "/input/date-time.blade.php",
                "fullPath": "resources/views/components/ui//input/date-time.blade.php",
                "template": "blade/ui/input/DateTime.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 20,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"datetime-local\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_21": {
                "path": "resources/views/components/ui",
                "name": "/input/email.blade.php",
                "fullPath": "resources/views/components/ui//input/email.blade.php",
                "template": "blade/ui/input/Email.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 21,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"email\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_22": {
                "path": "resources/views/components/ui",
                "name": "/input/error.blade.php",
                "fullPath": "resources/views/components/ui//input/error.blade.php",
                "template": "blade/ui/input/Error.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 22,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['for'])\r\n\r\n@error($for)\r\n    <p {{ $attributes->merge(['class' => 'text-sm text-red-600']) }}>{{ $message }}</p>\r\n@enderror\r\n"
            },
            "item_23": {
                "path": "resources/views/components/ui",
                "name": "/input/file.blade.php",
                "fullPath": "resources/views/components/ui//input/file.blade.php",
                "template": "blade/ui/input/File.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 23,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props([\r\n    'src' => '',\r\n    'accept' => '*',\r\n])\r\n\r\n<div {!! $attributes->except(['wire:model']) !!} x-data=\"{\r\n    fileUrl: '{{ $src }}',\r\n    file: null,\r\n    fileInput: null,\r\n    initFileInput() {\r\n        this.fileInput = this.$el.querySelector('input[type=file]')\r\n\r\n        this.fileInput.addEventListener('change', () => {\r\n            this.file = this.fileInput.files[0]\r\n            this.fileUrl = URL.createObjectURL(this.file)\r\n        })\r\n    },\r\n    destroyFileInput() {\r\n        this.fileInput.removeEventListener('change')\r\n    },\r\n    remove() {\r\n        if (!confirm('Are you sure?')) return\r\n\r\n        this.fileUrl = ''\r\n        this.file = null\r\n        this.fileInput.value = ''\r\n\r\n        this.$dispatch('removed')\r\n    }\r\n}\" x-init=\"initFileInput\" x-on:destroy.window=\"destroyFileInput\">\r\n    <div class=\"mb-2\">\r\n        {{-- Show the filename --}}\r\n        <template x-if=\"file\">\r\n            <div class=\"text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1\" x-text=\"file.name\"></div>\r\n        </template>\r\n\r\n        {{-- File selector --}}\r\n        <input style=\"display: none;\" type=\"file\" accept=\"{{ $accept }}\" {!! $attributes->only([ 'wire:model']) !!}>\r\n\r\n        {{-- Upload and remove buttons --}}\r\n        <div>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" @click.stop=\"fileInput.click()\">Upload</button>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" x-show=\"fileUrl\" @click.stop=\"remove()\">Remove</button>\r\n        </div>\r\n    </div>\r\n</div>"
            },
            "item_24": {
                "path": "resources/views/components/ui",
                "name": "/input/hidden.blade.php",
                "fullPath": "resources/views/components/ui//input/hidden.blade.php",
                "template": "blade/ui/input/Hidden.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 24,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"hidden\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_25": {
                "path": "resources/views/components/ui",
                "name": "/input/image.blade.php",
                "fullPath": "resources/views/components/ui//input/image.blade.php",
                "template": "blade/ui/input/Image.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 25,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props([\r\n    'src' => '',\r\n    'accept' => 'image/*',\r\n])\r\n\r\n<div {!! $attributes->except(['wire:model']) !!} x-data=\"{\r\n    imageUrl: '{{ $src }}',\r\n    imageFile: null,\r\n    imageInput: null,\r\n    initFileInput() {\r\n        this.imageInput = this.$el.querySelector('input[type=file]')\r\n\r\n        this.imageInput.addEventListener('change', () => {\r\n            this.imageFile = this.imageInput.files[0]\r\n            this.imageUrl = URL.createObjectURL(this.imageFile)\r\n        })\r\n    },\r\n    destroyFileInput() {\r\n        this.imageInput.removeEventListener('change')\r\n    },\r\n    remove() {\r\n        if (!confirm('Are you sure?')) return\r\n\r\n        this.imageUrl = ''\r\n        this.imageFile = null\r\n        this.imageInput.value = ''\r\n\r\n        this.$dispatch('removed')\r\n    }\r\n}\" x-init=\"initFileInput\" x-on:destroy.window=\"destroyFileInput\">\r\n    <div class=\"mb-2\">\r\n\r\n        {{-- Show the image --}}\r\n        <template x-if=\"imageUrl\">\r\n            <img @click.stop=\"imageInput.click()\" :src=\"imageUrl\" class=\"object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out\">\r\n        </template>\r\n\r\n        {{-- Show the gray box when image is not available --}}\r\n        <template x-if=\"!imageUrl\">\r\n            <div @click.stop=\"imageInput.click()\" class=\"object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out\"></div>\r\n        </template>\r\n\r\n        {{-- Image file selector --}}\r\n        <input style=\"display: none;\" type=\"file\" accept=\"{{ $accept }}\" {!! $attributes->only([ 'wire:model']) !!}>\r\n\r\n        {{-- Upload and remove buttons --}}\r\n        <div>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" @click.stop=\"imageInput.click()\">Upload</button>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" x-show=\"imageUrl\" @click.stop=\"remove()\">Remove</button>\r\n        </div>\r\n    </div>\r\n</div>"
            },
            "item_26": {
                "path": "resources/views/components/ui",
                "name": "/input/index.blade.php",
                "fullPath": "resources/views/components/ui//input/index.blade.php",
                "template": "blade/ui/input/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 26,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<input \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\r\n>\r\n"
            },
            "item_27": {
                "path": "resources/views/components/ui",
                "name": "/input/number.blade.php",
                "fullPath": "resources/views/components/ui//input/number.blade.php",
                "template": "blade/ui/input/Number.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 27,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"number\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_28": {
                "path": "resources/views/components/ui",
                "name": "/input/password.blade.php",
                "fullPath": "resources/views/components/ui//input/password.blade.php",
                "template": "blade/ui/input/Password.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 28,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"password\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_29": {
                "path": "resources/views/components/ui",
                "name": "/input/radio.blade.php",
                "fullPath": "resources/views/components/ui//input/radio.blade.php",
                "template": "blade/ui/input/Radio.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 29,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<input \r\n    :disabled=\"$disabled\" \r\n    type=\"radio\"\r\n    {!! $attributes->merge(['class' => '!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500']) !!}\r\n/>"
            },
            "item_30": {
                "path": "resources/views/components/ui",
                "name": "/input/select.blade.php",
                "fullPath": "resources/views/components/ui//input/select.blade.php",
                "template": "blade/ui/input/Select.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 30,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<select \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\r\n>\r\n    {{ $slot }}\r\n</select>"
            },
            "item_31": {
                "path": "resources/views/components/ui",
                "name": "/input/text.blade.php",
                "fullPath": "resources/views/components/ui//input/text.blade.php",
                "template": "blade/ui/input/Text.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 31,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"text\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_32": {
                "path": "resources/views/components/ui",
                "name": "/input/textarea.blade.php",
                "fullPath": "resources/views/components/ui//input/textarea.blade.php",
                "template": "blade/ui/input/Textarea.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 32,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<textarea \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\r\n></textarea>"
            },
            "item_33": {
                "path": "resources/views/components/ui",
                "name": "/input/time.blade.php",
                "fullPath": "resources/views/components/ui//input/time.blade.php",
                "template": "blade/ui/input/Time.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 33,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"time\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_34": {
                "path": "resources/views/components/ui",
                "name": "/input/url.blade.php",
                "fullPath": "resources/views/components/ui//input/url.blade.php",
                "template": "blade/ui/input/Url.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 34,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"url\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_35": {
                "path": "resources/views/components/ui",
                "name": "/label/index.blade.php",
                "fullPath": "resources/views/components/ui//label/index.blade.php",
                "template": "blade/ui/label/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 35,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['value'])\r\n\r\n<label {{ $attributes->merge(['class' => 'block mb-1.5 font-medium text-sm text-gray-700']) }}>\r\n    {{ $value ?? $slot }}\r\n</label>"
            },
            "item_36": {
                "path": "resources/views/components/ui",
                "name": "/modal/confirm.blade.php",
                "fullPath": "resources/views/components/ui//modal/confirm.blade.php",
                "template": "blade/ui/modal/Confirm.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 36,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['id' => null, 'maxWidth' => null])\r\n\r\n<x-ui.modal :id=\"$id\" :maxWidth=\"$maxWidth\" {{ $attributes }}>\r\n    <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n        <div class=\"sm:flex sm:items-start\">\r\n            <div class=\"mx-auto shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                <svg class=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\r\n                </svg>\r\n            </div>\r\n\r\n            <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                <h3 class=\"text-lg font-medium text-gray-900\">\r\n                    {{ $title }}\r\n                </h3>\r\n\r\n                <div class=\"mt-4 text-sm text-gray-600\">\r\n                    {{ $content }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"flex flex-row justify-between p-4 bg-gray-100 text-right\">\r\n        {{ $footer }}\r\n    </div>\r\n</x-ui.modal>"
            },
            "item_37": {
                "path": "resources/views/components/ui",
                "name": "/modal/index.blade.php",
                "fullPath": "resources/views/components/ui//modal/index.blade.php",
                "template": "blade/ui/modal/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 37,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props(['id', 'maxWidth'])\r\n\r\n@php\r\n$id = $id ?? md5($attributes->wire('model'));\r\n\r\n$maxWidth = [\r\n    'sm' => 'sm:max-w-sm',\r\n    'md' => 'sm:max-w-md',\r\n    'lg' => 'sm:max-w-lg',\r\n    'xl' => 'sm:max-w-xl',\r\n    '2xl' => 'sm:max-w-2xl',\r\n][$maxWidth ?? '2xl'];\r\n@endphp\r\n\r\n<div\r\n    x-data=\"{ show: @entangle($attributes->wire('model')) }\"\r\n    x-on:close.stop=\"show = false\"\r\n    x-on:keydown.escape.window=\"show = false\"\r\n    x-show=\"show\"\r\n    id=\"{{ $id }}\"\r\n    class=\"jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\"\r\n    style=\"display: none;\"\r\n>\r\n    <div x-show=\"show\" class=\"fixed inset-0 transform transition-all\" x-on:click=\"show = false\" x-transition:enter=\"ease-out duration-300\"\r\n                    x-transition:enter-start=\"opacity-0\"\r\n                    x-transition:enter-end=\"opacity-100\"\r\n                    x-transition:leave=\"ease-in duration-200\"\r\n                    x-transition:leave-start=\"opacity-100\"\r\n                    x-transition:leave-end=\"opacity-0\">\r\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n    </div>\r\n\r\n    <div x-show=\"show\" \r\n        class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto\"\r\n        x-trap.inert.noscroll=\"show\"\r\n        x-transition:enter=\"ease-out duration-300\"\r\n        x-transition:enter-start=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n        x-transition:enter-end=\"opacity-100 translate-y-0 sm:scale-100\"\r\n        x-transition:leave=\"ease-in duration-200\"\r\n        x-transition:leave-start=\"opacity-100 translate-y-0 sm:scale-100\"\r\n        x-transition:leave-end=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\r\n        {{ $slot }}\r\n    </div>\r\n</div>\r\n"
            },
            "item_38": {
                "path": "resources/views/components/ui",
                "name": "/table/action-column.blade.php",
                "fullPath": "resources/views/components/ui//table/action-column.blade.php",
                "template": "blade/ui/table/ActionColumn.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 38,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<td {!! $attributes->merge(['class' => 'px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2']) !!}>\r\n    {{ $slot }}\r\n</td>"
            },
            "item_39": {
                "path": "resources/views/components/ui",
                "name": "/table/action-header.blade.php",
                "fullPath": "resources/views/components/ui//table/action-header.blade.php",
                "template": "blade/ui/table/ActionHeader.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 39,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<th {!! $attributes->merge(['class' => 'px-5 py-3 text-xs font-medium text-right uppercase']) !!}>\r\n    {{ $slot }}\r\n</th>"
            },
            "item_40": {
                "path": "resources/views/components/ui",
                "name": "/table/column.blade.php",
                "fullPath": "resources/views/components/ui//table/column.blade.php",
                "template": "blade/ui/table/Column.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 40,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props([\r\n    'forCrud' => false\r\n])\r\n\r\n@php\r\n$allClasses = [\r\n    'px-5 py-3 text-xs font-medium text-left uppercase' => true,\r\n    'max-w-xs truncate' => $forCrud,\r\n];\r\n\r\n$classes = join(' ', array_keys(array_filter($allClasses)));\r\n@endphp\r\n\r\n<td {!! $attributes->merge(['class' => 'px-5 py-4 text-sm whitespace-nowrap']) !!}>\r\n    {{ $slot }}\r\n</td>"
            },
            "item_41": {
                "path": "resources/views/components/ui",
                "name": "/table/header.blade.php",
                "fullPath": "resources/views/components/ui//table/header.blade.php",
                "template": "blade/ui/table/Header.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 41,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props([\r\n    'forCrud' => false\r\n])\r\n\r\n@php\r\n$allClasses = [\r\n    'px-5 py-3 text-xs font-medium text-left uppercase' => true,\r\n    'cursor-pointer' => $forCrud,\r\n];\r\n\r\n$classes = join(' ', array_keys(array_filter($allClasses)));\r\n@endphp\r\n\r\n<th {!! $attributes->merge(['class' => $classes]) !!}>\r\n    {{ $slot }}\r\n</th>"
            },
            "item_42": {
                "path": "resources/views/components/ui",
                "name": "/table/image.blade.php",
                "fullPath": "resources/views/components/ui//table/image.blade.php",
                "template": "blade/ui/table/Image.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 42,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props([\r\n    'url' => '',\r\n    'alt' => ''\r\n])\r\n\r\n<img\r\n    src=\"{{ $url }}\"\r\n    alt=\"{{ $alt }}\"\r\n    class=\"w-12 h-12 rounded-lg bg-center\"\r\n/>"
            },
            "item_43": {
                "path": "resources/views/components/ui",
                "name": "/table/index.blade.php",
                "fullPath": "resources/views/components/ui//table/index.blade.php",
                "template": "blade/ui/table/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 43,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@props([\r\n    'head',\r\n    'body',\r\n    'foot'\r\n])\r\n\r\n<div class=\"overflow-hidden border rounded-lg\">\r\n    <table {!! $attributes->merge(['class' => 'min-w-full divide-y divide-gray-200']) !!}>\r\n        @if(isset($head))\r\n        <thead class=\"bg-gray-50\">\r\n            <tr class=\"text-gray-500\">\r\n                {{ $head }}\r\n            </tr>\r\n        </thead>\r\n        @endif\r\n\r\n        @if(isset($body))\r\n        <tbody class=\"bg-white divide-y divide-gray-200 dark:divide-gray-700\">\r\n            {{ $body }}\r\n        </tbody>\r\n        @endif\r\n\r\n        @if(isset($foot))\r\n        <tfoot class=\"\">\r\n            {{ $foot }}\r\n        </tfoot>\r\n        @endif\r\n    </table>\r\n    \r\n</div>"
            },
            "item_44": {
                "path": "resources/views/components/ui",
                "name": "/table/row.blade.php",
                "fullPath": "resources/views/components/ui//table/row.blade.php",
                "template": "blade/ui/table/Row.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 44,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<tr {!! $attributes->merge(['class' => 'text-gray-800']) !!}>\r\n    {{ $slot }}\r\n</tr>"
            },
            "item_45": {
                "path": "resources/views/partials",
                "name": "app-menu.blade.php",
                "fullPath": "resources/views/partials/app-menu.blade.php",
                "template": "menu/AppMenu.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 45,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n    <div class=\"ml-3 relative\">\n        <x-dropdown align=\"right\" width=\"48\">\n            <x-slot name=\"trigger\">\n                <span class=\"inline-flex rounded-md\">\n                    <button\n                        type=\"button\"\n                        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\"\n                    >\n                        {{ __('navigation.home') }}\n\n                        <svg\n                            class=\"ml-2 -mr-0.5 h-4 w-4\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke-width=\"1.5\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                            />\n                        </svg>\n                    </button>\n                </span>\n            </x-slot>\n\n            <x-slot name=\"content\">\n                <x-dropdown-link> No items found </x-dropdown-link>\n            </x-slot>\n        </x-dropdown>\n    </div>\n    <div class=\"ml-3 relative\">\n        <x-dropdown align=\"right\" width=\"48\">\n            <x-slot name=\"trigger\">\n                <span class=\"inline-flex rounded-md\">\n                    <button\n                        type=\"button\"\n                        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\"\n                    >\n                        {{ __('navigation.apps') }}\n\n                        <svg\n                            class=\"ml-2 -mr-0.5 h-4 w-4\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke-width=\"1.5\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                            />\n                        </svg>\n                    </button>\n                </span>\n            </x-slot>\n\n            <x-slot name=\"content\">\n                @can('view-any', App\\Models\\Supplier::class)\n                <x-dropdown-link\n                    wire:navigate\n                    href=\"{{ route('dashboard.suppliers.index') }}\"\n                >\n                    {{ __('navigation.suppliers') }}\n                </x-dropdown-link>\n                @endcan\n            </x-slot>\n        </x-dropdown>\n    </div>\n</div>\n"
            },
            "item_46": {
                "path": "resources/views/partials",
                "name": "app-responsive-menu.blade.php",
                "fullPath": "resources/views/partials/app-responsive-menu.blade.php",
                "template": "menu/AppResponsiveMenu.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 46,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "@can('view-any', App\\Models\\Supplier::class)\n<x-responsive-nav-link\n    href=\"{{ route('dashboard.suppliers.index') }}\"\n    :active=\"request()->routeIs('dashboard.suppliers.index')\"\n>\n    {{ __('navigation.suppliers') }}\n</x-responsive-nav-link>\n@endcan\n"
            },
            "item_47": {
                "path": "database/factories",
                "name": "UserFactory.php",
                "fullPath": "database/factories/UserFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 47,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'email' => fake()\n                ->unique()\n                ->safeEmail(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'two_factor_secret' => fake()->text(),\n            'two_factor_recovery_codes' => fake()->text(),\n            'remember_token' => \\Str::random(10),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n",
                "conflictFileName": null
            },
            "item_48": {
                "path": "database/seeders",
                "name": "UserSeeder.php",
                "fullPath": "database/seeders/UserSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 48,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_49": {
                "path": "app/Policies",
                "name": "UserPolicy.php",
                "fullPath": "app/Policies/UserPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 49,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\n\nclass UserPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "9t0HhoRrGaEoMZNKbjSFl0zuPQ17fMaL.json"
            },
            "item_50": {
                "path": "database/factories",
                "name": "WarehouseFactory.php",
                "fullPath": "database/factories/WarehouseFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 50,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Warehouse;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass WarehouseFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Warehouse::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'location' => fake()->word(),\n        ];\n    }\n}\n"
            },
            "item_51": {
                "path": "database/seeders",
                "name": "WarehouseSeeder.php",
                "fullPath": "database/seeders/WarehouseSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 51,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Warehouse;\nuse Illuminate\\Database\\Seeder;\n\nclass WarehouseSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Warehouse::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_52": {
                "path": "app/Policies",
                "name": "WarehousePolicy.php",
                "fullPath": "app/Policies/WarehousePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 52,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Warehouse;\n\nclass WarehousePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Warehouse $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Warehouse $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Warehouse $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Warehouse $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Warehouse $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "N5GD5QD9l7eBGsBAB33M2hH5wQiC7QcL.json"
            },
            "item_53": {
                "path": "database/factories",
                "name": "ItemFactory.php",
                "fullPath": "database/factories/ItemFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 53,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Item;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ItemFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Item::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'status' => fake()->word(),\n            'barcode' => fake()->text(255),\n            'barcode_image' => fake()->text(255),\n            'user_id' => \\App\\Models\\User::factory(),\n            'warehouse_id' => \\App\\Models\\Warehouse::factory(),\n            'maintenance_department_id' => \\App\\Models\\MaintenanceDepartment::factory(),\n        ];\n    }\n}\n"
            },
            "item_54": {
                "path": "database/seeders",
                "name": "ItemSeeder.php",
                "fullPath": "database/seeders/ItemSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 54,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Item;\nuse Illuminate\\Database\\Seeder;\n\nclass ItemSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Item::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_55": {
                "path": "app/Policies",
                "name": "ItemPolicy.php",
                "fullPath": "app/Policies/ItemPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 55,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Item;\nuse App\\Models\\User;\n\nclass ItemPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Item $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Item $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Item $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Item $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Item $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "EjDEZYZpWf16vzjXYG0rFuu7FOF828Xu.json"
            },
            "item_56": {
                "path": "database/factories",
                "name": "AssetFactory.php",
                "fullPath": "database/factories/AssetFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 56,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Asset;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass AssetFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Asset::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'status' => fake()->word(),\n            'barcode' => fake()->text(255),\n            'barcode_image' => fake()->text(255),\n            'user_id' => \\App\\Models\\User::factory(),\n            'warehouse_id' => \\App\\Models\\Warehouse::factory(),\n        ];\n    }\n}\n"
            },
            "item_57": {
                "path": "database/seeders",
                "name": "AssetSeeder.php",
                "fullPath": "database/seeders/AssetSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 57,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Asset;\nuse Illuminate\\Database\\Seeder;\n\nclass AssetSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Asset::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_58": {
                "path": "app/Policies",
                "name": "AssetPolicy.php",
                "fullPath": "app/Policies/AssetPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 58,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Asset;\n\nclass AssetPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Asset $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Asset $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Asset $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Asset $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Asset $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "7LMd8bTbqCggByYVsvnJmVtHO0nY2IOw.json"
            },
            "item_59": {
                "path": "database/factories",
                "name": "MaintenanceDepartmentFactory.php",
                "fullPath": "database/factories/MaintenanceDepartmentFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 59,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\MaintenanceDepartment;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass MaintenanceDepartmentFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = MaintenanceDepartment::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'location' => fake()->text(255),\n            'type' => fake()->word(),\n        ];\n    }\n}\n"
            },
            "item_60": {
                "path": "database/seeders",
                "name": "MaintenanceDepartmentSeeder.php",
                "fullPath": "database/seeders/MaintenanceDepartmentSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 60,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\MaintenanceDepartment;\n\nclass MaintenanceDepartmentSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        MaintenanceDepartment::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_61": {
                "path": "app/Policies",
                "name": "MaintenanceDepartmentPolicy.php",
                "fullPath": "app/Policies/MaintenanceDepartmentPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 61,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\MaintenanceDepartment;\n\nclass MaintenanceDepartmentPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, MaintenanceDepartment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, MaintenanceDepartment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, MaintenanceDepartment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, MaintenanceDepartment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, MaintenanceDepartment $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "LQkbHmkSirUPbP1wggYZwDfBKD6hGR6L.json"
            },
            "item_62": {
                "path": "database/factories",
                "name": "MaintenanceItemFactory.php",
                "fullPath": "database/factories/MaintenanceItemFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 62,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\MaintenanceItem;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass MaintenanceItemFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = MaintenanceItem::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'status' => fake()->word(),\n            'note' => fake()->word(),\n            'item_id' => \\App\\Models\\Item::factory(),\n            'maintenance_department_id' => \\App\\Models\\MaintenanceDepartment::factory(),\n            'damaged_id' => \\App\\Models\\Damaged::factory(),\n        ];\n    }\n}\n"
            },
            "item_63": {
                "path": "database/seeders",
                "name": "MaintenanceItemSeeder.php",
                "fullPath": "database/seeders/MaintenanceItemSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 63,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\MaintenanceItem;\n\nclass MaintenanceItemSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        MaintenanceItem::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_64": {
                "path": "app/Policies",
                "name": "MaintenanceItemPolicy.php",
                "fullPath": "app/Policies/MaintenanceItemPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 64,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\MaintenanceItem;\n\nclass MaintenanceItemPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, MaintenanceItem $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, MaintenanceItem $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, MaintenanceItem $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, MaintenanceItem $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, MaintenanceItem $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "ihoWkyOZVa0XLVnjoXaKjAg4n3HZNmqf.json"
            },
            "item_65": {
                "path": "database/factories",
                "name": "OrderFactory.php",
                "fullPath": "database/factories/OrderFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 65,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Order;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass OrderFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Order::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'status' => fake()->word(),\n            'supplier_id' => \\App\\Models\\Supplier::factory(),\n            'warehouse_id' => \\App\\Models\\Warehouse::factory(),\n        ];\n    }\n}\n"
            },
            "item_66": {
                "path": "database/seeders",
                "name": "OrderSeeder.php",
                "fullPath": "database/seeders/OrderSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 66,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Order;\nuse Illuminate\\Database\\Seeder;\n\nclass OrderSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Order::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_67": {
                "path": "app/Policies",
                "name": "OrderPolicy.php",
                "fullPath": "app/Policies/OrderPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 67,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Order;\n\nclass OrderPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Order $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Order $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Order $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Order $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Order $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "7RGgMaSxIa2sBtjKHQEtTNnrYo03NdMx.json"
            },
            "item_68": {
                "path": "database/factories",
                "name": "SupplierFactory.php",
                "fullPath": "database/factories/SupplierFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 68,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Supplier;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass SupplierFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Supplier::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'phone' => fake()->phoneNumber(),\n            'location' => fake()->word(),\n        ];\n    }\n}\n"
            },
            "item_69": {
                "path": "database/seeders",
                "name": "SupplierSeeder.php",
                "fullPath": "database/seeders/SupplierSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 69,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Supplier;\nuse Illuminate\\Database\\Seeder;\n\nclass SupplierSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Supplier::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_70": {
                "path": "app/Policies",
                "name": "SupplierPolicy.php",
                "fullPath": "app/Policies/SupplierPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 70,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Supplier;\n\nclass SupplierPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Supplier $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Supplier $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Supplier $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Supplier $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Supplier $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "bwId2DRuz3quR4QM5bE3El7f4Qdsv8nR.json"
            },
            "item_71": {
                "path": "database/factories",
                "name": "OrderItemFactory.php",
                "fullPath": "database/factories/OrderItemFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 71,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\OrderItem;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass OrderItemFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = OrderItem::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'price' => fake()->randomFloat(2, 0, 9999),\n            'barcode' => fake()->text(255),\n            'barcode_image' => fake()->text(255),\n            'order_id' => \\App\\Models\\Order::factory(),\n        ];\n    }\n}\n"
            },
            "item_72": {
                "path": "database/seeders",
                "name": "OrderItemSeeder.php",
                "fullPath": "database/seeders/OrderItemSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 72,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\OrderItem;\nuse Illuminate\\Database\\Seeder;\n\nclass OrderItemSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        OrderItem::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_73": {
                "path": "app/Policies",
                "name": "OrderItemPolicy.php",
                "fullPath": "app/Policies/OrderItemPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 73,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\OrderItem;\n\nclass OrderItemPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, OrderItem $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, OrderItem $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, OrderItem $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, OrderItem $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, OrderItem $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_74": {
                "path": "app/Filament/Resources/Panel",
                "name": "SupplierResource.php",
                "fullPath": "app/Filament/Resources/Panel/SupplierResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 74,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-29 23:44:56",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse App\\Models\\Supplier;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\SupplierResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\SupplierResource\\RelationManagers;\n\nclass SupplierResource extends Resource\n{\n    protected static ?string $model = Supplier::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.suppliers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.suppliers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.suppliers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    TextInput::make('phone')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('location')\n                        ->required()\n                        ->string(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('phone'),\n\n                TextColumn::make('location'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [RelationManagers\\OrdersRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListSuppliers::route('/'),\n            'create' => Pages\\CreateSupplier::route('/create'),\n            'view' => Pages\\ViewSupplier::route('/{record}'),\n            'edit' => Pages\\EditSupplier::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "KnirWNvT6JIOIaEvrVAtN0rdkuEBfNRW.json"
            },
            "item_75": {
                "path": "app/Filament/Resources/Panel/SupplierResource/Pages",
                "name": "CreateSupplier.php",
                "fullPath": "app/Filament/Resources/Panel/SupplierResource/Pages/CreateSupplier.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 75,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\SupplierResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\SupplierResource;\n\nclass CreateSupplier extends CreateRecord\n{\n    protected static string $resource = SupplierResource::class;\n}\n"
            },
            "item_76": {
                "path": "app/Filament/Resources/Panel/SupplierResource/Pages",
                "name": "ViewSupplier.php",
                "fullPath": "app/Filament/Resources/Panel/SupplierResource/Pages/ViewSupplier.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 76,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\SupplierResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\SupplierResource;\n\nclass ViewSupplier extends ViewRecord\n{\n    protected static string $resource = SupplierResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_77": {
                "path": "app/Filament/Resources/Panel/SupplierResource/Pages",
                "name": "EditSupplier.php",
                "fullPath": "app/Filament/Resources/Panel/SupplierResource/Pages/EditSupplier.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 77,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\SupplierResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\SupplierResource;\n\nclass EditSupplier extends EditRecord\n{\n    protected static string $resource = SupplierResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_78": {
                "path": "app/Filament/Resources/Panel/SupplierResource/Pages",
                "name": "ListSuppliers.php",
                "fullPath": "app/Filament/Resources/Panel/SupplierResource/Pages/ListSuppliers.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 78,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-29 23:45:04",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\SupplierResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\SupplierResource;\n\nclass ListSuppliers extends ListRecords\n{\n    protected static string $resource = SupplierResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n",
                "conflictFileName": "R3SGqdpwjL0fdHG4VlSwcuaTMi47pwSD.json"
            },
            "item_79": {
                "path": "app/Filament/Resources/Panel/SupplierResource/RelationManagers",
                "name": "OrdersRelationManager.php",
                "fullPath": "app/Filament/Resources/Panel/SupplierResource/RelationManagers/OrdersRelationManager.php",
                "template": "crud/views/filament/RelationManager.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 79,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-29 23:53:05",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\SupplierResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\SupplierResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass OrdersRelationManager extends RelationManager\n{\n    protected static string $relationship = 'orders';\n\n    protected static ?string $recordTitleAttribute = 'name';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                Select::make('warehouse_id')\n                    ->required()\n                    ->relationship('warehouse', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                TextInput::make('name')\n                    ->required()\n                    ->string(),\n\n                TextInput::make('status')\n                    ->required()\n                    ->string(),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('warehouse.name'),\n\n                TextColumn::make('name'),\n\n                TextColumn::make('status')\n                    ->badge()\n                    ->color(\n                        fn(string $state): string => match ($state) {\n                            'Wating' => 'info',\n                            'Approve' => 'success',\n                            'Reject' => 'danger',\n                        }\n                    ),\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n",
                "conflictFileName": "DBx6xX5svqoL0rFJWJxM8DcYEZ6nSGbP.json"
            },
            "item_80": {
                "path": "database/seeders",
                "name": "DatabaseSeeder.php",
                "fullPath": "database/seeders/DatabaseSeeder.php",
                "template": "database/DatabaseSeeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 80,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-29 23:45:13",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n// use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\n\nuse App\\Models\\User;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n\n        $this->call(WarehouseSeeder::class);\n        $this->call(ItemSeeder::class);\n        $this->call(AssetSeeder::class);\n        $this->call(MaintenanceDepartmentSeeder::class);\n        $this->call(MaintenanceItemSeeder::class);\n        $this->call(OrderSeeder::class);\n        $this->call(SupplierSeeder::class);\n        $this->call(OrderItemSeeder::class);\n    }\n}\n",
                "conflictFileName": "CB8GNoOj20pLWw95SEeeCTtoMgIHiQ9W.json"
            },
            "item_81": {
                "path": "resources/views/components/layouts",
                "name": "app.blade.php",
                "fullPath": "resources/views/components/layouts/app.blade.php",
                "template": "crud/views/livewire/JetstreamLayoutComponent.vemtl",
                "projectId": 1,
                "type": "html",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 81,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<!DOCTYPE html>\r\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\r\n\r\n        <title>{{ config('app.name', 'Laravel') }}</title>\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.bunny.net\">\r\n        <link href=\"https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap\" rel=\"stylesheet\" />\r\n\r\n        <!-- Scripts -->\r\n        @vite(['resources/css/app.css', 'resources/js/app.js'])\r\n    </head>\r\n    <body class=\"font-sans antialiased\">\r\n        <x-banner />\r\n\r\n        <div class=\"min-h-screen bg-gray-100\">\r\n            @livewire('navigation-menu')\r\n\r\n            <!-- Page Heading -->\r\n            @if (isset($header))\r\n                <header class=\"bg-white shadow\">\r\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n                        {{ $header }}\r\n                    </div>\r\n                </header>\r\n            @endif\r\n\r\n            <!-- Page Content -->\r\n            <main>\r\n                {{ $slot }}\r\n            </main>\r\n        </div>\r\n\r\n        @stack('modals')\r\n    </body>\r\n</html>\r\n"
            },
            "item_82": {
                "path": "/lang/en/",
                "name": "navigation.php",
                "fullPath": "/lang/en//navigation.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 82,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nreturn [\n    'home' => 'Home',\n    'apps' => 'Apps',\n    'suppliers' => 'Suppliers',\n];\n"
            },
            "item_83": {
                "path": "/lang/en/",
                "name": "crud.php",
                "fullPath": "/lang/en//crud.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 83,
                "createdAt": "2025-01-29 21:14:08",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nreturn [\n    'suppliers' => [\n        'itemTitle' => 'Supplier',\n        'collectionTitle' => 'Suppliers',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'phone' => [\n                'label' => 'Phone',\n                'placeholder' => 'Phone',\n            ],\n            'location' => [\n                'label' => 'Location',\n                'placeholder' => 'Location',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'phone' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'location' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n        ],\n    ],\n    'orders' => [\n        'itemTitle' => 'Order',\n        'collectionTitle' => 'Orders',\n        'inputs' => [\n            'warehouse_id' => [\n                'label' => 'Warehouse id',\n                'placeholder' => 'Warehouse id',\n            ],\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'supplier_id' => [\n                'label' => 'Supplier id',\n                'placeholder' => 'Supplier id',\n            ],\n        ],\n        'filament' => [\n            'warehouse_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'status' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'supplier_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'orderItems' => [\n        'itemTitle' => 'Order Item',\n        'collectionTitle' => 'Order Items',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'price' => [\n                'label' => 'Price',\n                'placeholder' => 'Price',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'status' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'price' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n        ],\n    ],\n    'warehouses' => [\n        'itemTitle' => 'Warehouse',\n        'collectionTitle' => 'Warehouses',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'location' => [\n                'label' => 'Location',\n                'placeholder' => 'Location',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'location' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n        ],\n    ],\n    'items' => [\n        'itemTitle' => 'Item',\n        'collectionTitle' => 'Items',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'user_id' => [\n                'label' => 'User id',\n                'placeholder' => 'User id',\n            ],\n            'warehouse_id' => [\n                'label' => 'Warehouse id',\n                'placeholder' => 'Warehouse id',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'status' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'user_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'warehouse_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'userWarehouse' => [\n        'itemTitle' => 'User Warehouse',\n        'collectionTitle' => 'User Warehouse',\n    ],\n    'maintenanceItems' => [\n        'itemTitle' => 'Maintenance Item',\n        'collectionTitle' => 'Maintenance Items',\n        'inputs' => [\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'note' => [\n                'label' => 'Note',\n                'placeholder' => 'Note',\n            ],\n            'maintenance_department_id' => [\n                'label' => 'Maintenance department id',\n                'placeholder' => 'Maintenance department id',\n            ],\n            'item_id' => [\n                'label' => 'Item id',\n                'placeholder' => 'Item id',\n            ],\n            'asset_id' => [\n                'label' => 'Asset id',\n                'placeholder' => 'Asset id',\n            ],\n        ],\n        'filament' => [\n            'status' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'note' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n            'maintenance_department_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'item_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'asset_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'assets' => [\n        'itemTitle' => 'Asset',\n        'collectionTitle' => 'Assets',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'user_id' => [\n                'label' => 'User id',\n                'placeholder' => 'User id',\n            ],\n            'warehouse_id' => [\n                'label' => 'Warehouse id',\n                'placeholder' => 'Warehouse id',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'status' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'user_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'warehouse_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'maintenanceDepartments' => [\n        'itemTitle' => 'Maintenance Department',\n        'collectionTitle' => 'Maintenance Departments',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'location' => [\n                'label' => 'Location',\n                'placeholder' => 'Location',\n            ],\n            'type' => [\n                'label' => 'Type',\n                'placeholder' => 'Type',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'location' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'type' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'damageds' => [\n        'itemTitle' => 'Damaged',\n        'collectionTitle' => 'Damageds',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'warehouse_id' => [\n                'label' => 'Warehouse id',\n                'placeholder' => 'Warehouse id',\n            ],\n            'user_id' => [\n                'label' => 'User id',\n                'placeholder' => 'User id',\n            ],\n            'barcode' => [\n                'label' => 'Barcode',\n                'placeholder' => 'Barcode',\n            ],\n            'barcode_image' => [\n                'label' => 'Barcode image',\n                'placeholder' => 'Barcode image',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'status' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'warehouse_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'user_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'barcode' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'barcode_image' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n        ],\n    ],\n    'users' => [\n        'itemTitle' => 'Employee',\n        'collectionTitle' => 'Employees',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'email' => [\n                'label' => 'Email',\n                'placeholder' => 'Email',\n            ],\n            'password' => [\n                'label' => 'Password',\n                'placeholder' => 'Password',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'email' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'password' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n        ],\n    ],\n    'maintenanceDepartmentUser' => [\n        'itemTitle' => 'Maintenance Department User',\n        'collectionTitle' => 'Maintenance Department User',\n    ],\n];\n"
            },
            "item_84": {
                "path": "app/Filament/Resources/Panel",
                "name": "OrderResource.php",
                "fullPath": "app/Filament/Resources/Panel/OrderResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 84,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-29 23:53:57",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Order;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\OrderResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\OrderResource\\RelationManagers;\n\nclass OrderResource extends Resource\n{\n    protected static ?string $model = Order::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.orders.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.orders.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.orders.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('supplier_id')\n                        ->required()\n                        ->relationship('supplier', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('warehouse_id')\n                        ->required()\n                        ->relationship('warehouse', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('name')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('status')\n                        ->required()\n                        ->string(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('supplier.name'),\n\n                TextColumn::make('warehouse.name'),\n\n                TextColumn::make('name'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [RelationManagers\\OrderItemsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListOrders::route('/'),\n            'create' => Pages\\CreateOrder::route('/create'),\n            'view' => Pages\\ViewOrder::route('/{record}'),\n            'edit' => Pages\\EditOrder::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "6k6gKEO9z1aI0r9dqFJbvSnB4aARHrq5.json"
            },
            "item_85": {
                "path": "app/Filament/Resources/Panel/OrderResource/Pages",
                "name": "CreateOrder.php",
                "fullPath": "app/Filament/Resources/Panel/OrderResource/Pages/CreateOrder.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 85,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\OrderResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\OrderResource;\n\nclass CreateOrder extends CreateRecord\n{\n    protected static string $resource = OrderResource::class;\n}\n"
            },
            "item_86": {
                "path": "app/Filament/Resources/Panel/OrderResource/Pages",
                "name": "ViewOrder.php",
                "fullPath": "app/Filament/Resources/Panel/OrderResource/Pages/ViewOrder.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 86,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\OrderResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\OrderResource;\n\nclass ViewOrder extends ViewRecord\n{\n    protected static string $resource = OrderResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n",
                "conflictFileName": "x0SYV6yjVS3554aTOkxHoon4FsJdOCk1.json"
            },
            "item_87": {
                "path": "app/Filament/Resources/Panel/OrderResource/Pages",
                "name": "EditOrder.php",
                "fullPath": "app/Filament/Resources/Panel/OrderResource/Pages/EditOrder.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 87,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\OrderResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\OrderResource;\n\nclass EditOrder extends EditRecord\n{\n    protected static string $resource = OrderResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n",
                "conflictFileName": "PW7AtXfcvAUfs2AGi1sFUTdBMiXRhCQb.json"
            },
            "item_88": {
                "path": "app/Filament/Resources/Panel/OrderResource/Pages",
                "name": "ListOrders.php",
                "fullPath": "app/Filament/Resources/Panel/OrderResource/Pages/ListOrders.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 88,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-29 23:54:04",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\OrderResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\OrderResource;\n\nclass ListOrders extends ListRecords\n{\n    protected static string $resource = OrderResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n",
                "conflictFileName": "7cUJVnwUbaQOfNDagCb4rCScWOnGDow7.json"
            },
            "item_89": {
                "path": "app/Filament/Resources/Panel/OrderResource/RelationManagers",
                "name": "OrderItemsRelationManager.php",
                "fullPath": "app/Filament/Resources/Panel/OrderResource/RelationManagers/OrderItemsRelationManager.php",
                "template": "crud/views/filament/RelationManager.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 89,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-29 23:54:08",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\OrderResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\OrderResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass OrderItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'orderItems';\n\n    protected static ?string $recordTitleAttribute = 'name';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                TextInput::make('name')\n                    ->required()\n                    ->string()\n                    ->autofocus(),\n\n                TextInput::make('price')\n                    ->required()\n                    ->numeric()\n                    ->step(1),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([TextColumn::make('name'), TextColumn::make('price')])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n",
                "conflictFileName": "Y7bGjijeDWSvx4sdVwZJF1dGdGOjOsGg.json"
            },
            "item_90": {
                "path": "app/Filament/Resources/Panel",
                "name": "WarehouseResource.php",
                "fullPath": "app/Filament/Resources/Panel/WarehouseResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 90,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-29 23:54:12",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse App\\Models\\Warehouse;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\WarehouseResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\WarehouseResource\\RelationManagers;\n\nclass WarehouseResource extends Resource\n{\n    protected static ?string $model = Warehouse::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.warehouses.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.warehouses.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.warehouses.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    TextInput::make('location')\n                        ->required()\n                        ->string(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([TextColumn::make('name'), TextColumn::make('location')])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            RelationManagers\\ItemsRelationManager::class,\n            RelationManagers\\UsersRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListWarehouses::route('/'),\n            'create' => Pages\\CreateWarehouse::route('/create'),\n            'view' => Pages\\ViewWarehouse::route('/{record}'),\n            'edit' => Pages\\EditWarehouse::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "KG9cNYvNLzpU3wRHPORBFoGDnu1hfPhY.json"
            },
            "item_91": {
                "path": "app/Filament/Resources/Panel/WarehouseResource/Pages",
                "name": "CreateWarehouse.php",
                "fullPath": "app/Filament/Resources/Panel/WarehouseResource/Pages/CreateWarehouse.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 91,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\WarehouseResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\WarehouseResource;\n\nclass CreateWarehouse extends CreateRecord\n{\n    protected static string $resource = WarehouseResource::class;\n}\n"
            },
            "item_92": {
                "path": "app/Filament/Resources/Panel/WarehouseResource/Pages",
                "name": "ViewWarehouse.php",
                "fullPath": "app/Filament/Resources/Panel/WarehouseResource/Pages/ViewWarehouse.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 92,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\WarehouseResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\WarehouseResource;\n\nclass ViewWarehouse extends ViewRecord\n{\n    protected static string $resource = WarehouseResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_93": {
                "path": "app/Filament/Resources/Panel/WarehouseResource/Pages",
                "name": "EditWarehouse.php",
                "fullPath": "app/Filament/Resources/Panel/WarehouseResource/Pages/EditWarehouse.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 93,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\WarehouseResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\WarehouseResource;\n\nclass EditWarehouse extends EditRecord\n{\n    protected static string $resource = WarehouseResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_94": {
                "path": "app/Filament/Resources/Panel/WarehouseResource/Pages",
                "name": "ListWarehouses.php",
                "fullPath": "app/Filament/Resources/Panel/WarehouseResource/Pages/ListWarehouses.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 94,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-29 23:54:16",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\WarehouseResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\WarehouseResource;\n\nclass ListWarehouses extends ListRecords\n{\n    protected static string $resource = WarehouseResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n",
                "conflictFileName": "POPenSZ8HopQWMXNR4GBPIPeO6wLTlW9.json"
            },
            "item_95": {
                "path": "app/Filament/Resources/Panel/WarehouseResource/RelationManagers",
                "name": "ItemsRelationManager.php",
                "fullPath": "app/Filament/Resources/Panel/WarehouseResource/RelationManagers/ItemsRelationManager.php",
                "template": "crud/views/filament/RelationManager.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 95,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-29 23:54:20",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\WarehouseResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\WarehouseResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'items';\n\n    protected static ?string $recordTitleAttribute = 'name';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                TextInput::make('name')\n                    ->required()\n                    ->string()\n                    ->autofocus(),\n\n                Select::make('status')\n                    ->required()\n                    ->searchable()\n                    ->preload()\n                    ->native(false)\n                    ->options([\n                        'in_where_house' => 'In where house',\n                        'asset' => 'Asset',\n                        'in_maintenance' => 'In maintenance',\n                        'damaged' => 'Damaged',\n                    ]),\n\n                Select::make('user_id')\n                    ->required()\n                    ->relationship('user', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('user.name'),\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n",
                "conflictFileName": "jmdRGUDClL8RMbhak0S5sONalHxxKh5x.json"
            },
            "item_96": {
                "path": "app/Filament/Resources/Panel/WarehouseResource/RelationManagers",
                "name": "UsersRelationManager.php",
                "fullPath": "app/Filament/Resources/Panel/WarehouseResource/RelationManagers/UsersRelationManager.php",
                "template": "crud/views/filament/RelationManager.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "ignored",
                "ignoreConflicts": false,
                "id": 96,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-29 23:54:24",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\WarehouseResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\WarehouseResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass UsersRelationManager extends RelationManager\n{\n    protected static string $relationship = 'users';\n\n    protected static ?string $recordTitleAttribute = 'name';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([Grid::make(['default' => 1])->schema([])]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([])\n            ->filters([])\n            ->headerActions([\n                Tables\\Actions\\AttachAction::make()->form(\n                    fn(Tables\\Actions\\AttachAction $action): array => [\n                        $action->getRecordSelect(),\n                    ]\n                ),\n            ])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n                Tables\\Actions\\DetachAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\DetachBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n",
                "conflictFileName": "1NQlfHXTruLz02KzC1LKkymT4HZpIqox.json"
            },
            "item_97": {
                "path": "app/Filament/Resources/Panel",
                "name": "ItemResource.php",
                "fullPath": "app/Filament/Resources/Panel/ItemResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 97,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Item;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\ItemResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ItemResource\\RelationManagers;\n\nclass ItemResource extends Resource\n{\n    protected static ?string $model = Item::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.items.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.items.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.items.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            'in_where_house' => 'In where house',\n                            'asset' => 'Asset',\n                            'in_maintenance' => 'In maintenance',\n                            'damaged' => 'Damaged',\n                        ]),\n\n                    Select::make('user_id')\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('warehouse_id')\n                        ->required()\n                        ->relationship('warehouse', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('warehouse.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [RelationManagers\\MaintenanceItemsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListItems::route('/'),\n            'create' => Pages\\CreateItem::route('/create'),\n            'view' => Pages\\ViewItem::route('/{record}'),\n            'edit' => Pages\\EditItem::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "RipqjytSQBooHdmqU6guiB9L89H9xOWX.json"
            },
            "item_98": {
                "path": "app/Filament/Resources/Panel/ItemResource/Pages",
                "name": "CreateItem.php",
                "fullPath": "app/Filament/Resources/Panel/ItemResource/Pages/CreateItem.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 98,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ItemResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\ItemResource;\n\nclass CreateItem extends CreateRecord\n{\n    protected static string $resource = ItemResource::class;\n}\n"
            },
            "item_99": {
                "path": "app/Filament/Resources/Panel/ItemResource/Pages",
                "name": "ViewItem.php",
                "fullPath": "app/Filament/Resources/Panel/ItemResource/Pages/ViewItem.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 99,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ItemResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\ItemResource;\n\nclass ViewItem extends ViewRecord\n{\n    protected static string $resource = ItemResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_100": {
                "path": "app/Filament/Resources/Panel/ItemResource/Pages",
                "name": "EditItem.php",
                "fullPath": "app/Filament/Resources/Panel/ItemResource/Pages/EditItem.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 100,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ItemResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\ItemResource;\n\nclass EditItem extends EditRecord\n{\n    protected static string $resource = ItemResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_101": {
                "path": "app/Filament/Resources/Panel/ItemResource/Pages",
                "name": "ListItems.php",
                "fullPath": "app/Filament/Resources/Panel/ItemResource/Pages/ListItems.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 101,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ItemResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\ItemResource;\n\nclass ListItems extends ListRecords\n{\n    protected static string $resource = ItemResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n",
                "conflictFileName": "Efz9PZ1HtXaKLfIJMmcxnu6PCW8XmmbB.json"
            },
            "item_102": {
                "path": "app/Filament/Resources/Panel/ItemResource/RelationManagers",
                "name": "MaintenanceItemsRelationManager.php",
                "fullPath": "app/Filament/Resources/Panel/ItemResource/RelationManagers/MaintenanceItemsRelationManager.php",
                "template": "crud/views/filament/RelationManager.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 102,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ItemResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\ItemResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass MaintenanceItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'maintenanceItems';\n\n    protected static ?string $recordTitleAttribute = 'status';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                TextInput::make('status')\n                    ->required()\n                    ->string()\n                    ->autofocus(),\n\n                RichEditor::make('note')\n                    ->required()\n                    ->string()\n                    ->fileAttachmentsVisibility('public'),\n\n                Select::make('maintenance_department_id')\n                    ->required()\n                    ->relationship('maintenanceDepartment', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('status'),\n\n                TextColumn::make('note')->limit(255),\n\n                TextColumn::make('maintenanceDepartment.name'),\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
            },
            "item_103": {
                "path": "app/Filament/Resources/Panel",
                "name": "AssetResource.php",
                "fullPath": "app/Filament/Resources/Panel/AssetResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "error",
                "ignoreConflicts": false,
                "id": 103,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:35",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Asset;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\AssetResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\AssetResource\\RelationManagers;\n\nclass AssetResource extends Resource\n{\n    protected static ?string $model = Asset::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.assets.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.assets.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.assets.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            'in_where_house' => 'In where house',\n                            'asset' => 'Asset',\n                            'in_maintenance' => 'In maintenance',\n                            'damaged' => 'Damaged',\n                        ]),\n\n                    Select::make('user_id')\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('warehouse_id')\n                        ->required()\n                        ->relationship('warehouse', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('warehouse.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [RelationManagers\\MaintenanceItemsRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListAssets::route('/'),\n            'create' => Pages\\CreateAsset::route('/create'),\n            'view' => Pages\\ViewAsset::route('/{record}'),\n            'edit' => Pages\\EditAsset::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "Ab9YTD3z2s8CQ1wefXGfGvYR1WvMTz8v.json",
                "error": "Cannot read properties of null (reading 'relatedModel')",
                "errorStack": "TypeError: Cannot read properties of null (reading 'relatedModel')\n    at Object.eval (eval at compileAsync (file:///C:/Users/Owner/AppData/Local/Programs/Vemto/resources/app.asar/renderer/assets/index.4d481dca.js:304:649), <anonymous>:698:38)\n    at Mae.compileAsync (file:///C:/Users/Owner/AppData/Local/Programs/Vemto/resources/app.asar/renderer/assets/index.4d481dca.js:304:675)\n    at Mae.compileAsyncWithErrorTreatment (file:///C:/Users/Owner/AppData/Local/Programs/Vemto/resources/app.asar/renderer/assets/index.4d481dca.js:304:290)\n    at jy.compile (file:///C:/Users/Owner/AppData/Local/Programs/Vemto/resources/app.asar/renderer/assets/index.4d481dca.js:350:14378)\n    at jy.compileWithImports (file:///C:/Users/Owner/AppData/Local/Programs/Vemto/resources/app.asar/renderer/assets/index.4d481dca.js:350:13975)\n    at async Nbe.compile (file:///C:/Users/Owner/AppData/Local/Programs/Vemto/resources/app.asar/renderer/assets/index.4d481dca.js:352:4645)\n    at async Nbe.render (file:///C:/Users/Owner/AppData/Local/Programs/Vemto/resources/app.asar/renderer/assets/index.4d481dca.js:352:2689)\n    at async aWe.start (file:///C:/Users/Owner/AppData/Local/Programs/Vemto/resources/app.asar/renderer/assets/index.4d481dca.js:374:14811)\n    at async f_.runGeneratorsServices (file:///C:/Users/Owner/AppData/Local/Programs/Vemto/resources/app.asar/renderer/assets/index.4d481dca.js:377:2055)\n    at async f_.runGeneration (file:///C:/Users/Owner/AppData/Local/Programs/Vemto/resources/app.asar/renderer/assets/index.4d481dca.js:377:978)",
                "hasTemplateError": true,
                "templateErrorLine": 582
            },
            "item_104": {
                "path": "app/Filament/Resources/Panel/AssetResource/Pages",
                "name": "CreateAsset.php",
                "fullPath": "app/Filament/Resources/Panel/AssetResource/Pages/CreateAsset.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 104,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\AssetResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\AssetResource;\n\nclass CreateAsset extends CreateRecord\n{\n    protected static string $resource = AssetResource::class;\n}\n"
            },
            "item_105": {
                "path": "app/Filament/Resources/Panel/AssetResource/Pages",
                "name": "ViewAsset.php",
                "fullPath": "app/Filament/Resources/Panel/AssetResource/Pages/ViewAsset.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 105,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\AssetResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\AssetResource;\n\nclass ViewAsset extends ViewRecord\n{\n    protected static string $resource = AssetResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_106": {
                "path": "app/Filament/Resources/Panel/AssetResource/Pages",
                "name": "EditAsset.php",
                "fullPath": "app/Filament/Resources/Panel/AssetResource/Pages/EditAsset.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 106,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\AssetResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\AssetResource;\n\nclass EditAsset extends EditRecord\n{\n    protected static string $resource = AssetResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_107": {
                "path": "app/Filament/Resources/Panel/AssetResource/Pages",
                "name": "ListAssets.php",
                "fullPath": "app/Filament/Resources/Panel/AssetResource/Pages/ListAssets.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 107,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\AssetResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\AssetResource;\n\nclass ListAssets extends ListRecords\n{\n    protected static string $resource = AssetResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n",
                "conflictFileName": "TH4S4OJKjqVFRkUEBjmIax4dNT0qXK0U.json"
            },
            "item_108": {
                "path": "app/Filament/Resources/Panel/AssetResource/RelationManagers",
                "name": "MaintenanceItemsRelationManager.php",
                "fullPath": "app/Filament/Resources/Panel/AssetResource/RelationManagers/MaintenanceItemsRelationManager.php",
                "template": "crud/views/filament/RelationManager.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "removed",
                "ignoreConflicts": false,
                "id": 108,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\AssetResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\AssetResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass MaintenanceItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'maintenanceItems';\n\n    protected static ?string $recordTitleAttribute = 'status';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                TextInput::make('status')\n                    ->required()\n                    ->string()\n                    ->autofocus(),\n\n                RichEditor::make('note')\n                    ->required()\n                    ->string()\n                    ->fileAttachmentsVisibility('public'),\n\n                Select::make('item_id')\n                    ->required()\n                    ->relationship('item', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n\n                Select::make('maintenance_department_id')\n                    ->required()\n                    ->relationship('maintenanceDepartment', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('status'),\n\n                TextColumn::make('note')->limit(255),\n\n                TextColumn::make('item.name'),\n\n                TextColumn::make('maintenanceDepartment.name'),\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
            },
            "item_109": {
                "path": "app/Filament/Resources/Panel",
                "name": "MaintenanceDepartmentResource.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceDepartmentResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 109,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse App\\Models\\MaintenanceDepartment;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource\\RelationManagers;\n\nclass MaintenanceDepartmentResource extends Resource\n{\n    protected static ?string $model = MaintenanceDepartment::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.maintenanceDepartments.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.maintenanceDepartments.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.maintenanceDepartments.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    TextInput::make('location')\n                        ->required()\n                        ->string(),\n\n                    Select::make('type')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            'internal' => 'Internal',\n                            'external' => 'External',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('location'),\n\n                TextColumn::make('type'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            RelationManagers\\MaintenanceItemsRelationManager::class,\n            RelationManagers\\UsersRelationManager::class,\n        ];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListMaintenanceDepartments::route('/'),\n            'create' => Pages\\CreateMaintenanceDepartment::route('/create'),\n            'view' => Pages\\ViewMaintenanceDepartment::route('/{record}'),\n            'edit' => Pages\\EditMaintenanceDepartment::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "yLqmYsnixh9S8CVYXPhi8pX4q1vIXvXw.json"
            },
            "item_110": {
                "path": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages",
                "name": "CreateMaintenanceDepartment.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages/CreateMaintenanceDepartment.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 110,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource;\n\nclass CreateMaintenanceDepartment extends CreateRecord\n{\n    protected static string $resource = MaintenanceDepartmentResource::class;\n}\n"
            },
            "item_111": {
                "path": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages",
                "name": "ViewMaintenanceDepartment.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages/ViewMaintenanceDepartment.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 111,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource;\n\nclass ViewMaintenanceDepartment extends ViewRecord\n{\n    protected static string $resource = MaintenanceDepartmentResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_112": {
                "path": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages",
                "name": "EditMaintenanceDepartment.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages/EditMaintenanceDepartment.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 112,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource;\n\nclass EditMaintenanceDepartment extends EditRecord\n{\n    protected static string $resource = MaintenanceDepartmentResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_113": {
                "path": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages",
                "name": "ListMaintenanceDepartments.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/Pages/ListMaintenanceDepartments.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 113,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource;\n\nclass ListMaintenanceDepartments extends ListRecords\n{\n    protected static string $resource = MaintenanceDepartmentResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n",
                "conflictFileName": "p4D3AI7fLf83DVqpZI1YCBYH2c7sfvev.json"
            },
            "item_114": {
                "path": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/RelationManagers",
                "name": "MaintenanceItemsRelationManager.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/RelationManagers/MaintenanceItemsRelationManager.php",
                "template": "crud/views/filament/RelationManager.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 114,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\nuse App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource;\n\nclass MaintenanceItemsRelationManager extends RelationManager\n{\n    protected static string $relationship = 'maintenanceItems';\n\n    protected static ?string $recordTitleAttribute = 'status';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                TextInput::make('status')\n                    ->required()\n                    ->string()\n                    ->autofocus(),\n\n                RichEditor::make('note')\n                    ->required()\n                    ->string()\n                    ->fileAttachmentsVisibility('public'),\n\n                Select::make('item_id')\n                    ->required()\n                    ->relationship('item', 'name')\n                    ->searchable()\n                    ->preload()\n                    ->native(false),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                TextColumn::make('status'),\n\n                TextColumn::make('note')->limit(255),\n\n                TextColumn::make('item.name'),\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
            },
            "item_115": {
                "path": "app/Filament/Resources/Panel",
                "name": "MaintenanceItemResource.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceItemResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 115,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\MaintenanceItem;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\RichEditor;\nuse App\\Filament\\Resources\\Panel\\MaintenanceItemResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\MaintenanceItemResource\\RelationManagers;\n\nclass MaintenanceItemResource extends Resource\n{\n    protected static ?string $model = MaintenanceItem::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.maintenanceItems.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.maintenanceItems.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.maintenanceItems.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('status')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    RichEditor::make('note')\n                        ->required()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n\n                    Select::make('item_id')\n                        ->required()\n                        ->relationship('item', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('maintenance_department_id')\n                        ->required()\n                        ->relationship('maintenanceDepartment', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('status'),\n\n                TextColumn::make('note')->limit(255),\n\n                TextColumn::make('item.name'),\n\n                TextColumn::make('maintenanceDepartment.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListMaintenanceItems::route('/'),\n            'create' => Pages\\CreateMaintenanceItem::route('/create'),\n            'view' => Pages\\ViewMaintenanceItem::route('/{record}'),\n            'edit' => Pages\\EditMaintenanceItem::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "0IkpkReK1Bp15WRmBrvIjuP6TvZAo7Br.json"
            },
            "item_116": {
                "path": "app/Filament/Resources/Panel/MaintenanceItemResource/Pages",
                "name": "CreateMaintenanceItem.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceItemResource/Pages/CreateMaintenanceItem.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 116,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\MaintenanceItemResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\MaintenanceItemResource;\n\nclass CreateMaintenanceItem extends CreateRecord\n{\n    protected static string $resource = MaintenanceItemResource::class;\n}\n"
            },
            "item_117": {
                "path": "app/Filament/Resources/Panel/MaintenanceItemResource/Pages",
                "name": "ViewMaintenanceItem.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceItemResource/Pages/ViewMaintenanceItem.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 117,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\MaintenanceItemResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\MaintenanceItemResource;\n\nclass ViewMaintenanceItem extends ViewRecord\n{\n    protected static string $resource = MaintenanceItemResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_118": {
                "path": "app/Filament/Resources/Panel/MaintenanceItemResource/Pages",
                "name": "EditMaintenanceItem.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceItemResource/Pages/EditMaintenanceItem.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 118,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\MaintenanceItemResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\MaintenanceItemResource;\n\nclass EditMaintenanceItem extends EditRecord\n{\n    protected static string $resource = MaintenanceItemResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_119": {
                "path": "app/Filament/Resources/Panel/MaintenanceItemResource/Pages",
                "name": "ListMaintenanceItems.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceItemResource/Pages/ListMaintenanceItems.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 119,
                "createdAt": "2025-01-29 21:27:20",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\MaintenanceItemResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\MaintenanceItemResource;\n\nclass ListMaintenanceItems extends ListRecords\n{\n    protected static string $resource = MaintenanceItemResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_120": {
                "path": "database/factories",
                "name": "DamagedFactory.php",
                "fullPath": "database/factories/DamagedFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 120,
                "createdAt": "2025-01-29 23:45:58",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Damaged;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass DamagedFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Damaged::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'status' => fake()->word(),\n            'barcode' => fake()->text(255),\n            'barcode_image' => fake()->text(255),\n            'user_id' => \\App\\Models\\User::factory(),\n            'warehouse_id' => \\App\\Models\\Warehouse::factory(),\n        ];\n    }\n}\n"
            },
            "item_121": {
                "path": "database/seeders",
                "name": "DamagedSeeder.php",
                "fullPath": "database/seeders/DamagedSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 121,
                "createdAt": "2025-01-29 23:45:58",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Damaged;\nuse Illuminate\\Database\\Seeder;\n\nclass DamagedSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Damaged::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_122": {
                "path": "app/Policies",
                "name": "DamagedPolicy.php",
                "fullPath": "app/Policies/DamagedPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 122,
                "createdAt": "2025-01-29 23:45:58",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Damaged;\n\nclass DamagedPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Damaged $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Damaged $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Damaged $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Damaged $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Damaged $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "s1rpBaq6Axg1fLMAxq8JqtEKPXXiPUzB.json"
            },
            "item_123": {
                "path": "app/Filament/Resources/Panel",
                "name": "DamagedResource.php",
                "fullPath": "app/Filament/Resources/Panel/DamagedResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 123,
                "createdAt": "2025-01-29 23:45:58",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse App\\Models\\Damaged;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\DamagedResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\DamagedResource\\RelationManagers;\n\nclass DamagedResource extends Resource\n{\n    protected static ?string $model = Damaged::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.damageds.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.damageds.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.damageds.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            'in_where_house' => 'In where house',\n                            'asset' => 'Asset',\n                            'in_maintenance' => 'In maintenance',\n                            'damaged' => 'Damaged',\n                        ]),\n\n                    Select::make('warehouse_id')\n                        ->required()\n                        ->relationship('warehouse', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('user_id')\n                        ->nullable()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('barcode')\n                        ->nullable()\n                        ->string(),\n\n                    TextInput::make('barcode_image')\n                        ->nullable()\n                        ->string(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('warehouse.name'),\n\n                TextColumn::make('user.name'),\n\n                TextColumn::make('barcode'),\n\n                TextColumn::make('barcode_image'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListDamageds::route('/'),\n            'create' => Pages\\CreateDamaged::route('/create'),\n            'view' => Pages\\ViewDamaged::route('/{record}'),\n            'edit' => Pages\\EditDamaged::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "Jfct3WAhGiXgfKWxtz4zxV07DhVti21w.json"
            },
            "item_124": {
                "path": "app/Filament/Resources/Panel/DamagedResource/Pages",
                "name": "CreateDamaged.php",
                "fullPath": "app/Filament/Resources/Panel/DamagedResource/Pages/CreateDamaged.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 124,
                "createdAt": "2025-01-29 23:45:58",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\DamagedResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\DamagedResource;\n\nclass CreateDamaged extends CreateRecord\n{\n    protected static string $resource = DamagedResource::class;\n}\n"
            },
            "item_125": {
                "path": "app/Filament/Resources/Panel/DamagedResource/Pages",
                "name": "ViewDamaged.php",
                "fullPath": "app/Filament/Resources/Panel/DamagedResource/Pages/ViewDamaged.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 125,
                "createdAt": "2025-01-29 23:45:58",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\DamagedResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\DamagedResource;\n\nclass ViewDamaged extends ViewRecord\n{\n    protected static string $resource = DamagedResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_126": {
                "path": "app/Filament/Resources/Panel/DamagedResource/Pages",
                "name": "EditDamaged.php",
                "fullPath": "app/Filament/Resources/Panel/DamagedResource/Pages/EditDamaged.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 126,
                "createdAt": "2025-01-29 23:45:58",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\DamagedResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\DamagedResource;\n\nclass EditDamaged extends EditRecord\n{\n    protected static string $resource = DamagedResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_127": {
                "path": "app/Filament/Resources/Panel/DamagedResource/Pages",
                "name": "ListDamageds.php",
                "fullPath": "app/Filament/Resources/Panel/DamagedResource/Pages/ListDamageds.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 127,
                "createdAt": "2025-01-29 23:45:58",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\DamagedResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\DamagedResource;\n\nclass ListDamageds extends ListRecords\n{\n    protected static string $resource = DamagedResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_128": {
                "path": "app/Filament/Resources/Panel",
                "name": "EmployeeResource.php",
                "fullPath": "app/Filament/Resources/Panel/EmployeeResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 128,
                "createdAt": "2025-01-29 23:55:37",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\User;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\EmployeeResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\EmployeeResource\\RelationManagers;\n\nclass EmployeeResource extends Resource\n{\n    protected static ?string $model = User::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.users.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.users.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.users.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    TextInput::make('email')\n                        ->required()\n                        ->string()\n                        ->unique('users', 'email', ignoreRecord: true)\n                        ->email(),\n\n                    TextInput::make('password')\n                        ->required(\n                            fn(string $context): bool => $context === 'create'\n                        )\n                        ->dehydrated(fn($state) => filled($state))\n                        ->string()\n                        ->minLength(6)\n                        ->password(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([TextColumn::make('name'), TextColumn::make('email')])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListEmployees::route('/'),\n            'create' => Pages\\CreateEmployee::route('/create'),\n            'view' => Pages\\ViewEmployee::route('/{record}'),\n            'edit' => Pages\\EditEmployee::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "sEGooYeKBUpR2RvBg74ZgDs4A4FRMBqU.json"
            },
            "item_129": {
                "path": "app/Filament/Resources/Panel/EmployeeResource/Pages",
                "name": "CreateEmployee.php",
                "fullPath": "app/Filament/Resources/Panel/EmployeeResource/Pages/CreateEmployee.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 129,
                "createdAt": "2025-01-29 23:55:37",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\EmployeeResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\EmployeeResource;\n\nclass CreateEmployee extends CreateRecord\n{\n    protected static string $resource = EmployeeResource::class;\n}\n"
            },
            "item_130": {
                "path": "app/Filament/Resources/Panel/EmployeeResource/Pages",
                "name": "ViewEmployee.php",
                "fullPath": "app/Filament/Resources/Panel/EmployeeResource/Pages/ViewEmployee.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 130,
                "createdAt": "2025-01-29 23:55:37",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\EmployeeResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\EmployeeResource;\n\nclass ViewEmployee extends ViewRecord\n{\n    protected static string $resource = EmployeeResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_131": {
                "path": "app/Filament/Resources/Panel/EmployeeResource/Pages",
                "name": "EditEmployee.php",
                "fullPath": "app/Filament/Resources/Panel/EmployeeResource/Pages/EditEmployee.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 131,
                "createdAt": "2025-01-29 23:55:37",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\EmployeeResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\EmployeeResource;\n\nclass EditEmployee extends EditRecord\n{\n    protected static string $resource = EmployeeResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_132": {
                "path": "app/Filament/Resources/Panel/EmployeeResource/Pages",
                "name": "ListEmployees.php",
                "fullPath": "app/Filament/Resources/Panel/EmployeeResource/Pages/ListEmployees.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 132,
                "createdAt": "2025-01-29 23:55:37",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\EmployeeResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\EmployeeResource;\n\nclass ListEmployees extends ListRecords\n{\n    protected static string $resource = EmployeeResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_133": {
                "path": "resources/views/livewire/dashboard/suppliers",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/suppliers/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 133,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.suppliers.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.suppliers.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Supplier::class)\n        <a wire:navigate href=\"{{ route('dashboard.suppliers.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingSupplier }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.suppliers.inputs.name.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('phone')\"\n                    >{{ __('crud.suppliers.inputs.phone.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('location')\"\n                    >{{ __('crud.suppliers.inputs.location.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($suppliers as $supplier)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $supplier->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $supplier->phone }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $supplier->location }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $supplier)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.suppliers.edit', $supplier) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $supplier)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $supplier->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"4\"\n                        >No {{ __('crud.suppliers.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $suppliers->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_134": {
                "path": "app/Livewire/Dashboard",
                "name": "SupplierIndex.php",
                "fullPath": "app/Livewire/Dashboard/SupplierIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 134,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Supplier;\nuse Livewire\\WithPagination;\n\nclass SupplierIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingSupplier;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingSupplier = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Supplier $supplier)\n    {\n        $supplier->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Supplier::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.suppliers.index', [\n            'suppliers' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_135": {
                "path": "resources/views/livewire/dashboard/suppliers",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/suppliers/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 135,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.suppliers.index') }}\"\n            >{{ __('crud.suppliers.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.suppliers.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.suppliers.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.suppliers.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.suppliers.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"phone\"\n                        >{{ __('crud.suppliers.inputs.phone.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.phone\"\n                        name=\"phone\"\n                        id=\"phone\"\n                        placeholder=\"{{ __('crud.suppliers.inputs.phone.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.phone\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"location\"\n                        >{{ __('crud.suppliers.inputs.location.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.location\"\n                        name=\"location\"\n                        id=\"location\"\n                        placeholder=\"{{ __('crud.suppliers.inputs.location.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.location\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_136": {
                "path": "app/Livewire/Dashboard",
                "name": "SupplierCreate.php",
                "fullPath": "app/Livewire/Dashboard/SupplierCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 136,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Suppliers\\Forms\\CreateForm;\n\nclass SupplierCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n\n    public function mount()\n    {\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Supplier::class);\n\n        $this->validate();\n\n        $supplier = $this->form->save();\n\n        return redirect()->route('dashboard.suppliers.edit', $supplier);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.suppliers.create', []);\n    }\n}\n"
            },
            "item_137": {
                "path": "resources/views/livewire/dashboard/suppliers",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/suppliers/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 137,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.suppliers.index') }}\"\n            >{{ __('crud.suppliers.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.suppliers.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Supplier saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.suppliers.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.suppliers.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.suppliers.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"phone\"\n                        >{{ __('crud.suppliers.inputs.phone.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.phone\"\n                        name=\"phone\"\n                        id=\"phone\"\n                        placeholder=\"{{ __('crud.suppliers.inputs.phone.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.phone\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"location\"\n                        >{{ __('crud.suppliers.inputs.location.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.location\"\n                        name=\"location\"\n                        id=\"location\"\n                        placeholder=\"{{ __('crud.suppliers.inputs.location.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.location\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    @can('view-any', App\\Models\\Order::class)\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <div class=\"w-full mb-0\">\n            <div class=\"p-6 space-y-3\">\n                <div\n                    class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\"\n                >\n                    <h2>{{ __('crud.orders.collectionTitle') }}</h2>\n                </div>\n\n                <livewire:dashboard.supplier-orders-detail\n                    :supplier=\"$supplier\"\n                />\n            </div>\n        </div>\n    </div>\n    @endcan\n</div>\n"
            },
            "item_138": {
                "path": "app/Livewire/Dashboard",
                "name": "SupplierEdit.php",
                "fullPath": "app/Livewire/Dashboard/SupplierEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 138,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Supplier;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Suppliers\\Forms\\UpdateForm;\n\nclass SupplierEdit extends Component\n{\n    public ?Supplier $supplier = null;\n\n    public UpdateForm $form;\n\n    public function mount(Supplier $supplier)\n    {\n        $this->authorize('view-any', Supplier::class);\n\n        $this->supplier = $supplier;\n\n        $this->form->setSupplier($supplier);\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->supplier);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.suppliers.edit', []);\n    }\n}\n"
            },
            "item_139": {
                "path": "app/Livewire/Dashboard/Suppliers/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Suppliers/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 139,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Suppliers\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Supplier;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required|string')]\n    public $name = '';\n\n    #[Rule('required|string')]\n    public $phone = '';\n\n    #[Rule('required|string')]\n    public $location = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $supplier = Supplier::create($this->except([]));\n\n        $this->reset();\n\n        return $supplier;\n    }\n}\n"
            },
            "item_140": {
                "path": "app/Livewire/Dashboard/Suppliers/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Suppliers/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 140,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Suppliers\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Supplier;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Supplier $supplier;\n\n    public $name = '';\n\n    public $phone = '';\n\n    public $location = '';\n\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'string'],\n            'phone' => ['required', 'string'],\n            'location' => ['required', 'string'],\n        ];\n    }\n\n    public function setSupplier(Supplier $supplier)\n    {\n        $this->supplier = $supplier;\n\n        $this->name = $supplier->name;\n        $this->phone = $supplier->phone;\n        $this->location = $supplier->location;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->supplier->update($this->except(['supplier']));\n    }\n}\n"
            },
            "item_141": {
                "path": "resources/views/livewire/dashboard/suppliers",
                "name": "orders-detail.blade.php",
                "fullPath": "resources/views/livewire/dashboard/suppliers/orders-detail.blade.php",
                "template": "crud/views/livewire/HasManyDetailView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 141,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<div>\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"detailOrdersSearch\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.orders.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Order::class)\n        <a wire:click=\"newOrder()\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Modal --}}\n    <x-ui.modal wire:model=\"showingModal\">\n        <div class=\"overflow-hidden border rounded-lg bg-white\">\n            <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n                <div class=\"p-6 space-y-3\">\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"warehouse_id\"\n                            >{{ __('crud.orders.inputs.warehouse_id.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.select\n                            wire:model=\"form.warehouse_id\"\n                            name=\"warehouse_id\"\n                            id=\"warehouse_id\"\n                            class=\"w-full\"\n                        >\n                            <option value=\"\">Select data</option>\n                            @foreach ($warehouses as $value => $label)\n                            <option value=\"{{ $value }}\">{{ $label }}</option>\n                            @endforeach\n                        </x-ui.input.select>\n                        <x-ui.input.error for=\"form.warehouse_id\" />\n                    </div>\n\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"name\"\n                            >{{ __('crud.orders.inputs.name.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.text\n                            class=\"w-full\"\n                            wire:model=\"form.name\"\n                            name=\"name\"\n                            id=\"name\"\n                            placeholder=\"{{ __('crud.orders.inputs.name.placeholder') }}\"\n                        />\n                        <x-ui.input.error for=\"form.name\" />\n                    </div>\n\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"status\"\n                            >{{ __('crud.orders.inputs.status.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.text\n                            class=\"w-full\"\n                            wire:model=\"form.status\"\n                            name=\"status\"\n                            id=\"status\"\n                            placeholder=\"{{ __('crud.orders.inputs.status.placeholder') }}\"\n                        />\n                        <x-ui.input.error for=\"form.status\" />\n                    </div>\n                </div>\n\n                <div\n                    class=\"flex justify-between mt-4 border-t border-gray-50 bg-gray-50 p-4\"\n                >\n                    <div>\n                        <!-- Other buttons here -->\n                    </div>\n                    <div>\n                        <x-ui.button type=\"submit\">Save</x-ui.button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </x-ui.modal>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingOrderDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingOrderDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"deleteOrder({{ $deletingOrder }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header\n                    for-detailCrud\n                    wire:click=\"sortBy('warehouse_id')\"\n                    >{{ __('crud.orders.inputs.warehouse_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.orders.inputs.name.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('status')\"\n                    >{{ __('crud.orders.inputs.status.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($detailOrders as $order)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-detailCrud\n                        >{{ $order->warehouse_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-detailCrud\n                        >{{ $order->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-detailCrud\n                        >{{ $order->status }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $order)\n                        <x-ui.action wire:click=\"editOrder({{ $order->id }})\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $order)\n                        <x-ui.action.danger\n                            wire:click=\"confirmOrderDeletion({{ $order->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"4\"\n                        >No {{ __('crud.orders.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $detailOrders->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_142": {
                "path": "app/Livewire/Dashboard",
                "name": "SupplierOrdersDetail.php",
                "fullPath": "app/Livewire/Dashboard/SupplierOrdersDetail.php",
                "template": "crud/views/livewire/HasManyDetailComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 142,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Form;\nuse App\\Models\\Order;\nuse Livewire\\Component;\nuse App\\Models\\Supplier;\nuse App\\Models\\Warehouse;\nuse Livewire\\WithPagination;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Livewire\\Dashboard\\Orders\\Forms\\CreateDetailForm;\nuse App\\Livewire\\Dashboard\\Orders\\Forms\\UpdateDetailForm;\n\nclass SupplierOrdersDetail extends Component\n{\n    use WithFileUploads, WithPagination;\n\n    public CreateDetailForm|UpdateDetailForm $form;\n\n    public ?Order $order;\n    public Supplier $supplier;\n\n    public Collection $warehouses;\n\n    public $showingModal = false;\n\n    public $detailOrdersSearch = '';\n    public $detailOrdersSortField = 'updated_at';\n    public $detailOrdersSortDirection = 'desc';\n\n    public $queryString = [\n        'detailOrdersSearch',\n        'detailOrdersSortField',\n        'detailOrdersSortDirection',\n    ];\n\n    public $confirmingOrderDeletion = false;\n    public string $deletingOrder;\n\n    public function mount()\n    {\n        $this->form = new CreateDetailForm($this, 'form');\n\n        $this->warehouses = Warehouse::pluck('name', 'id');\n    }\n\n    public function newOrder()\n    {\n        $this->form = new CreateDetailForm($this, 'form');\n        $this->order = null;\n\n        $this->showModal();\n    }\n\n    public function editOrder(Order $order)\n    {\n        $this->form = new UpdateDetailForm($this, 'form');\n        $this->form->setOrder($order);\n        $this->order = $order;\n\n        $this->showModal();\n    }\n\n    public function showModal()\n    {\n        $this->showingModal = true;\n    }\n\n    public function closeModal()\n    {\n        $this->showingModal = false;\n    }\n\n    public function confirmOrderDeletion(string $id)\n    {\n        $this->deletingOrder = $id;\n\n        $this->confirmingOrderDeletion = true;\n    }\n\n    public function deleteOrder(Order $order)\n    {\n        $this->authorize('delete', $order);\n\n        $order->delete();\n\n        $this->confirmingOrderDeletion = false;\n    }\n\n    public function save()\n    {\n        if (empty($this->order)) {\n            $this->authorize('create', Order::class);\n        } else {\n            $this->authorize('update', $this->order);\n        }\n\n        $this->form->supplier_id = $this->supplier->id;\n        $this->form->save();\n\n        $this->closeModal();\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->detailOrdersSortField === $field) {\n            $this->detailOrdersSortDirection =\n                $this->detailOrdersSortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->detailOrdersSortDirection = 'asc';\n        }\n\n        $this->detailOrdersSortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return $this->supplier\n            ->orders()\n            ->orderBy(\n                $this->detailOrdersSortField,\n                $this->detailOrdersSortDirection\n            )\n            ->where('name', 'like', \"%{$this->detailOrdersSearch}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.suppliers.orders-detail', [\n            'detailOrders' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_143": {
                "path": "app/Livewire/Dashboard/Orders/Forms",
                "name": "CreateDetailForm.php",
                "fullPath": "app/Livewire/Dashboard/Orders/Forms/CreateDetailForm.php",
                "template": "crud/views/livewire/CreateDetailFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 143,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Orders\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Order;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateDetailForm extends Form\n{\n    public $supplier_id = null;\n\n    #[Rule('required')]\n    public $warehouse_id = '';\n\n    #[Rule('required|string')]\n    public $name = '';\n\n    #[Rule('required|string')]\n    public $status = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $order = Order::create($this->except([]));\n\n        $this->reset();\n\n        return $order;\n    }\n}\n"
            },
            "item_144": {
                "path": "app/Livewire/Dashboard/Orders/Forms",
                "name": "UpdateDetailForm.php",
                "fullPath": "app/Livewire/Dashboard/Orders/Forms/UpdateDetailForm.php",
                "template": "crud/views/livewire/UpdateDetailFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 144,
                "createdAt": "2025-01-30 02:44:33",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Orders\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Order;\nuse Livewire\\Attributes\\Rule;\n\nclass UpdateDetailForm extends Form\n{\n    public ?Order $order;\n\n    public $warehouse_id = '';\n\n    public $name = '';\n\n    public $status = '';\n\n    public function rules(): array\n    {\n        return [\n            'warehouse_id' => ['required'],\n            'name' => ['required', 'string'],\n            'status' => ['required', 'string'],\n        ];\n    }\n\n    public function setOrder(Order $order)\n    {\n        $this->order = $order;\n\n        $this->warehouse_id = $order->warehouse_id;\n        $this->name = $order->name;\n        $this->status = $order->status;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->order->update($this->except(['order', 'warehouse_id']));\n    }\n}\n"
            },
            "item_145": {
                "path": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/RelationManagers",
                "name": "UsersRelationManager.php",
                "fullPath": "app/Filament/Resources/Panel/MaintenanceDepartmentResource/RelationManagers/UsersRelationManager.php",
                "template": "crud/views/filament/RelationManager.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 145,
                "createdAt": "2025-01-30 11:45:34",
                "updatedAt": "2025-01-30 11:45:36",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\nuse App\\Filament\\Resources\\Panel\\MaintenanceDepartmentResource;\n\nclass UsersRelationManager extends RelationManager\n{\n    protected static string $relationship = 'users';\n\n    protected static ?string $recordTitleAttribute = 'name';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                TextInput::make('name')\n                    ->required()\n                    ->string()\n                    ->autofocus(),\n\n                TextInput::make('email')\n                    ->required()\n                    ->string()\n                    ->unique('users', 'email', ignoreRecord: true)\n                    ->email(),\n\n                TextInput::make('password')\n                    ->required(\n                        fn(string $context): bool => $context === 'create'\n                    )\n                    ->dehydrated(fn($state) => filled($state))\n                    ->string()\n                    ->minLength(6)\n                    ->password(),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([TextColumn::make('name'), TextColumn::make('email')])\n            ->filters([])\n            ->headerActions([\n                Tables\\Actions\\CreateAction::make(),\n\n                Tables\\Actions\\AttachAction::make()->form(\n                    fn(Tables\\Actions\\AttachAction $action): array => [\n                        $action->getRecordSelect(),\n                    ]\n                ),\n            ])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n                Tables\\Actions\\DetachAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\DetachBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
            }
        },
        "cruds": {
            "item_1": {
                "type": "Filament",
                "name": "Supplier",
                "plural": "Suppliers",
                "sectionId": 4,
                "modelId": 25,
                "tableId": 21,
                "projectId": 1,
                "basePath": "Suppliers",
                "settings": {
                    "itemName": "supplier",
                    "collectionName": "suppliers",
                    "itemTitle": "crud.suppliers.itemTitle",
                    "collectionTitle": "crud.suppliers.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Suppliers\\Forms",
                "livewireIndexComponentName": "SupplierIndex",
                "livewireShowComponentName": "SupplierShow",
                "livewireCreateComponentName": "SupplierCreate",
                "livewireEditComponentName": "SupplierEdit",
                "defaultSearchColumnId": 123,
                "defaultSortColumnId": 122,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.suppliers.itemTitle",
                    "pluralModelLabel": "crud.suppliers.collectionTitle",
                    "navigationLabel": "crud.suppliers.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 1,
                "createdAt": "2025-01-29 21:13:54",
                "updatedAt": "2025-01-29 21:13:54"
            },
            "__tableData": {
                "count": 19,
                "lastPrimaryKey": 19,
                "index": {
                    "1": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                1
                            ],
                            "inputs.crudId": [
                                1,
                                2,
                                3
                            ],
                            "has_many_details.crudId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                2
                            ],
                            "inputs.crudId": [
                                4,
                                5,
                                6
                            ],
                            "has_many_details.detailCrudId": [
                                1
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                3
                            ],
                            "inputs.crudId": [
                                7,
                                8,
                                9,
                                10
                            ],
                            "has_many_details.crudId": [
                                2
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                4
                            ],
                            "inputs.crudId": [
                                11,
                                13
                            ],
                            "has_many_details.detailCrudId": [
                                2
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                5
                            ],
                            "inputs.crudId": [
                                14,
                                15
                            ],
                            "has_many_details.crudId": [
                                3
                            ],
                            "belongs_to_many_details.crudId": [
                                1
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                6
                            ],
                            "inputs.crudId": [
                                16,
                                17,
                                18
                            ],
                            "has_many_details.detailCrudId": [
                                3
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                7
                            ],
                            "belongs_to_many_details.detailCrudId": [
                                1
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                8
                            ],
                            "inputs.crudId": [
                                19,
                                20,
                                21,
                                22
                            ],
                            "has_many_details.crudId": [
                                4
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                9
                            ],
                            "inputs.crudId": [
                                23,
                                24,
                                25
                            ],
                            "has_many_details.detailCrudId": [
                                4
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                10
                            ],
                            "inputs.crudId": [
                                26,
                                27,
                                28,
                                29
                            ],
                            "has_many_details.crudId": [
                                5
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                11
                            ],
                            "inputs.crudId": [
                                30,
                                31,
                                32,
                                33
                            ],
                            "has_many_details.detailCrudId": [
                                5
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                12
                            ],
                            "inputs.crudId": [
                                35,
                                36,
                                37
                            ],
                            "has_many_details.crudId": [
                                6
                            ],
                            "belongs_to_many_details.crudId": [
                                2
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                13
                            ],
                            "inputs.crudId": [
                                38,
                                39,
                                40
                            ],
                            "has_many_details.detailCrudId": [
                                6
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                14
                            ],
                            "inputs.crudId": [
                                42,
                                43,
                                44,
                                45
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                15
                            ],
                            "inputs.crudId": [
                                47,
                                48,
                                49,
                                50,
                                51,
                                52
                            ]
                        }
                    },
                    "16": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                16
                            ],
                            "inputs.crudId": [
                                53,
                                54,
                                55
                            ]
                        }
                    },
                    "17": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                17
                            ],
                            "inputs.crudId": [
                                56,
                                57,
                                58
                            ],
                            "has_many_details.crudId": [
                                7
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                18
                            ],
                            "inputs.crudId": [
                                59,
                                60,
                                61
                            ],
                            "has_many_details.detailCrudId": [
                                7
                            ]
                        }
                    },
                    "19": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                19
                            ],
                            "belongs_to_many_details.detailCrudId": [
                                2
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "type": "Filament",
                "name": "Order",
                "plural": "Orders",
                "sectionId": 4,
                "modelId": 18,
                "tableId": 20,
                "projectId": 1,
                "basePath": "SupplierOrdersDetail",
                "settings": {
                    "itemName": "order",
                    "collectionName": "orders",
                    "itemTitle": "crud.orders.itemTitle",
                    "collectionTitle": "crud.orders.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Orders\\Forms",
                "livewireIndexComponentName": "OrderIndex",
                "livewireShowComponentName": "OrderShow",
                "livewireCreateComponentName": "OrderCreate",
                "livewireEditComponentName": "OrderEdit",
                "defaultSearchColumnId": 128,
                "defaultSortColumnId": 119,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.orders.itemTitle",
                    "pluralModelLabel": "crud.orders.collectionTitle",
                    "navigationLabel": "crud.orders.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 2,
                "createdAt": "2025-01-29 21:14:02",
                "updatedAt": "2025-01-29 21:14:02",
                "isHasManyDetail": true
            },
            "item_3": {
                "type": "Filament",
                "name": "Order",
                "plural": "Orders",
                "sectionId": 4,
                "modelId": 18,
                "tableId": 20,
                "projectId": 1,
                "basePath": "Orders",
                "settings": {
                    "itemName": "order",
                    "collectionName": "orders",
                    "itemTitle": "crud.orders.itemTitle",
                    "collectionTitle": "crud.orders.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Orders\\Forms",
                "livewireIndexComponentName": "OrderIndex",
                "livewireShowComponentName": "OrderShow",
                "livewireCreateComponentName": "OrderCreate",
                "livewireEditComponentName": "OrderEdit",
                "defaultSearchColumnId": 128,
                "defaultSortColumnId": 119,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.orders.itemTitle",
                    "pluralModelLabel": "crud.orders.collectionTitle",
                    "navigationLabel": "crud.orders.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 3,
                "createdAt": "2025-01-29 21:14:26",
                "updatedAt": "2025-01-29 21:14:26"
            },
            "item_4": {
                "type": "Filament",
                "name": "Order Item",
                "plural": "Order Items",
                "sectionId": 4,
                "modelId": 29,
                "tableId": 22,
                "projectId": 1,
                "basePath": "OrderOrder ItemsDetail",
                "settings": {
                    "itemName": "orderItem",
                    "collectionName": "orderItems",
                    "itemTitle": "crud.orderItems.itemTitle",
                    "collectionTitle": "crud.orderItems.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\OrderItems\\Forms",
                "livewireIndexComponentName": "OrderItemIndex",
                "livewireShowComponentName": "OrderItemShow",
                "livewireCreateComponentName": "OrderItemCreate",
                "livewireEditComponentName": "OrderItemEdit",
                "defaultSearchColumnId": 136,
                "defaultSortColumnId": 135,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.orderItems.itemTitle",
                    "pluralModelLabel": "crud.orderItems.collectionTitle",
                    "navigationLabel": "crud.orderItems.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 4,
                "createdAt": "2025-01-29 21:14:37",
                "updatedAt": "2025-01-29 21:14:37",
                "isHasManyDetail": true
            },
            "item_5": {
                "type": "Filament",
                "name": "Warehouse",
                "plural": "Warehouses",
                "sectionId": 4,
                "modelId": 5,
                "tableId": 13,
                "projectId": 1,
                "basePath": "Warehouses",
                "settings": {
                    "itemName": "warehouse",
                    "collectionName": "warehouses",
                    "itemTitle": "crud.warehouses.itemTitle",
                    "collectionTitle": "crud.warehouses.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Warehouses\\Forms",
                "livewireIndexComponentName": "WarehouseIndex",
                "livewireShowComponentName": "WarehouseShow",
                "livewireCreateComponentName": "WarehouseCreate",
                "livewireEditComponentName": "WarehouseEdit",
                "defaultSearchColumnId": 84,
                "defaultSortColumnId": 83,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.warehouses.itemTitle",
                    "pluralModelLabel": "crud.warehouses.collectionTitle",
                    "navigationLabel": "crud.warehouses.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 5,
                "createdAt": "2025-01-29 21:15:12",
                "updatedAt": "2025-01-29 21:15:12"
            },
            "item_6": {
                "type": "Filament",
                "name": "Item",
                "plural": "Items",
                "sectionId": 4,
                "modelId": 6,
                "tableId": 14,
                "projectId": 1,
                "basePath": "WarehouseItemsDetail",
                "settings": {
                    "itemName": "item",
                    "collectionName": "items",
                    "itemTitle": "crud.items.itemTitle",
                    "collectionTitle": "crud.items.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Items\\Forms",
                "livewireIndexComponentName": "ItemIndex",
                "livewireShowComponentName": "ItemShow",
                "livewireCreateComponentName": "ItemCreate",
                "livewireEditComponentName": "ItemEdit",
                "defaultSearchColumnId": 89,
                "defaultSortColumnId": 88,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.items.itemTitle",
                    "pluralModelLabel": "crud.items.collectionTitle",
                    "navigationLabel": "crud.items.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 6,
                "createdAt": "2025-01-29 21:15:25",
                "updatedAt": "2025-01-29 21:15:25",
                "isHasManyDetail": true
            },
            "item_7": {
                "type": "Filament",
                "name": "User Warehouse",
                "plural": "User Warehouse",
                "sectionId": 4,
                "tableId": 15,
                "projectId": 1,
                "basePath": "WarehouseUser WarehouseDetail",
                "settings": {
                    "itemName": "userWarehouse",
                    "collectionName": "userWarehouse",
                    "itemTitle": "crud.userWarehouse.itemTitle",
                    "collectionTitle": "crud.userWarehouse.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\UserWarehouse\\Forms",
                "livewireIndexComponentName": "UserWarehouseIndex",
                "livewireShowComponentName": "UserWarehouseShow",
                "livewireCreateComponentName": "UserWarehouseCreate",
                "livewireEditComponentName": "UserWarehouseEdit",
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.userWarehouse.itemTitle",
                    "pluralModelLabel": "crud.userWarehouse.collectionTitle",
                    "navigationLabel": "crud.userWarehouse.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 7,
                "createdAt": "2025-01-29 21:16:02",
                "updatedAt": "2025-01-29 21:16:02",
                "isBelongsToManyDetail": true
            },
            "item_8": {
                "type": "Filament",
                "name": "Item",
                "plural": "Items",
                "sectionId": 4,
                "modelId": 6,
                "tableId": 14,
                "projectId": 1,
                "basePath": "Items",
                "settings": {
                    "itemName": "item",
                    "collectionName": "items",
                    "itemTitle": "crud.items.itemTitle",
                    "collectionTitle": "crud.items.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Items\\Forms",
                "livewireIndexComponentName": "ItemIndex",
                "livewireShowComponentName": "ItemShow",
                "livewireCreateComponentName": "ItemCreate",
                "livewireEditComponentName": "ItemEdit",
                "defaultSearchColumnId": 89,
                "defaultSortColumnId": 88,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.items.itemTitle",
                    "pluralModelLabel": "crud.items.collectionTitle",
                    "navigationLabel": "crud.items.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 8,
                "createdAt": "2025-01-29 21:16:30",
                "updatedAt": "2025-01-29 21:16:30"
            },
            "item_9": {
                "type": "Filament",
                "name": "Maintenance Item",
                "plural": "Maintenance Items",
                "sectionId": 4,
                "modelId": 17,
                "tableId": 19,
                "projectId": 1,
                "basePath": "ItemMaintenance ItemsDetail",
                "settings": {
                    "itemName": "maintenanceItem",
                    "collectionName": "maintenanceItems",
                    "itemTitle": "crud.maintenanceItems.itemTitle",
                    "collectionTitle": "crud.maintenanceItems.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\MaintenanceItems\\Forms",
                "livewireIndexComponentName": "MaintenanceItemIndex",
                "livewireShowComponentName": "MaintenanceItemShow",
                "livewireCreateComponentName": "MaintenanceItemCreate",
                "livewireEditComponentName": "MaintenanceItemEdit",
                "defaultSearchColumnId": 113,
                "defaultSortColumnId": 112,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.maintenanceItems.itemTitle",
                    "pluralModelLabel": "crud.maintenanceItems.collectionTitle",
                    "navigationLabel": "crud.maintenanceItems.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 9,
                "createdAt": "2025-01-29 21:16:40",
                "updatedAt": "2025-01-29 21:16:40",
                "isHasManyDetail": true
            },
            "item_10": {
                "type": "Filament",
                "name": "Asset",
                "plural": "Assets",
                "sectionId": 4,
                "modelId": 7,
                "tableId": 14,
                "projectId": 1,
                "basePath": "Assets",
                "settings": {
                    "itemName": "asset",
                    "collectionName": "assets",
                    "itemTitle": "crud.assets.itemTitle",
                    "collectionTitle": "crud.assets.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Assets\\Forms",
                "livewireIndexComponentName": "AssetIndex",
                "livewireShowComponentName": "AssetShow",
                "livewireCreateComponentName": "AssetCreate",
                "livewireEditComponentName": "AssetEdit",
                "defaultSearchColumnId": 89,
                "defaultSortColumnId": 88,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.assets.itemTitle",
                    "pluralModelLabel": "crud.assets.collectionTitle",
                    "navigationLabel": "crud.assets.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 10,
                "createdAt": "2025-01-29 21:16:56",
                "updatedAt": "2025-01-29 21:16:56"
            },
            "item_11": {
                "type": "Filament",
                "name": "Maintenance Item",
                "plural": "Maintenance Items",
                "sectionId": 4,
                "modelId": 17,
                "tableId": 19,
                "projectId": 1,
                "basePath": "AssetMaintenance ItemsDetail",
                "settings": {
                    "itemName": "maintenanceItem",
                    "collectionName": "maintenanceItems",
                    "itemTitle": "crud.maintenanceItems.itemTitle",
                    "collectionTitle": "crud.maintenanceItems.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\MaintenanceItems\\Forms",
                "livewireIndexComponentName": "MaintenanceItemIndex",
                "livewireShowComponentName": "MaintenanceItemShow",
                "livewireCreateComponentName": "MaintenanceItemCreate",
                "livewireEditComponentName": "MaintenanceItemEdit",
                "defaultSearchColumnId": 113,
                "defaultSortColumnId": 112,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.maintenanceItems.itemTitle",
                    "pluralModelLabel": "crud.maintenanceItems.collectionTitle",
                    "navigationLabel": "crud.maintenanceItems.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 11,
                "createdAt": "2025-01-29 21:17:57",
                "updatedAt": "2025-01-29 21:17:57",
                "isHasManyDetail": true
            },
            "item_12": {
                "type": "Filament",
                "name": "MaintenanceDepartment",
                "plural": "MaintenanceDepartments",
                "sectionId": 4,
                "modelId": 16,
                "tableId": 18,
                "projectId": 1,
                "basePath": "Maintenance Departments",
                "settings": {
                    "itemName": "maintenanceDepartment",
                    "collectionName": "maintenanceDepartments",
                    "itemTitle": "crud.maintenanceDepartments.itemTitle",
                    "collectionTitle": "crud.maintenanceDepartments.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\MaintenanceDepartments\\Forms",
                "livewireIndexComponentName": "MaintenanceDepartmentIndex",
                "livewireShowComponentName": "MaintenanceDepartmentShow",
                "livewireCreateComponentName": "MaintenanceDepartmentCreate",
                "livewireEditComponentName": "MaintenanceDepartmentEdit",
                "defaultSearchColumnId": 106,
                "defaultSortColumnId": 109,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.maintenanceDepartments.itemTitle",
                    "pluralModelLabel": "crud.maintenanceDepartments.collectionTitle",
                    "navigationLabel": "crud.maintenanceDepartments.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 12,
                "createdAt": "2025-01-29 21:18:40",
                "updatedAt": "2025-01-29 21:18:40"
            },
            "item_13": {
                "type": "Filament",
                "name": "Maintenance Item",
                "plural": "Maintenance Items",
                "sectionId": 4,
                "modelId": 17,
                "tableId": 19,
                "projectId": 1,
                "basePath": "Maintenance DepartmentMaintenance ItemsDetail",
                "settings": {
                    "itemName": "maintenanceItem",
                    "collectionName": "maintenanceItems",
                    "itemTitle": "crud.maintenanceItems.itemTitle",
                    "collectionTitle": "crud.maintenanceItems.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\MaintenanceItems\\Forms",
                "livewireIndexComponentName": "MaintenanceItemIndex",
                "livewireShowComponentName": "MaintenanceItemShow",
                "livewireCreateComponentName": "MaintenanceItemCreate",
                "livewireEditComponentName": "MaintenanceItemEdit",
                "defaultSearchColumnId": 113,
                "defaultSortColumnId": 112,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.maintenanceItems.itemTitle",
                    "pluralModelLabel": "crud.maintenanceItems.collectionTitle",
                    "navigationLabel": "crud.maintenanceItems.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 13,
                "createdAt": "2025-01-29 21:18:45",
                "updatedAt": "2025-01-29 21:18:45",
                "isHasManyDetail": true
            },
            "item_14": {
                "type": "Filament",
                "name": "MaintenanceItem",
                "plural": "MaintenanceItems",
                "sectionId": 4,
                "modelId": 17,
                "tableId": 19,
                "projectId": 1,
                "basePath": "Maintenance Items",
                "settings": {
                    "itemName": "maintenanceItem",
                    "collectionName": "maintenanceItems",
                    "itemTitle": "crud.maintenanceItems.itemTitle",
                    "collectionTitle": "crud.maintenanceItems.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\MaintenanceItems\\Forms",
                "livewireIndexComponentName": "MaintenanceItemIndex",
                "livewireShowComponentName": "MaintenanceItemShow",
                "livewireCreateComponentName": "MaintenanceItemCreate",
                "livewireEditComponentName": "MaintenanceItemEdit",
                "defaultSearchColumnId": 113,
                "defaultSortColumnId": 112,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.maintenanceItems.itemTitle",
                    "pluralModelLabel": "crud.maintenanceItems.collectionTitle",
                    "navigationLabel": "crud.maintenanceItems.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 14,
                "createdAt": "2025-01-29 21:19:00",
                "updatedAt": "2025-01-29 21:19:00"
            },
            "item_15": {
                "type": "Filament",
                "name": "Damaged",
                "plural": "Damageds",
                "sectionId": 4,
                "modelId": 78,
                "tableId": 14,
                "projectId": 1,
                "basePath": "Damageds",
                "settings": {
                    "itemName": "damaged",
                    "collectionName": "damageds",
                    "itemTitle": "crud.damageds.itemTitle",
                    "collectionTitle": "crud.damageds.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Damageds\\Forms",
                "livewireIndexComponentName": "DamagedIndex",
                "livewireShowComponentName": "DamagedShow",
                "livewireCreateComponentName": "DamagedCreate",
                "livewireEditComponentName": "DamagedEdit",
                "defaultSearchColumnId": 89,
                "defaultSortColumnId": 88,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.damageds.itemTitle",
                    "pluralModelLabel": "crud.damageds.collectionTitle",
                    "navigationLabel": "crud.damageds.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 15,
                "createdAt": "2025-01-29 23:45:38",
                "updatedAt": "2025-01-29 23:45:38"
            },
            "item_16": {
                "type": "Filament",
                "name": "Employee",
                "plural": "Employees",
                "sectionId": 4,
                "modelId": 4,
                "tableId": 1,
                "projectId": 1,
                "basePath": "Users",
                "settings": {
                    "itemName": "employee",
                    "collectionName": "employees",
                    "itemTitle": "crud.users.itemTitle",
                    "collectionTitle": "crud.users.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Users\\Forms",
                "livewireIndexComponentName": "UserIndex",
                "livewireShowComponentName": "UserShow",
                "livewireCreateComponentName": "UserCreate",
                "livewireEditComponentName": "UserEdit",
                "defaultSearchColumnId": 2,
                "defaultSortColumnId": 13,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.users.itemTitle",
                    "pluralModelLabel": "crud.users.collectionTitle",
                    "navigationLabel": "crud.users.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 16,
                "createdAt": "2025-01-29 23:54:39",
                "updatedAt": "2025-01-29 23:55:33"
            },
            "item_17": {
                "type": "Livewire",
                "name": "Supplier",
                "plural": "Suppliers",
                "sectionId": 1,
                "modelId": 25,
                "tableId": 21,
                "projectId": 1,
                "basePath": "Suppliers",
                "settings": {
                    "itemName": "supplier",
                    "collectionName": "suppliers",
                    "itemTitle": "crud.suppliers.itemTitle",
                    "collectionTitle": "crud.suppliers.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Suppliers\\Forms",
                "livewireIndexComponentName": "SupplierIndex",
                "livewireShowComponentName": "SupplierShow",
                "livewireCreateComponentName": "SupplierCreate",
                "livewireEditComponentName": "SupplierEdit",
                "defaultSearchColumnId": 123,
                "defaultSortColumnId": 122,
                "defaultSortDirection": "desc",
                "id": 17,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            },
            "item_18": {
                "type": "Livewire",
                "name": "Order",
                "plural": "Orders",
                "sectionId": 1,
                "modelId": 18,
                "tableId": 20,
                "projectId": 1,
                "basePath": "SupplierOrdersDetail",
                "settings": {
                    "itemName": "order",
                    "collectionName": "orders",
                    "itemTitle": "crud.orders.itemTitle",
                    "collectionTitle": "crud.orders.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Orders\\Forms",
                "livewireIndexComponentName": "OrderIndex",
                "livewireShowComponentName": "OrderShow",
                "livewireCreateComponentName": "OrderCreate",
                "livewireEditComponentName": "OrderEdit",
                "defaultSearchColumnId": 128,
                "defaultSortColumnId": 119,
                "defaultSortDirection": "desc",
                "id": 18,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11",
                "isHasManyDetail": true
            },
            "item_19": {
                "type": "Filament",
                "name": "Maintenance Department User",
                "plural": "Maintenance Department User",
                "sectionId": 4,
                "tableId": 17,
                "projectId": 1,
                "basePath": "Maintenance DepartmentMaintenance Department UserDetail",
                "settings": {
                    "itemName": "maintenanceDepartmentUser",
                    "collectionName": "maintenanceDepartmentUser",
                    "itemTitle": "crud.maintenanceDepartmentUser.itemTitle",
                    "collectionTitle": "crud.maintenanceDepartmentUser.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\MaintenanceDepartmentUser\\Forms",
                "livewireIndexComponentName": "MaintenanceDepartmentUserIndex",
                "livewireShowComponentName": "MaintenanceDepartmentUserShow",
                "livewireCreateComponentName": "MaintenanceDepartmentUserCreate",
                "livewireEditComponentName": "MaintenanceDepartmentUserEdit",
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.maintenanceDepartmentUser.itemTitle",
                    "pluralModelLabel": "crud.maintenanceDepartmentUser.collectionTitle",
                    "navigationLabel": "crud.maintenanceDepartmentUser.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 19,
                "createdAt": "2025-01-30 11:45:31",
                "updatedAt": "2025-01-30 11:45:31",
                "isBelongsToManyDetail": true
            }
        },
        "crud_panels": {
            "item_1": {
                "title": "Main",
                "crudId": 1,
                "order": 0,
                "id": 1,
                "createdAt": "2025-01-29 21:13:54",
                "updatedAt": "2025-01-29 21:13:54"
            },
            "__tableData": {
                "count": 19,
                "lastPrimaryKey": 19,
                "index": {
                    "1": {
                        "hasMany": {
                            "inputs.panelId": [
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "inputs.panelId": [
                                4,
                                5,
                                6
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "inputs.panelId": [
                                7,
                                8,
                                9,
                                10
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "inputs.panelId": [
                                11,
                                13
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "inputs.panelId": [
                                14,
                                15
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "inputs.panelId": [
                                16,
                                17,
                                18
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {
                            "inputs.panelId": [
                                19,
                                20,
                                21,
                                22
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "inputs.panelId": [
                                23,
                                24,
                                25
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "inputs.panelId": [
                                26,
                                27,
                                28,
                                29
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "inputs.panelId": [
                                30,
                                31,
                                32,
                                33
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "inputs.panelId": [
                                35,
                                36,
                                37
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "inputs.panelId": [
                                38,
                                39,
                                40
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "inputs.panelId": [
                                42,
                                43,
                                44,
                                45
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "inputs.panelId": [
                                47,
                                48,
                                49,
                                50,
                                51,
                                52
                            ]
                        }
                    },
                    "16": {
                        "hasMany": {
                            "inputs.panelId": [
                                53,
                                54,
                                55
                            ]
                        }
                    },
                    "17": {
                        "hasMany": {
                            "inputs.panelId": [
                                56,
                                57,
                                58
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "inputs.panelId": [
                                59,
                                60,
                                61
                            ]
                        }
                    },
                    "19": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "title": "Main",
                "crudId": 2,
                "order": 0,
                "id": 2,
                "createdAt": "2025-01-29 21:14:02",
                "updatedAt": "2025-01-29 21:14:02"
            },
            "item_3": {
                "title": "Main",
                "crudId": 3,
                "order": 0,
                "id": 3,
                "createdAt": "2025-01-29 21:14:26",
                "updatedAt": "2025-01-29 21:14:26"
            },
            "item_4": {
                "title": "Main",
                "crudId": 4,
                "order": 0,
                "id": 4,
                "createdAt": "2025-01-29 21:14:37",
                "updatedAt": "2025-01-29 21:14:37"
            },
            "item_5": {
                "title": "Main",
                "crudId": 5,
                "order": 0,
                "id": 5,
                "createdAt": "2025-01-29 21:15:12",
                "updatedAt": "2025-01-29 21:15:12"
            },
            "item_6": {
                "title": "Main",
                "crudId": 6,
                "order": 0,
                "id": 6,
                "createdAt": "2025-01-29 21:15:25",
                "updatedAt": "2025-01-29 21:15:25"
            },
            "item_7": {
                "title": "Main",
                "crudId": 7,
                "order": 0,
                "id": 7,
                "createdAt": "2025-01-29 21:16:02",
                "updatedAt": "2025-01-29 21:16:02"
            },
            "item_8": {
                "title": "Main",
                "crudId": 8,
                "order": 0,
                "id": 8,
                "createdAt": "2025-01-29 21:16:30",
                "updatedAt": "2025-01-29 21:16:30"
            },
            "item_9": {
                "title": "Main",
                "crudId": 9,
                "order": 0,
                "id": 9,
                "createdAt": "2025-01-29 21:16:40",
                "updatedAt": "2025-01-29 21:16:40"
            },
            "item_10": {
                "title": "Main",
                "crudId": 10,
                "order": 0,
                "id": 10,
                "createdAt": "2025-01-29 21:16:56",
                "updatedAt": "2025-01-29 21:16:56"
            },
            "item_11": {
                "title": "Main",
                "crudId": 11,
                "order": 0,
                "id": 11,
                "createdAt": "2025-01-29 21:17:57",
                "updatedAt": "2025-01-29 21:17:57"
            },
            "item_12": {
                "title": "Main",
                "crudId": 12,
                "order": 0,
                "id": 12,
                "createdAt": "2025-01-29 21:18:40",
                "updatedAt": "2025-01-29 21:18:40"
            },
            "item_13": {
                "title": "Main",
                "crudId": 13,
                "order": 0,
                "id": 13,
                "createdAt": "2025-01-29 21:18:45",
                "updatedAt": "2025-01-29 21:18:45"
            },
            "item_14": {
                "title": "Main",
                "crudId": 14,
                "order": 0,
                "id": 14,
                "createdAt": "2025-01-29 21:19:00",
                "updatedAt": "2025-01-29 21:19:00"
            },
            "item_15": {
                "title": "Main",
                "crudId": 15,
                "order": 0,
                "id": 15,
                "createdAt": "2025-01-29 23:45:38",
                "updatedAt": "2025-01-29 23:45:38"
            },
            "item_16": {
                "title": "Main",
                "crudId": 16,
                "order": 0,
                "id": 16,
                "createdAt": "2025-01-29 23:54:39",
                "updatedAt": "2025-01-29 23:54:39"
            },
            "item_17": {
                "title": "Main",
                "crudId": 17,
                "order": 0,
                "id": 17,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            },
            "item_18": {
                "title": "Main",
                "crudId": 18,
                "order": 0,
                "id": 18,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            },
            "item_19": {
                "title": "Main",
                "crudId": 19,
                "order": 0,
                "id": 19,
                "createdAt": "2025-01-30 11:45:31",
                "updatedAt": "2025-01-30 11:45:31"
            }
        },
        "inputs": {
            "item_1": {
                "crudId": 1,
                "columnId": 123,
                "name": "name",
                "label": "crud.suppliers.inputs.name.label",
                "placeholder": "crud.suppliers.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.suppliers.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.suppliers.filament.name.label",
                        "description": "crud.suppliers.filament.name.description"
                    }
                },
                "panelId": 1,
                "id": 1,
                "createdAt": "2025-01-29 21:13:54",
                "updatedAt": "2025-01-29 21:13:54"
            },
            "__tableData": {
                "count": 57,
                "lastPrimaryKey": 61,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {}
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {}
                    },
                    "55": {
                        "hasMany": {}
                    },
                    "56": {
                        "hasMany": {}
                    },
                    "57": {
                        "hasMany": {}
                    },
                    "58": {
                        "hasMany": {}
                    },
                    "59": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {}
                    },
                    "61": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "crudId": 1,
                "columnId": 124,
                "name": "phone",
                "label": "crud.suppliers.inputs.phone.label",
                "placeholder": "crud.suppliers.inputs.phone.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.suppliers.filament.phone.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.suppliers.filament.phone.label",
                        "description": "crud.suppliers.filament.phone.description"
                    }
                },
                "panelId": 1,
                "id": 2,
                "createdAt": "2025-01-29 21:13:54",
                "updatedAt": "2025-01-29 21:13:54"
            },
            "item_3": {
                "crudId": 1,
                "columnId": 141,
                "name": "location",
                "label": "crud.suppliers.inputs.location.label",
                "placeholder": "crud.suppliers.inputs.location.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.suppliers.filament.location.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.suppliers.filament.location.label",
                        "description": "crud.suppliers.filament.location.description"
                    }
                },
                "panelId": 1,
                "id": 3,
                "createdAt": "2025-01-29 21:13:54",
                "updatedAt": "2025-01-29 21:13:54"
            },
            "item_4": {
                "crudId": 2,
                "columnId": 127,
                "name": "warehouse_id",
                "label": "crud.orders.inputs.warehouse_id.label",
                "placeholder": "crud.orders.inputs.warehouse_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 28,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.orders.filament.warehouse_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.orders.filament.warehouse_id.loading_message",
                        "noResultMessage": "crud.orders.filament.warehouse_id.no_result_message",
                        "searchMessage": "crud.orders.filament.warehouse_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.orders.filament.warehouse_id.label"
                    }
                },
                "panelId": 2,
                "id": 4,
                "createdAt": "2025-01-29 21:14:02",
                "updatedAt": "2025-01-29 21:14:02"
            },
            "item_5": {
                "crudId": 2,
                "columnId": 128,
                "name": "name",
                "label": "crud.orders.inputs.name.label",
                "placeholder": "crud.orders.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.orders.filament.name.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.orders.filament.name.label",
                        "description": "crud.orders.filament.name.description"
                    }
                },
                "panelId": 2,
                "id": 5,
                "createdAt": "2025-01-29 21:14:02",
                "updatedAt": "2025-01-29 21:14:02"
            },
            "item_6": {
                "crudId": 2,
                "columnId": 142,
                "name": "status",
                "label": "crud.orders.inputs.status.label",
                "placeholder": "crud.orders.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.orders.filament.status.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.orders.filament.status.label",
                        "description": "crud.orders.filament.status.description",
                        "showAsBadge": true,
                        "badgeColors": [
                            {
                                "label": "Wating",
                                "color": "info"
                            },
                            {
                                "label": "Approve",
                                "color": "success"
                            },
                            {
                                "label": "Reject",
                                "color": "danger"
                            }
                        ]
                    }
                },
                "panelId": 2,
                "id": 6,
                "createdAt": "2025-01-29 21:14:02",
                "updatedAt": "2025-01-29 21:39:57"
            },
            "item_7": {
                "crudId": 3,
                "columnId": 126,
                "name": "supplier_id",
                "label": "crud.orders.inputs.supplier_id.label",
                "placeholder": "crud.orders.inputs.supplier_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 26,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.orders.filament.supplier_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.orders.filament.supplier_id.loading_message",
                        "noResultMessage": "crud.orders.filament.supplier_id.no_result_message",
                        "searchMessage": "crud.orders.filament.supplier_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.orders.filament.supplier_id.label"
                    }
                },
                "panelId": 3,
                "id": 7,
                "createdAt": "2025-01-29 21:14:26",
                "updatedAt": "2025-01-29 21:14:26"
            },
            "item_8": {
                "crudId": 3,
                "columnId": 127,
                "name": "warehouse_id",
                "label": "crud.orders.inputs.warehouse_id.label",
                "placeholder": "crud.orders.inputs.warehouse_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 28,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.orders.filament.warehouse_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.orders.filament.warehouse_id.loading_message",
                        "noResultMessage": "crud.orders.filament.warehouse_id.no_result_message",
                        "searchMessage": "crud.orders.filament.warehouse_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.orders.filament.warehouse_id.label"
                    }
                },
                "panelId": 3,
                "id": 8,
                "createdAt": "2025-01-29 21:14:26",
                "updatedAt": "2025-01-29 21:14:26"
            },
            "item_9": {
                "crudId": 3,
                "columnId": 128,
                "name": "name",
                "label": "crud.orders.inputs.name.label",
                "placeholder": "crud.orders.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.orders.filament.name.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.orders.filament.name.label",
                        "description": "crud.orders.filament.name.description"
                    }
                },
                "panelId": 3,
                "id": 9,
                "createdAt": "2025-01-29 21:14:26",
                "updatedAt": "2025-01-29 21:14:26"
            },
            "item_10": {
                "crudId": 3,
                "columnId": 142,
                "name": "status",
                "label": "crud.orders.inputs.status.label",
                "placeholder": "crud.orders.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.orders.filament.status.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.orders.filament.status.label",
                        "description": "crud.orders.filament.status.description"
                    }
                },
                "panelId": 3,
                "id": 10,
                "createdAt": "2025-01-29 21:14:26",
                "updatedAt": "2025-01-29 21:14:26"
            },
            "item_11": {
                "crudId": 4,
                "columnId": 136,
                "name": "name",
                "label": "crud.orderItems.inputs.name.label",
                "placeholder": "crud.orderItems.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.orderItems.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.orderItems.filament.name.label",
                        "description": "crud.orderItems.filament.name.description"
                    }
                },
                "panelId": 4,
                "id": 11,
                "createdAt": "2025-01-29 21:14:37",
                "updatedAt": "2025-01-29 21:14:37"
            },
            "item_13": {
                "crudId": 4,
                "columnId": 143,
                "name": "price",
                "label": "crud.orderItems.inputs.price.label",
                "placeholder": "crud.orderItems.inputs.price.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.orderItems.filament.price.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.orderItems.filament.price.label",
                        "description": "crud.orderItems.filament.price.description"
                    }
                },
                "panelId": 4,
                "id": 13,
                "createdAt": "2025-01-29 21:14:37",
                "updatedAt": "2025-01-29 21:14:37"
            },
            "item_14": {
                "crudId": 5,
                "columnId": 84,
                "name": "name",
                "label": "crud.warehouses.inputs.name.label",
                "placeholder": "crud.warehouses.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.warehouses.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.warehouses.filament.name.label",
                        "description": "crud.warehouses.filament.name.description"
                    }
                },
                "panelId": 5,
                "id": 14,
                "createdAt": "2025-01-29 21:15:12",
                "updatedAt": "2025-01-29 21:15:12"
            },
            "item_15": {
                "crudId": 5,
                "columnId": 144,
                "name": "location",
                "label": "crud.warehouses.inputs.location.label",
                "placeholder": "crud.warehouses.inputs.location.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.warehouses.filament.location.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.warehouses.filament.location.label",
                        "description": "crud.warehouses.filament.location.description"
                    }
                },
                "panelId": 5,
                "id": 15,
                "createdAt": "2025-01-29 21:15:12",
                "updatedAt": "2025-01-29 21:15:12"
            },
            "item_16": {
                "crudId": 6,
                "columnId": 89,
                "name": "name",
                "label": "crud.items.inputs.name.label",
                "placeholder": "crud.items.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.items.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.items.filament.name.label",
                        "description": "crud.items.filament.name.description"
                    }
                },
                "panelId": 6,
                "id": 16,
                "createdAt": "2025-01-29 21:15:25",
                "updatedAt": "2025-01-29 21:15:25"
            },
            "item_17": {
                "crudId": 6,
                "columnId": 92,
                "name": "status",
                "label": "crud.items.inputs.status.label",
                "placeholder": "crud.items.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "In where house",
                        "value": "in_where_house"
                    },
                    {
                        "label": "Asset",
                        "value": "asset"
                    },
                    {
                        "label": "In maintenance",
                        "value": "in_maintenance"
                    },
                    {
                        "label": "Damaged",
                        "value": "damaged"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.items.filament.status.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.items.filament.status.loading_message",
                        "noResultMessage": "crud.items.filament.status.no_result_message",
                        "searchMessage": "crud.items.filament.status.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.items.filament.status.label"
                    }
                },
                "panelId": 6,
                "id": 17,
                "createdAt": "2025-01-29 21:15:25",
                "updatedAt": "2025-01-29 21:15:25"
            },
            "item_18": {
                "crudId": 6,
                "columnId": 95,
                "name": "user_id",
                "label": "crud.items.inputs.user_id.label",
                "placeholder": "crud.items.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 5,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.items.filament.user_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.items.filament.user_id.loading_message",
                        "noResultMessage": "crud.items.filament.user_id.no_result_message",
                        "searchMessage": "crud.items.filament.user_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.items.filament.user_id.label"
                    }
                },
                "panelId": 6,
                "id": 18,
                "createdAt": "2025-01-29 21:15:25",
                "updatedAt": "2025-01-29 21:15:25"
            },
            "item_19": {
                "crudId": 8,
                "columnId": 89,
                "name": "name",
                "label": "crud.items.inputs.name.label",
                "placeholder": "crud.items.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.items.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.items.filament.name.label",
                        "description": "crud.items.filament.name.description"
                    }
                },
                "panelId": 8,
                "id": 19,
                "createdAt": "2025-01-29 21:16:30",
                "updatedAt": "2025-01-29 21:16:30"
            },
            "item_20": {
                "crudId": 8,
                "columnId": 92,
                "name": "status",
                "label": "crud.items.inputs.status.label",
                "placeholder": "crud.items.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "In where house",
                        "value": "in_where_house"
                    },
                    {
                        "label": "Asset",
                        "value": "asset"
                    },
                    {
                        "label": "In maintenance",
                        "value": "in_maintenance"
                    },
                    {
                        "label": "Damaged",
                        "value": "damaged"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.items.filament.status.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.items.filament.status.loading_message",
                        "noResultMessage": "crud.items.filament.status.no_result_message",
                        "searchMessage": "crud.items.filament.status.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.items.filament.status.label"
                    }
                },
                "panelId": 8,
                "id": 20,
                "createdAt": "2025-01-29 21:16:30",
                "updatedAt": "2025-01-29 21:16:30"
            },
            "item_21": {
                "crudId": 8,
                "columnId": 95,
                "name": "user_id",
                "label": "crud.items.inputs.user_id.label",
                "placeholder": "crud.items.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 5,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.items.filament.user_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.items.filament.user_id.loading_message",
                        "noResultMessage": "crud.items.filament.user_id.no_result_message",
                        "searchMessage": "crud.items.filament.user_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.items.filament.user_id.label"
                    }
                },
                "panelId": 8,
                "id": 21,
                "createdAt": "2025-01-29 21:16:30",
                "updatedAt": "2025-01-29 21:16:30"
            },
            "item_22": {
                "crudId": 8,
                "columnId": 103,
                "name": "warehouse_id",
                "label": "crud.items.inputs.warehouse_id.label",
                "placeholder": "crud.items.inputs.warehouse_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 11,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.items.filament.warehouse_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.items.filament.warehouse_id.loading_message",
                        "noResultMessage": "crud.items.filament.warehouse_id.no_result_message",
                        "searchMessage": "crud.items.filament.warehouse_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.items.filament.warehouse_id.label"
                    }
                },
                "panelId": 8,
                "id": 22,
                "createdAt": "2025-01-29 21:16:30",
                "updatedAt": "2025-01-29 21:16:30"
            },
            "item_23": {
                "crudId": 9,
                "columnId": 113,
                "name": "status",
                "label": "crud.maintenanceItems.inputs.status.label",
                "placeholder": "crud.maintenanceItems.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.maintenanceItems.filament.status.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.status.label",
                        "description": "crud.maintenanceItems.filament.status.description"
                    }
                },
                "panelId": 9,
                "id": 23,
                "createdAt": "2025-01-29 21:16:40",
                "updatedAt": "2025-01-29 21:16:40"
            },
            "item_24": {
                "crudId": 9,
                "columnId": 114,
                "name": "note",
                "label": "crud.maintenanceItems.inputs.note.label",
                "placeholder": "crud.maintenanceItems.inputs.note.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "rich-editor",
                        "helperText": "crud.maintenanceItems.filament.note.helper_text",
                        "toolbarButtons": null,
                        "disableToolbarButtons": null,
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "rows": null,
                        "cols": null,
                        "autosize": false,
                        "exactLength": null
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.note.label"
                    }
                },
                "panelId": 9,
                "id": 24,
                "createdAt": "2025-01-29 21:16:40",
                "updatedAt": "2025-01-29 21:16:40"
            },
            "item_25": {
                "crudId": 9,
                "columnId": 116,
                "name": "maintenance_department_id",
                "label": "crud.maintenanceItems.inputs.maintenance_department_id.label",
                "placeholder": "crud.maintenanceItems.inputs.maintenance_department_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 24,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.maintenanceItems.filament.maintenance_department_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.maintenanceItems.filament.maintenance_department_id.loading_message",
                        "noResultMessage": "crud.maintenanceItems.filament.maintenance_department_id.no_result_message",
                        "searchMessage": "crud.maintenanceItems.filament.maintenance_department_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.maintenance_department_id.label"
                    }
                },
                "panelId": 9,
                "id": 25,
                "createdAt": "2025-01-29 21:16:40",
                "updatedAt": "2025-01-29 21:16:40"
            },
            "item_26": {
                "crudId": 10,
                "columnId": 89,
                "name": "name",
                "label": "crud.assets.inputs.name.label",
                "placeholder": "crud.assets.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.assets.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.assets.filament.name.label",
                        "description": "crud.assets.filament.name.description"
                    }
                },
                "panelId": 10,
                "id": 26,
                "createdAt": "2025-01-29 21:16:56",
                "updatedAt": "2025-01-29 21:16:56"
            },
            "item_27": {
                "crudId": 10,
                "columnId": 92,
                "name": "status",
                "label": "crud.assets.inputs.status.label",
                "placeholder": "crud.assets.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "In where house",
                        "value": "in_where_house"
                    },
                    {
                        "label": "Asset",
                        "value": "asset"
                    },
                    {
                        "label": "In maintenance",
                        "value": "in_maintenance"
                    },
                    {
                        "label": "Damaged",
                        "value": "damaged"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.assets.filament.status.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.assets.filament.status.loading_message",
                        "noResultMessage": "crud.assets.filament.status.no_result_message",
                        "searchMessage": "crud.assets.filament.status.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.assets.filament.status.label"
                    }
                },
                "panelId": 10,
                "id": 27,
                "createdAt": "2025-01-29 21:16:56",
                "updatedAt": "2025-01-29 21:16:56"
            },
            "item_28": {
                "crudId": 10,
                "columnId": 95,
                "name": "user_id",
                "label": "crud.assets.inputs.user_id.label",
                "placeholder": "crud.assets.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 5,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.assets.filament.user_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.assets.filament.user_id.loading_message",
                        "noResultMessage": "crud.assets.filament.user_id.no_result_message",
                        "searchMessage": "crud.assets.filament.user_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.assets.filament.user_id.label"
                    }
                },
                "panelId": 10,
                "id": 28,
                "createdAt": "2025-01-29 21:16:56",
                "updatedAt": "2025-01-29 21:16:56"
            },
            "item_29": {
                "crudId": 10,
                "columnId": 103,
                "name": "warehouse_id",
                "label": "crud.assets.inputs.warehouse_id.label",
                "placeholder": "crud.assets.inputs.warehouse_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 11,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.assets.filament.warehouse_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.assets.filament.warehouse_id.loading_message",
                        "noResultMessage": "crud.assets.filament.warehouse_id.no_result_message",
                        "searchMessage": "crud.assets.filament.warehouse_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.assets.filament.warehouse_id.label"
                    }
                },
                "panelId": 10,
                "id": 29,
                "createdAt": "2025-01-29 21:16:56",
                "updatedAt": "2025-01-29 21:16:56"
            },
            "item_30": {
                "crudId": 11,
                "columnId": 113,
                "name": "status",
                "label": "crud.maintenanceItems.inputs.status.label",
                "placeholder": "crud.maintenanceItems.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.maintenanceItems.filament.status.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.status.label",
                        "description": "crud.maintenanceItems.filament.status.description"
                    }
                },
                "panelId": 11,
                "id": 30,
                "createdAt": "2025-01-29 21:17:57",
                "updatedAt": "2025-01-29 21:17:57"
            },
            "item_31": {
                "crudId": 11,
                "columnId": 114,
                "name": "note",
                "label": "crud.maintenanceItems.inputs.note.label",
                "placeholder": "crud.maintenanceItems.inputs.note.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "rich-editor",
                        "helperText": "crud.maintenanceItems.filament.note.helper_text",
                        "toolbarButtons": null,
                        "disableToolbarButtons": null,
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "rows": null,
                        "cols": null,
                        "autosize": false,
                        "exactLength": null
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.note.label"
                    }
                },
                "panelId": 11,
                "id": 31,
                "createdAt": "2025-01-29 21:17:57",
                "updatedAt": "2025-01-29 21:17:57"
            },
            "item_32": {
                "crudId": 11,
                "columnId": 115,
                "name": "item_id",
                "label": "crud.maintenanceItems.inputs.item_id.label",
                "placeholder": "crud.maintenanceItems.inputs.item_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 22,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.maintenanceItems.filament.item_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.maintenanceItems.filament.item_id.loading_message",
                        "noResultMessage": "crud.maintenanceItems.filament.item_id.no_result_message",
                        "searchMessage": "crud.maintenanceItems.filament.item_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.item_id.label"
                    }
                },
                "panelId": 11,
                "id": 32,
                "createdAt": "2025-01-29 21:17:57",
                "updatedAt": "2025-01-29 21:17:57"
            },
            "item_33": {
                "crudId": 11,
                "columnId": 116,
                "name": "maintenance_department_id",
                "label": "crud.maintenanceItems.inputs.maintenance_department_id.label",
                "placeholder": "crud.maintenanceItems.inputs.maintenance_department_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 24,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.maintenanceItems.filament.maintenance_department_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.maintenanceItems.filament.maintenance_department_id.loading_message",
                        "noResultMessage": "crud.maintenanceItems.filament.maintenance_department_id.no_result_message",
                        "searchMessage": "crud.maintenanceItems.filament.maintenance_department_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.maintenance_department_id.label"
                    }
                },
                "panelId": 11,
                "id": 33,
                "createdAt": "2025-01-29 21:17:57",
                "updatedAt": "2025-01-29 21:17:57"
            },
            "item_35": {
                "crudId": 12,
                "columnId": 106,
                "name": "name",
                "label": "crud.maintenanceDepartments.inputs.name.label",
                "placeholder": "crud.maintenanceDepartments.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.maintenanceDepartments.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceDepartments.filament.name.label",
                        "description": "crud.maintenanceDepartments.filament.name.description"
                    }
                },
                "panelId": 12,
                "id": 35,
                "createdAt": "2025-01-29 21:18:40",
                "updatedAt": "2025-01-29 21:18:40"
            },
            "item_36": {
                "crudId": 12,
                "columnId": 107,
                "name": "location",
                "label": "crud.maintenanceDepartments.inputs.location.label",
                "placeholder": "crud.maintenanceDepartments.inputs.location.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.maintenanceDepartments.filament.location.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceDepartments.filament.location.label",
                        "description": "crud.maintenanceDepartments.filament.location.description"
                    }
                },
                "panelId": 12,
                "id": 36,
                "createdAt": "2025-01-29 21:18:40",
                "updatedAt": "2025-01-29 21:18:40"
            },
            "item_37": {
                "crudId": 12,
                "columnId": 132,
                "name": "type",
                "label": "crud.maintenanceDepartments.inputs.type.label",
                "placeholder": "crud.maintenanceDepartments.inputs.type.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "Internal",
                        "value": "internal"
                    },
                    {
                        "label": "External",
                        "value": "external"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.maintenanceDepartments.filament.type.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.maintenanceDepartments.filament.type.loading_message",
                        "noResultMessage": "crud.maintenanceDepartments.filament.type.no_result_message",
                        "searchMessage": "crud.maintenanceDepartments.filament.type.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceDepartments.filament.type.label"
                    }
                },
                "panelId": 12,
                "id": 37,
                "createdAt": "2025-01-29 21:18:40",
                "updatedAt": "2025-01-29 21:18:40"
            },
            "item_38": {
                "crudId": 13,
                "columnId": 113,
                "name": "status",
                "label": "crud.maintenanceItems.inputs.status.label",
                "placeholder": "crud.maintenanceItems.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.maintenanceItems.filament.status.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.status.label",
                        "description": "crud.maintenanceItems.filament.status.description"
                    }
                },
                "panelId": 13,
                "id": 38,
                "createdAt": "2025-01-29 21:18:45",
                "updatedAt": "2025-01-29 21:18:45"
            },
            "item_39": {
                "crudId": 13,
                "columnId": 114,
                "name": "note",
                "label": "crud.maintenanceItems.inputs.note.label",
                "placeholder": "crud.maintenanceItems.inputs.note.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "rich-editor",
                        "helperText": "crud.maintenanceItems.filament.note.helper_text",
                        "toolbarButtons": null,
                        "disableToolbarButtons": null,
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "rows": null,
                        "cols": null,
                        "autosize": false,
                        "exactLength": null
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.note.label"
                    }
                },
                "panelId": 13,
                "id": 39,
                "createdAt": "2025-01-29 21:18:45",
                "updatedAt": "2025-01-29 21:18:45"
            },
            "item_40": {
                "crudId": 13,
                "columnId": 115,
                "name": "item_id",
                "label": "crud.maintenanceItems.inputs.item_id.label",
                "placeholder": "crud.maintenanceItems.inputs.item_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 22,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.maintenanceItems.filament.item_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.maintenanceItems.filament.item_id.loading_message",
                        "noResultMessage": "crud.maintenanceItems.filament.item_id.no_result_message",
                        "searchMessage": "crud.maintenanceItems.filament.item_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.item_id.label"
                    }
                },
                "panelId": 13,
                "id": 40,
                "createdAt": "2025-01-29 21:18:45",
                "updatedAt": "2025-01-29 21:18:45"
            },
            "item_42": {
                "crudId": 14,
                "columnId": 113,
                "name": "status",
                "label": "crud.maintenanceItems.inputs.status.label",
                "placeholder": "crud.maintenanceItems.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.maintenanceItems.filament.status.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.status.label",
                        "description": "crud.maintenanceItems.filament.status.description"
                    }
                },
                "panelId": 14,
                "id": 42,
                "createdAt": "2025-01-29 21:19:00",
                "updatedAt": "2025-01-29 21:19:00"
            },
            "item_43": {
                "crudId": 14,
                "columnId": 114,
                "name": "note",
                "label": "crud.maintenanceItems.inputs.note.label",
                "placeholder": "crud.maintenanceItems.inputs.note.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "rich-editor",
                        "helperText": "crud.maintenanceItems.filament.note.helper_text",
                        "toolbarButtons": null,
                        "disableToolbarButtons": null,
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "rows": null,
                        "cols": null,
                        "autosize": false,
                        "exactLength": null
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.note.label"
                    }
                },
                "panelId": 14,
                "id": 43,
                "createdAt": "2025-01-29 21:19:00",
                "updatedAt": "2025-01-29 21:19:00"
            },
            "item_44": {
                "crudId": 14,
                "columnId": 115,
                "name": "item_id",
                "label": "crud.maintenanceItems.inputs.item_id.label",
                "placeholder": "crud.maintenanceItems.inputs.item_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 22,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.maintenanceItems.filament.item_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.maintenanceItems.filament.item_id.loading_message",
                        "noResultMessage": "crud.maintenanceItems.filament.item_id.no_result_message",
                        "searchMessage": "crud.maintenanceItems.filament.item_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.item_id.label"
                    }
                },
                "panelId": 14,
                "id": 44,
                "createdAt": "2025-01-29 21:19:00",
                "updatedAt": "2025-01-29 21:19:00"
            },
            "item_45": {
                "crudId": 14,
                "columnId": 116,
                "name": "maintenance_department_id",
                "label": "crud.maintenanceItems.inputs.maintenance_department_id.label",
                "placeholder": "crud.maintenanceItems.inputs.maintenance_department_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 24,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.maintenanceItems.filament.maintenance_department_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.maintenanceItems.filament.maintenance_department_id.loading_message",
                        "noResultMessage": "crud.maintenanceItems.filament.maintenance_department_id.no_result_message",
                        "searchMessage": "crud.maintenanceItems.filament.maintenance_department_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.maintenanceItems.filament.maintenance_department_id.label"
                    }
                },
                "panelId": 14,
                "id": 45,
                "createdAt": "2025-01-29 21:19:00",
                "updatedAt": "2025-01-29 21:19:00"
            },
            "item_47": {
                "crudId": 15,
                "columnId": 89,
                "name": "name",
                "label": "crud.damageds.inputs.name.label",
                "placeholder": "crud.damageds.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.damageds.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.damageds.filament.name.label",
                        "description": "crud.damageds.filament.name.description"
                    }
                },
                "panelId": 15,
                "id": 47,
                "createdAt": "2025-01-29 23:45:38",
                "updatedAt": "2025-01-29 23:45:38"
            },
            "item_48": {
                "crudId": 15,
                "columnId": 92,
                "name": "status",
                "label": "crud.damageds.inputs.status.label",
                "placeholder": "crud.damageds.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "In where house",
                        "value": "in_where_house"
                    },
                    {
                        "label": "Asset",
                        "value": "asset"
                    },
                    {
                        "label": "In maintenance",
                        "value": "in_maintenance"
                    },
                    {
                        "label": "Damaged",
                        "value": "damaged"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.damageds.filament.status.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.damageds.filament.status.loading_message",
                        "noResultMessage": "crud.damageds.filament.status.no_result_message",
                        "searchMessage": "crud.damageds.filament.status.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.damageds.filament.status.label"
                    }
                },
                "panelId": 15,
                "id": 48,
                "createdAt": "2025-01-29 23:45:38",
                "updatedAt": "2025-01-29 23:45:38"
            },
            "item_49": {
                "crudId": 15,
                "columnId": 103,
                "name": "warehouse_id",
                "label": "crud.damageds.inputs.warehouse_id.label",
                "placeholder": "crud.damageds.inputs.warehouse_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 11,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.damageds.filament.warehouse_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.damageds.filament.warehouse_id.loading_message",
                        "noResultMessage": "crud.damageds.filament.warehouse_id.no_result_message",
                        "searchMessage": "crud.damageds.filament.warehouse_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.damageds.filament.warehouse_id.label"
                    }
                },
                "panelId": 15,
                "id": 49,
                "createdAt": "2025-01-29 23:45:38",
                "updatedAt": "2025-01-29 23:45:38"
            },
            "item_50": {
                "crudId": 15,
                "columnId": 95,
                "name": "user_id",
                "label": "crud.damageds.inputs.user_id.label",
                "placeholder": "crud.damageds.inputs.user_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 5,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.damageds.filament.user_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.damageds.filament.user_id.loading_message",
                        "noResultMessage": "crud.damageds.filament.user_id.no_result_message",
                        "searchMessage": "crud.damageds.filament.user_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.damageds.filament.user_id.label"
                    }
                },
                "panelId": 15,
                "id": 50,
                "createdAt": "2025-01-29 23:45:38",
                "updatedAt": "2025-01-29 23:45:38"
            },
            "item_51": {
                "crudId": 15,
                "columnId": 195,
                "name": "barcode",
                "label": "crud.damageds.inputs.barcode.label",
                "placeholder": "crud.damageds.inputs.barcode.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.damageds.filament.barcode.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.damageds.filament.barcode.label",
                        "description": "crud.damageds.filament.barcode.description"
                    }
                },
                "panelId": 15,
                "id": 51,
                "createdAt": "2025-01-29 23:45:38",
                "updatedAt": "2025-01-29 23:45:38"
            },
            "item_52": {
                "crudId": 15,
                "columnId": 196,
                "name": "barcode_image",
                "label": "crud.damageds.inputs.barcode_image.label",
                "placeholder": "crud.damageds.inputs.barcode_image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.damageds.filament.barcode_image.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.damageds.filament.barcode_image.label",
                        "description": "crud.damageds.filament.barcode_image.description"
                    }
                },
                "panelId": 15,
                "id": 52,
                "createdAt": "2025-01-29 23:45:38",
                "updatedAt": "2025-01-29 23:45:38"
            },
            "item_53": {
                "crudId": 16,
                "columnId": 2,
                "name": "name",
                "label": "crud.users.inputs.name.label",
                "placeholder": "crud.users.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.users.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.users.filament.name.label",
                        "description": "crud.users.filament.name.description"
                    }
                },
                "panelId": 16,
                "id": 53,
                "createdAt": "2025-01-29 23:54:39",
                "updatedAt": "2025-01-29 23:54:39"
            },
            "item_54": {
                "crudId": 16,
                "columnId": 3,
                "name": "email",
                "label": "crud.users.inputs.email.label",
                "placeholder": "crud.users.inputs.email.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "email",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:users,email"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:users,email"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.users.filament.email.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.users.filament.email.label",
                        "description": "crud.users.filament.email.description"
                    }
                },
                "panelId": 16,
                "id": 54,
                "createdAt": "2025-01-29 23:54:39",
                "updatedAt": "2025-01-29 23:54:39"
            },
            "item_55": {
                "crudId": 16,
                "columnId": 5,
                "name": "password",
                "label": "crud.users.inputs.password.label",
                "placeholder": "crud.users.inputs.password.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": false,
                "showOnIndex": false,
                "type": "password",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "min:6"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "min:6"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.users.filament.password.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.users.filament.password.label",
                        "description": "crud.users.filament.password.description"
                    }
                },
                "panelId": 16,
                "id": 55,
                "createdAt": "2025-01-29 23:54:39",
                "updatedAt": "2025-01-29 23:54:39"
            },
            "item_56": {
                "crudId": 17,
                "columnId": 123,
                "name": "name",
                "label": "crud.suppliers.inputs.name.label",
                "placeholder": "crud.suppliers.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 17,
                "id": 56,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            },
            "item_57": {
                "crudId": 17,
                "columnId": 124,
                "name": "phone",
                "label": "crud.suppliers.inputs.phone.label",
                "placeholder": "crud.suppliers.inputs.phone.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 17,
                "id": 57,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            },
            "item_58": {
                "crudId": 17,
                "columnId": 141,
                "name": "location",
                "label": "crud.suppliers.inputs.location.label",
                "placeholder": "crud.suppliers.inputs.location.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 17,
                "id": 58,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            },
            "item_59": {
                "crudId": 18,
                "columnId": 127,
                "name": "warehouse_id",
                "label": "crud.orders.inputs.warehouse_id.label",
                "placeholder": "crud.orders.inputs.warehouse_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 28,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 59,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            },
            "item_60": {
                "crudId": 18,
                "columnId": 128,
                "name": "name",
                "label": "crud.orders.inputs.name.label",
                "placeholder": "crud.orders.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 18,
                "id": 60,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            },
            "item_61": {
                "crudId": 18,
                "columnId": 142,
                "name": "status",
                "label": "crud.orders.inputs.status.label",
                "placeholder": "crud.orders.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 18,
                "id": 61,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            }
        },
        "has_many_details": {
            "item_1": {
                "crudId": 1,
                "relationshipId": 25,
                "sectionId": 4,
                "detailCrudId": 2,
                "id": 1,
                "createdAt": "2025-01-29 21:14:02",
                "updatedAt": "2025-01-29 21:14:02"
            },
            "__tableData": {
                "count": 7,
                "lastPrimaryKey": 7,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "crudId": 3,
                "relationshipId": 31,
                "sectionId": 4,
                "detailCrudId": 4,
                "id": 2,
                "createdAt": "2025-01-29 21:14:37",
                "updatedAt": "2025-01-29 21:14:37"
            },
            "item_3": {
                "crudId": 5,
                "relationshipId": 10,
                "sectionId": 4,
                "detailCrudId": 6,
                "id": 3,
                "createdAt": "2025-01-29 21:15:25",
                "updatedAt": "2025-01-29 21:15:25"
            },
            "item_4": {
                "crudId": 8,
                "relationshipId": 21,
                "sectionId": 4,
                "detailCrudId": 9,
                "id": 4,
                "createdAt": "2025-01-29 21:16:40",
                "updatedAt": "2025-01-29 21:16:40"
            },
            "item_5": {
                "crudId": 10,
                "relationshipId": 34,
                "sectionId": 4,
                "detailCrudId": 11,
                "id": 5,
                "createdAt": "2025-01-29 21:17:57",
                "updatedAt": "2025-01-29 21:17:57"
            },
            "item_6": {
                "crudId": 12,
                "relationshipId": 23,
                "sectionId": 4,
                "detailCrudId": 13,
                "id": 6,
                "createdAt": "2025-01-29 21:18:45",
                "updatedAt": "2025-01-29 21:18:45"
            },
            "item_7": {
                "crudId": 17,
                "relationshipId": 25,
                "sectionId": 1,
                "detailCrudId": 18,
                "id": 7,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            }
        },
        "belongs_to_many_details": {
            "item_1": {
                "crudId": 5,
                "relationshipId": 2,
                "sectionId": 4,
                "detailCrudId": 7,
                "id": 1,
                "createdAt": "2025-01-29 21:16:02",
                "updatedAt": "2025-01-29 21:16:02"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "crudId": 12,
                "relationshipId": 20,
                "sectionId": 4,
                "detailCrudId": 19,
                "id": 2,
                "createdAt": "2025-01-30 11:45:31",
                "updatedAt": "2025-01-30 11:45:31"
            }
        },
        "routes": {
            "item_1": {
                "name": "suppliers.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/suppliers",
                "routableId": 17,
                "routableType": "Crud",
                "projectId": 1,
                "id": 1,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            },
            "__tableData": {
                "count": 3,
                "lastPrimaryKey": 3,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "suppliers.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/suppliers/create",
                "routableId": 17,
                "routableType": "Crud",
                "projectId": 1,
                "id": 2,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            },
            "item_3": {
                "name": "suppliers.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/suppliers/{supplier}",
                "routableId": 17,
                "routableType": "Crud",
                "projectId": 1,
                "id": 3,
                "createdAt": "2025-01-30 02:39:11",
                "updatedAt": "2025-01-30 02:39:11"
            }
        }
    },
    "tablesNames": [
        "projects",
        "tables",
        "columns",
        "indices",
        "index_column",
        "models",
        "fillable_model_column",
        "casts_model_column",
        "relationships",
        "hidden_model_column",
        "app_sections",
        "schema_sections",
        "navs",
        "renderable_files",
        "cruds",
        "crud_panels",
        "inputs",
        "has_many_details",
        "belongs_to_many_details",
        "routes"
    ]
}